"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _index=require("../tokenizer/index"),_types=require("../tokenizer/types"),_charcodes=require("../util/charcodes"),_base=require("./base");function isContextual(e){return _base.state.contextualKeyword===e}function isLookaheadContextual(e){const t=_index.lookaheadTypeAndKeyword.call(void 0);return t.type===_types.TokenType.name&&t.contextualKeyword===e}function eatContextual(e){return _base.state.contextualKeyword===e&&_index.eat.call(void 0,_types.TokenType.name)}function expectContextual(e){eatContextual(e)||unexpected()}function canInsertSemicolon(){return _index.match.call(void 0,_types.TokenType.eof)||_index.match.call(void 0,_types.TokenType.braceR)||hasPrecedingLineBreak()}function hasPrecedingLineBreak(){const e=_base.state.tokens[_base.state.tokens.length-1];for(let t=e?e.end:0;t<_base.state.start;t++){const e=_base.input.charCodeAt(t);if(e===_charcodes.charCodes.lineFeed||e===_charcodes.charCodes.carriageReturn||8232===e||8233===e)return!0}return!1}function hasFollowingLineBreak(){const e=_index.nextTokenStart.call(void 0);for(let t=_base.state.end;t<e;t++){const e=_base.input.charCodeAt(t);if(e===_charcodes.charCodes.lineFeed||e===_charcodes.charCodes.carriageReturn||8232===e||8233===e)return!0}return!1}function isLineTerminator(){return _index.eat.call(void 0,_types.TokenType.semi)||canInsertSemicolon()}function semicolon(){isLineTerminator()||unexpected('Unexpected token, expected ";"')}function expect(e){_index.eat.call(void 0,e)||unexpected(`Unexpected token, expected "${_types.formatTokenType.call(void 0,e)}"`)}function unexpected(e="Unexpected token",t=_base.state.start){if(_base.state.error)return;const n=new SyntaxError(e);n.pos=t,_base.state.error=n,_base.state.pos=_base.input.length,_index.finishToken.call(void 0,_types.TokenType.eof)}exports.isContextual=isContextual,exports.isLookaheadContextual=isLookaheadContextual,exports.eatContextual=eatContextual,exports.expectContextual=expectContextual,exports.canInsertSemicolon=canInsertSemicolon,exports.hasPrecedingLineBreak=hasPrecedingLineBreak,exports.hasFollowingLineBreak=hasFollowingLineBreak,exports.isLineTerminator=isLineTerminator,exports.semicolon=semicolon,exports.expect=expect,exports.unexpected=unexpected;