"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _index=require("../tokenizer/index"),_keywords=require("../tokenizer/keywords"),_types=require("../tokenizer/types"),_base=require("../traverser/base"),_expression=require("../traverser/expression"),_statement=require("../traverser/statement"),_util=require("../traverser/util");function isMaybeDefaultImport(e){return(e.type===_types.TokenType.name||!!(e.type&_types.TokenType.IS_KEYWORD))&&e.contextualKeyword!==_keywords.ContextualKeyword._from}function flowParseTypeInitialiser(e){const o=_index.pushTypeContext.call(void 0,0);_util.expect.call(void 0,e||_types.TokenType.colon),flowParseType(),_index.popTypeContext.call(void 0,o)}function flowParsePredicate(){_util.expect.call(void 0,_types.TokenType.modulo),_util.expectContextual.call(void 0,_keywords.ContextualKeyword._checks),_index.eat.call(void 0,_types.TokenType.parenL)&&(_expression.parseExpression.call(void 0),_util.expect.call(void 0,_types.TokenType.parenR))}function flowParseTypeAndPredicateInitialiser(){const e=_index.pushTypeContext.call(void 0,0);_util.expect.call(void 0,_types.TokenType.colon),_index.match.call(void 0,_types.TokenType.modulo)?flowParsePredicate():(flowParseType(),_index.match.call(void 0,_types.TokenType.modulo)&&flowParsePredicate()),_index.popTypeContext.call(void 0,e)}function flowParseDeclareClass(){_index.next.call(void 0),flowParseInterfaceish(!0)}function flowParseDeclareFunction(){_index.next.call(void 0),_expression.parseIdentifier.call(void 0),_index.match.call(void 0,_types.TokenType.lessThan)&&flowParseTypeParameterDeclaration(),_util.expect.call(void 0,_types.TokenType.parenL),flowParseFunctionTypeParams(),_util.expect.call(void 0,_types.TokenType.parenR),flowParseTypeAndPredicateInitialiser(),_util.semicolon.call(void 0)}function flowParseDeclare(){_index.match.call(void 0,_types.TokenType._class)?flowParseDeclareClass():_index.match.call(void 0,_types.TokenType._function)?flowParseDeclareFunction():_index.match.call(void 0,_types.TokenType._var)?flowParseDeclareVariable():_util.eatContextual.call(void 0,_keywords.ContextualKeyword._module)?_index.eat.call(void 0,_types.TokenType.dot)?flowParseDeclareModuleExports():flowParseDeclareModule():_util.isContextual.call(void 0,_keywords.ContextualKeyword._type)?flowParseDeclareTypeAlias():_util.isContextual.call(void 0,_keywords.ContextualKeyword._opaque)?flowParseDeclareOpaqueType():_util.isContextual.call(void 0,_keywords.ContextualKeyword._interface)?flowParseDeclareInterface():_index.match.call(void 0,_types.TokenType._export)?flowParseDeclareExportDeclaration():_util.unexpected.call(void 0)}function flowParseDeclareVariable(){_index.next.call(void 0),flowParseTypeAnnotatableIdentifier(),_util.semicolon.call(void 0)}function flowParseDeclareModule(){for(_index.match.call(void 0,_types.TokenType.string)?_expression.parseExprAtom.call(void 0):_expression.parseIdentifier.call(void 0),_util.expect.call(void 0,_types.TokenType.braceL);!_index.match.call(void 0,_types.TokenType.braceR)&&!_base.state.error;)_index.match.call(void 0,_types.TokenType._import)?(_index.next.call(void 0),_statement.parseImport.call(void 0)):_util.unexpected.call(void 0);_util.expect.call(void 0,_types.TokenType.braceR)}function flowParseDeclareExportDeclaration(){_util.expect.call(void 0,_types.TokenType._export),_index.eat.call(void 0,_types.TokenType._default)?_index.match.call(void 0,_types.TokenType._function)||_index.match.call(void 0,_types.TokenType._class)?flowParseDeclare():(flowParseType(),_util.semicolon.call(void 0)):_index.match.call(void 0,_types.TokenType._var)||_index.match.call(void 0,_types.TokenType._function)||_index.match.call(void 0,_types.TokenType._class)||_util.isContextual.call(void 0,_keywords.ContextualKeyword._opaque)?flowParseDeclare():_index.match.call(void 0,_types.TokenType.star)||_index.match.call(void 0,_types.TokenType.braceL)||_util.isContextual.call(void 0,_keywords.ContextualKeyword._interface)||_util.isContextual.call(void 0,_keywords.ContextualKeyword._type)||_util.isContextual.call(void 0,_keywords.ContextualKeyword._opaque)?_statement.parseExport.call(void 0):_util.unexpected.call(void 0)}function flowParseDeclareModuleExports(){_util.expectContextual.call(void 0,_keywords.ContextualKeyword._exports),flowParseTypeAnnotation(),_util.semicolon.call(void 0)}function flowParseDeclareTypeAlias(){_index.next.call(void 0),flowParseTypeAlias()}function flowParseDeclareOpaqueType(){_index.next.call(void 0),flowParseOpaqueType(!0)}function flowParseDeclareInterface(){_index.next.call(void 0),flowParseInterfaceish()}function flowParseInterfaceish(e=!1){if(flowParseRestrictedIdentifier(),_index.match.call(void 0,_types.TokenType.lessThan)&&flowParseTypeParameterDeclaration(),_index.eat.call(void 0,_types.TokenType._extends))do{flowParseInterfaceExtends()}while(!e&&_index.eat.call(void 0,_types.TokenType.comma));if(_util.isContextual.call(void 0,_keywords.ContextualKeyword._mixins)){_index.next.call(void 0);do{flowParseInterfaceExtends()}while(_index.eat.call(void 0,_types.TokenType.comma))}if(_util.isContextual.call(void 0,_keywords.ContextualKeyword._implements)){_index.next.call(void 0);do{flowParseInterfaceExtends()}while(_index.eat.call(void 0,_types.TokenType.comma))}flowParseObjectType(e,!1,e)}function flowParseInterfaceExtends(){flowParseQualifiedTypeIdentifier(!1),_index.match.call(void 0,_types.TokenType.lessThan)&&flowParseTypeParameterInstantiation()}function flowParseInterface(){flowParseInterfaceish()}function flowParseRestrictedIdentifier(){_expression.parseIdentifier.call(void 0)}function flowParseTypeAlias(){flowParseRestrictedIdentifier(),_index.match.call(void 0,_types.TokenType.lessThan)&&flowParseTypeParameterDeclaration(),flowParseTypeInitialiser(_types.TokenType.eq),_util.semicolon.call(void 0)}function flowParseOpaqueType(e){_util.expectContextual.call(void 0,_keywords.ContextualKeyword._type),flowParseRestrictedIdentifier(),_index.match.call(void 0,_types.TokenType.lessThan)&&flowParseTypeParameterDeclaration(),_index.match.call(void 0,_types.TokenType.colon)&&flowParseTypeInitialiser(_types.TokenType.colon),e||flowParseTypeInitialiser(_types.TokenType.eq),_util.semicolon.call(void 0)}function flowParseTypeParameter(){flowParseVariance(),flowParseTypeAnnotatableIdentifier(),_index.eat.call(void 0,_types.TokenType.eq)&&flowParseType()}function flowParseTypeParameterDeclaration(){const e=_index.pushTypeContext.call(void 0,0);_index.match.call(void 0,_types.TokenType.lessThan)||_index.match.call(void 0,_types.TokenType.typeParameterStart)?_index.next.call(void 0):_util.unexpected.call(void 0);do{flowParseTypeParameter(),_index.match.call(void 0,_types.TokenType.greaterThan)||_util.expect.call(void 0,_types.TokenType.comma)}while(!_index.match.call(void 0,_types.TokenType.greaterThan)&&!_base.state.error);_util.expect.call(void 0,_types.TokenType.greaterThan),_index.popTypeContext.call(void 0,e)}function flowParseTypeParameterInstantiation(){const e=_index.pushTypeContext.call(void 0,0);for(_util.expect.call(void 0,_types.TokenType.lessThan);!_index.match.call(void 0,_types.TokenType.greaterThan)&&!_base.state.error;)flowParseType(),_index.match.call(void 0,_types.TokenType.greaterThan)||_util.expect.call(void 0,_types.TokenType.comma);_util.expect.call(void 0,_types.TokenType.greaterThan),_index.popTypeContext.call(void 0,e)}function flowParseInterfaceType(){if(_util.expectContextual.call(void 0,_keywords.ContextualKeyword._interface),_index.eat.call(void 0,_types.TokenType._extends))do{flowParseInterfaceExtends()}while(_index.eat.call(void 0,_types.TokenType.comma));flowParseObjectType(!1,!1,!1)}function flowParseObjectPropertyKey(){_index.match.call(void 0,_types.TokenType.num)||_index.match.call(void 0,_types.TokenType.string)?_expression.parseExprAtom.call(void 0):_expression.parseIdentifier.call(void 0)}function flowParseObjectTypeIndexer(){_index.lookaheadType.call(void 0)===_types.TokenType.colon?(flowParseObjectPropertyKey(),flowParseTypeInitialiser()):flowParseType(),_util.expect.call(void 0,_types.TokenType.bracketR),flowParseTypeInitialiser()}function flowParseObjectTypeInternalSlot(){flowParseObjectPropertyKey(),_util.expect.call(void 0,_types.TokenType.bracketR),_util.expect.call(void 0,_types.TokenType.bracketR),_index.match.call(void 0,_types.TokenType.lessThan)||_index.match.call(void 0,_types.TokenType.parenL)?flowParseObjectTypeMethodish():(_index.eat.call(void 0,_types.TokenType.question),flowParseTypeInitialiser())}function flowParseObjectTypeMethodish(){for(_index.match.call(void 0,_types.TokenType.lessThan)&&flowParseTypeParameterDeclaration(),_util.expect.call(void 0,_types.TokenType.parenL);!_index.match.call(void 0,_types.TokenType.parenR)&&!_index.match.call(void 0,_types.TokenType.ellipsis)&&!_base.state.error;)flowParseFunctionTypeParam(),_index.match.call(void 0,_types.TokenType.parenR)||_util.expect.call(void 0,_types.TokenType.comma);_index.eat.call(void 0,_types.TokenType.ellipsis)&&flowParseFunctionTypeParam(),_util.expect.call(void 0,_types.TokenType.parenR),flowParseTypeInitialiser()}function flowParseObjectTypeCallProperty(){flowParseObjectTypeMethodish()}function flowParseObjectType(e,o,t){let a;for(o&&_index.match.call(void 0,_types.TokenType.braceBarL)?(_util.expect.call(void 0,_types.TokenType.braceBarL),a=_types.TokenType.braceBarR):(_util.expect.call(void 0,_types.TokenType.braceL),a=_types.TokenType.braceR);!_index.match.call(void 0,a)&&!_base.state.error;){if(t&&_util.isContextual.call(void 0,_keywords.ContextualKeyword._proto)){const o=_index.lookaheadType.call(void 0);o!==_types.TokenType.colon&&o!==_types.TokenType.question&&(_index.next.call(void 0),e=!1)}if(e&&_util.isContextual.call(void 0,_keywords.ContextualKeyword._static)){const e=_index.lookaheadType.call(void 0);e!==_types.TokenType.colon&&e!==_types.TokenType.question&&_index.next.call(void 0)}if(flowParseVariance(),_index.eat.call(void 0,_types.TokenType.bracketL))_index.eat.call(void 0,_types.TokenType.bracketL)?flowParseObjectTypeInternalSlot():flowParseObjectTypeIndexer();else if(_index.match.call(void 0,_types.TokenType.parenL)||_index.match.call(void 0,_types.TokenType.lessThan))flowParseObjectTypeCallProperty();else{if(_util.isContextual.call(void 0,_keywords.ContextualKeyword._get)||_util.isContextual.call(void 0,_keywords.ContextualKeyword._set)){const e=_index.lookaheadType.call(void 0);e!==_types.TokenType.name&&e!==_types.TokenType.string&&e!==_types.TokenType.num||_index.next.call(void 0)}flowParseObjectTypeProperty()}flowObjectTypeSemicolon()}_util.expect.call(void 0,a)}function flowParseObjectTypeProperty(){if(_index.match.call(void 0,_types.TokenType.ellipsis)){if(_util.expect.call(void 0,_types.TokenType.ellipsis),_index.eat.call(void 0,_types.TokenType.comma)||_index.eat.call(void 0,_types.TokenType.semi),_index.match.call(void 0,_types.TokenType.braceR))return;flowParseType()}else flowParseObjectPropertyKey(),_index.match.call(void 0,_types.TokenType.lessThan)||_index.match.call(void 0,_types.TokenType.parenL)?flowParseObjectTypeMethodish():(_index.eat.call(void 0,_types.TokenType.question),flowParseTypeInitialiser())}function flowObjectTypeSemicolon(){_index.eat.call(void 0,_types.TokenType.semi)||_index.eat.call(void 0,_types.TokenType.comma)||_index.match.call(void 0,_types.TokenType.braceR)||_index.match.call(void 0,_types.TokenType.braceBarR)||_util.unexpected.call(void 0)}function flowParseQualifiedTypeIdentifier(e){for(e||_expression.parseIdentifier.call(void 0);_index.eat.call(void 0,_types.TokenType.dot);)_expression.parseIdentifier.call(void 0)}function flowParseGenericType(){flowParseQualifiedTypeIdentifier(!0),_index.match.call(void 0,_types.TokenType.lessThan)&&flowParseTypeParameterInstantiation()}function flowParseTypeofType(){_util.expect.call(void 0,_types.TokenType._typeof),flowParsePrimaryType()}function flowParseTupleType(){for(_util.expect.call(void 0,_types.TokenType.bracketL);_base.state.pos<_base.input.length&&!_index.match.call(void 0,_types.TokenType.bracketR)&&(flowParseType(),!_index.match.call(void 0,_types.TokenType.bracketR));)_util.expect.call(void 0,_types.TokenType.comma);_util.expect.call(void 0,_types.TokenType.bracketR)}function flowParseFunctionTypeParam(){const e=_index.lookaheadType.call(void 0);e===_types.TokenType.colon||e===_types.TokenType.question?(_expression.parseIdentifier.call(void 0),_index.eat.call(void 0,_types.TokenType.question),flowParseTypeInitialiser()):flowParseType()}function flowParseFunctionTypeParams(){for(;!_index.match.call(void 0,_types.TokenType.parenR)&&!_index.match.call(void 0,_types.TokenType.ellipsis)&&!_base.state.error;)flowParseFunctionTypeParam(),_index.match.call(void 0,_types.TokenType.parenR)||_util.expect.call(void 0,_types.TokenType.comma);_index.eat.call(void 0,_types.TokenType.ellipsis)&&flowParseFunctionTypeParam()}function flowParsePrimaryType(){let e=!1;const o=_base.state.noAnonFunctionType;switch(_base.state.type){case _types.TokenType.name:return _util.isContextual.call(void 0,_keywords.ContextualKeyword._interface)?void flowParseInterfaceType():(_expression.parseIdentifier.call(void 0),void flowParseGenericType());case _types.TokenType.braceL:return void flowParseObjectType(!1,!1,!1);case _types.TokenType.braceBarL:return void flowParseObjectType(!1,!0,!1);case _types.TokenType.bracketL:return void flowParseTupleType();case _types.TokenType.lessThan:return flowParseTypeParameterDeclaration(),_util.expect.call(void 0,_types.TokenType.parenL),flowParseFunctionTypeParams(),_util.expect.call(void 0,_types.TokenType.parenR),_util.expect.call(void 0,_types.TokenType.arrow),void flowParseType();case _types.TokenType.parenL:if(_index.next.call(void 0),!_index.match.call(void 0,_types.TokenType.parenR)&&!_index.match.call(void 0,_types.TokenType.ellipsis))if(_index.match.call(void 0,_types.TokenType.name)){const o=_index.lookaheadType.call(void 0);e=o!==_types.TokenType.question&&o!==_types.TokenType.colon}else e=!0;if(e){if(_base.state.noAnonFunctionType=!1,flowParseType(),_base.state.noAnonFunctionType=o,_base.state.noAnonFunctionType||!(_index.match.call(void 0,_types.TokenType.comma)||_index.match.call(void 0,_types.TokenType.parenR)&&_index.lookaheadType.call(void 0)===_types.TokenType.arrow))return void _util.expect.call(void 0,_types.TokenType.parenR);_index.eat.call(void 0,_types.TokenType.comma)}return flowParseFunctionTypeParams(),_util.expect.call(void 0,_types.TokenType.parenR),_util.expect.call(void 0,_types.TokenType.arrow),void flowParseType();case _types.TokenType.minus:return _index.next.call(void 0),void _expression.parseLiteral.call(void 0);case _types.TokenType.string:case _types.TokenType.num:case _types.TokenType._true:case _types.TokenType._false:case _types.TokenType._null:case _types.TokenType._this:case _types.TokenType._void:case _types.TokenType.star:return void _index.next.call(void 0);default:if(_base.state.type===_types.TokenType._typeof)return void flowParseTypeofType();if(_base.state.type&_types.TokenType.IS_KEYWORD)return _index.next.call(void 0),void(_base.state.tokens[_base.state.tokens.length-1].type=_types.TokenType.name)}_util.unexpected.call(void 0)}function flowParsePostfixType(){for(flowParsePrimaryType();!_util.canInsertSemicolon.call(void 0)&&(_index.match.call(void 0,_types.TokenType.bracketL)||_index.match.call(void 0,_types.TokenType.questionDot));)_index.eat.call(void 0,_types.TokenType.questionDot),_util.expect.call(void 0,_types.TokenType.bracketL),_index.eat.call(void 0,_types.TokenType.bracketR)||(flowParseType(),_util.expect.call(void 0,_types.TokenType.bracketR))}function flowParsePrefixType(){_index.eat.call(void 0,_types.TokenType.question)?flowParsePrefixType():flowParsePostfixType()}function flowParseAnonFunctionWithoutParens(){flowParsePrefixType(),!_base.state.noAnonFunctionType&&_index.eat.call(void 0,_types.TokenType.arrow)&&flowParseType()}function flowParseIntersectionType(){for(_index.eat.call(void 0,_types.TokenType.bitwiseAND),flowParseAnonFunctionWithoutParens();_index.eat.call(void 0,_types.TokenType.bitwiseAND);)flowParseAnonFunctionWithoutParens()}function flowParseUnionType(){for(_index.eat.call(void 0,_types.TokenType.bitwiseOR),flowParseIntersectionType();_index.eat.call(void 0,_types.TokenType.bitwiseOR);)flowParseIntersectionType()}function flowParseType(){flowParseUnionType()}function flowParseTypeAnnotation(){flowParseTypeInitialiser()}function flowParseTypeAnnotatableIdentifier(){_expression.parseIdentifier.call(void 0),_index.match.call(void 0,_types.TokenType.colon)&&flowParseTypeAnnotation()}function flowParseVariance(){(_index.match.call(void 0,_types.TokenType.plus)||_index.match.call(void 0,_types.TokenType.minus))&&(_index.next.call(void 0),_base.state.tokens[_base.state.tokens.length-1].isType=!0)}function flowParseFunctionBodyAndFinish(e){_index.match.call(void 0,_types.TokenType.colon)&&flowParseTypeAndPredicateInitialiser(),_expression.parseFunctionBody.call(void 0,!1,e)}function flowParseSubscript(e,o,t){if(_index.match.call(void 0,_types.TokenType.questionDot)&&_index.lookaheadType.call(void 0)===_types.TokenType.lessThan)return o?void(t.stop=!0):(_index.next.call(void 0),flowParseTypeParameterInstantiation(),_util.expect.call(void 0,_types.TokenType.parenL),void _expression.parseCallExpressionArguments.call(void 0));if(!o&&_index.match.call(void 0,_types.TokenType.lessThan)){const e=_base.state.snapshot();if(flowParseTypeParameterInstantiation(),_util.expect.call(void 0,_types.TokenType.parenL),_expression.parseCallExpressionArguments.call(void 0),!_base.state.error)return;_base.state.restoreFromSnapshot(e)}_expression.baseParseSubscript.call(void 0,e,o,t)}function flowStartParseNewArguments(){if(_index.match.call(void 0,_types.TokenType.lessThan)){const e=_base.state.snapshot();flowParseTypeParameterInstantiation(),_base.state.error&&_base.state.restoreFromSnapshot(e)}}function flowTryParseStatement(){if(_index.match.call(void 0,_types.TokenType.name)&&_base.state.contextualKeyword===_keywords.ContextualKeyword._interface){const e=_index.pushTypeContext.call(void 0,0);return _index.next.call(void 0),flowParseInterface(),_index.popTypeContext.call(void 0,e),!0}return!!_util.isContextual.call(void 0,_keywords.ContextualKeyword._enum)&&(flowParseEnumDeclaration(),!0)}function flowTryParseExportDefaultExpression(){return!!_util.isContextual.call(void 0,_keywords.ContextualKeyword._enum)&&(flowParseEnumDeclaration(),!0)}function flowParseIdentifierStatement(e){if(e===_keywords.ContextualKeyword._declare){if(_index.match.call(void 0,_types.TokenType._class)||_index.match.call(void 0,_types.TokenType.name)||_index.match.call(void 0,_types.TokenType._function)||_index.match.call(void 0,_types.TokenType._var)||_index.match.call(void 0,_types.TokenType._export)){const e=_index.pushTypeContext.call(void 0,1);flowParseDeclare(),_index.popTypeContext.call(void 0,e)}}else if(_index.match.call(void 0,_types.TokenType.name))if(e===_keywords.ContextualKeyword._interface){const e=_index.pushTypeContext.call(void 0,1);flowParseInterface(),_index.popTypeContext.call(void 0,e)}else if(e===_keywords.ContextualKeyword._type){const e=_index.pushTypeContext.call(void 0,1);flowParseTypeAlias(),_index.popTypeContext.call(void 0,e)}else if(e===_keywords.ContextualKeyword._opaque){const e=_index.pushTypeContext.call(void 0,1);flowParseOpaqueType(!1),_index.popTypeContext.call(void 0,e)}_util.semicolon.call(void 0)}function flowShouldParseExportDeclaration(){return _util.isContextual.call(void 0,_keywords.ContextualKeyword._type)||_util.isContextual.call(void 0,_keywords.ContextualKeyword._interface)||_util.isContextual.call(void 0,_keywords.ContextualKeyword._opaque)||_util.isContextual.call(void 0,_keywords.ContextualKeyword._enum)}function flowShouldDisallowExportDefaultSpecifier(){return _index.match.call(void 0,_types.TokenType.name)&&(_base.state.contextualKeyword===_keywords.ContextualKeyword._type||_base.state.contextualKeyword===_keywords.ContextualKeyword._interface||_base.state.contextualKeyword===_keywords.ContextualKeyword._opaque||_base.state.contextualKeyword===_keywords.ContextualKeyword._enum)}function flowParseExportDeclaration(){if(_util.isContextual.call(void 0,_keywords.ContextualKeyword._type)){const e=_index.pushTypeContext.call(void 0,1);_index.next.call(void 0),_index.match.call(void 0,_types.TokenType.braceL)?(_statement.parseExportSpecifiers.call(void 0),_statement.parseExportFrom.call(void 0)):flowParseTypeAlias(),_index.popTypeContext.call(void 0,e)}else if(_util.isContextual.call(void 0,_keywords.ContextualKeyword._opaque)){const e=_index.pushTypeContext.call(void 0,1);_index.next.call(void 0),flowParseOpaqueType(!1),_index.popTypeContext.call(void 0,e)}else if(_util.isContextual.call(void 0,_keywords.ContextualKeyword._interface)){const e=_index.pushTypeContext.call(void 0,1);_index.next.call(void 0),flowParseInterface(),_index.popTypeContext.call(void 0,e)}else _statement.parseStatement.call(void 0,!0)}function flowShouldParseExportStar(){return _index.match.call(void 0,_types.TokenType.star)||_util.isContextual.call(void 0,_keywords.ContextualKeyword._type)&&_index.lookaheadType.call(void 0)===_types.TokenType.star}function flowParseExportStar(){if(_util.eatContextual.call(void 0,_keywords.ContextualKeyword._type)){const e=_index.pushTypeContext.call(void 0,2);_statement.baseParseExportStar.call(void 0),_index.popTypeContext.call(void 0,e)}else _statement.baseParseExportStar.call(void 0)}function flowAfterParseClassSuper(e){if(e&&_index.match.call(void 0,_types.TokenType.lessThan)&&flowParseTypeParameterInstantiation(),_util.isContextual.call(void 0,_keywords.ContextualKeyword._implements)){const e=_index.pushTypeContext.call(void 0,0);_index.next.call(void 0),_base.state.tokens[_base.state.tokens.length-1].type=_types.TokenType._implements;do{flowParseRestrictedIdentifier(),_index.match.call(void 0,_types.TokenType.lessThan)&&flowParseTypeParameterInstantiation()}while(_index.eat.call(void 0,_types.TokenType.comma));_index.popTypeContext.call(void 0,e)}}function flowStartParseObjPropValue(){_index.match.call(void 0,_types.TokenType.lessThan)&&(flowParseTypeParameterDeclaration(),_index.match.call(void 0,_types.TokenType.parenL)||_util.unexpected.call(void 0))}function flowParseAssignableListItemTypes(){const e=_index.pushTypeContext.call(void 0,0);_index.eat.call(void 0,_types.TokenType.question),_index.match.call(void 0,_types.TokenType.colon)&&flowParseTypeAnnotation(),_index.popTypeContext.call(void 0,e)}function flowStartParseImportSpecifiers(){if(_index.match.call(void 0,_types.TokenType._typeof)||_util.isContextual.call(void 0,_keywords.ContextualKeyword._type)){const e=_index.lookaheadTypeAndKeyword.call(void 0);(isMaybeDefaultImport(e)||e.type===_types.TokenType.braceL||e.type===_types.TokenType.star)&&_index.next.call(void 0)}}function flowParseImportSpecifier(){const e=_base.state.contextualKeyword===_keywords.ContextualKeyword._type||_base.state.type===_types.TokenType._typeof;e?_index.next.call(void 0):_expression.parseIdentifier.call(void 0),_util.isContextual.call(void 0,_keywords.ContextualKeyword._as)&&!_util.isLookaheadContextual.call(void 0,_keywords.ContextualKeyword._as)?(_expression.parseIdentifier.call(void 0),(!e||_index.match.call(void 0,_types.TokenType.name)||_base.state.type&_types.TokenType.IS_KEYWORD)&&_expression.parseIdentifier.call(void 0)):(e&&(_index.match.call(void 0,_types.TokenType.name)||_base.state.type&_types.TokenType.IS_KEYWORD)&&_expression.parseIdentifier.call(void 0),_util.eatContextual.call(void 0,_keywords.ContextualKeyword._as)&&_expression.parseIdentifier.call(void 0))}function flowStartParseFunctionParams(){if(_index.match.call(void 0,_types.TokenType.lessThan)){const e=_index.pushTypeContext.call(void 0,0);flowParseTypeParameterDeclaration(),_index.popTypeContext.call(void 0,e)}}function flowAfterParseVarHead(){_index.match.call(void 0,_types.TokenType.colon)&&flowParseTypeAnnotation()}function flowStartParseAsyncArrowFromCallExpression(){if(_index.match.call(void 0,_types.TokenType.colon)){const e=_base.state.noAnonFunctionType;_base.state.noAnonFunctionType=!0,flowParseTypeAnnotation(),_base.state.noAnonFunctionType=e}}function flowParseMaybeAssign(e,o){if(_index.match.call(void 0,_types.TokenType.lessThan)){const t=_base.state.snapshot();let a=_expression.baseParseMaybeAssign.call(void 0,e,o);if(!_base.state.error)return a;_base.state.restoreFromSnapshot(t),_base.state.type=_types.TokenType.typeParameterStart;const l=_index.pushTypeContext.call(void 0,0);if(flowParseTypeParameterDeclaration(),_index.popTypeContext.call(void 0,l),a=_expression.baseParseMaybeAssign.call(void 0,e,o),a)return!0;_util.unexpected.call(void 0)}return _expression.baseParseMaybeAssign.call(void 0,e,o)}function flowParseArrow(){if(_index.match.call(void 0,_types.TokenType.colon)){const e=_index.pushTypeContext.call(void 0,0),o=_base.state.snapshot(),t=_base.state.noAnonFunctionType;_base.state.noAnonFunctionType=!0,flowParseTypeAndPredicateInitialiser(),_base.state.noAnonFunctionType=t,_util.canInsertSemicolon.call(void 0)&&_util.unexpected.call(void 0),_index.match.call(void 0,_types.TokenType.arrow)||_util.unexpected.call(void 0),_base.state.error&&_base.state.restoreFromSnapshot(o),_index.popTypeContext.call(void 0,e)}return _index.eat.call(void 0,_types.TokenType.arrow)}function flowParseSubscripts(e,o=!1){if(_base.state.tokens[_base.state.tokens.length-1].contextualKeyword===_keywords.ContextualKeyword._async&&_index.match.call(void 0,_types.TokenType.lessThan)){const e=_base.state.snapshot();if(parseAsyncArrowWithTypeParameters()&&!_base.state.error)return;_base.state.restoreFromSnapshot(e)}_expression.baseParseSubscripts.call(void 0,e,o)}function parseAsyncArrowWithTypeParameters(){_base.state.scopeDepth++;const e=_base.state.tokens.length;return _statement.parseFunctionParams.call(void 0),!!_expression.parseArrow.call(void 0)&&(_expression.parseArrowExpression.call(void 0,e),!0)}function flowParseEnumDeclaration(){_util.expectContextual.call(void 0,_keywords.ContextualKeyword._enum),_base.state.tokens[_base.state.tokens.length-1].type=_types.TokenType._enum,_expression.parseIdentifier.call(void 0),flowParseEnumBody()}function flowParseEnumBody(){_util.eatContextual.call(void 0,_keywords.ContextualKeyword._of)&&_index.next.call(void 0),_util.expect.call(void 0,_types.TokenType.braceL),flowParseEnumMembers(),_util.expect.call(void 0,_types.TokenType.braceR)}function flowParseEnumMembers(){for(;!_index.match.call(void 0,_types.TokenType.braceR)&&!_base.state.error&&!_index.eat.call(void 0,_types.TokenType.ellipsis);)flowParseEnumMember(),_index.match.call(void 0,_types.TokenType.braceR)||_util.expect.call(void 0,_types.TokenType.comma)}function flowParseEnumMember(){_expression.parseIdentifier.call(void 0),_index.eat.call(void 0,_types.TokenType.eq)&&_index.next.call(void 0)}exports.flowParseTypeParameterDeclaration=flowParseTypeParameterDeclaration,exports.flowParseTypeAnnotation=flowParseTypeAnnotation,exports.flowParseVariance=flowParseVariance,exports.flowParseFunctionBodyAndFinish=flowParseFunctionBodyAndFinish,exports.flowParseSubscript=flowParseSubscript,exports.flowStartParseNewArguments=flowStartParseNewArguments,exports.flowTryParseStatement=flowTryParseStatement,exports.flowTryParseExportDefaultExpression=flowTryParseExportDefaultExpression,exports.flowParseIdentifierStatement=flowParseIdentifierStatement,exports.flowShouldParseExportDeclaration=flowShouldParseExportDeclaration,exports.flowShouldDisallowExportDefaultSpecifier=flowShouldDisallowExportDefaultSpecifier,exports.flowParseExportDeclaration=flowParseExportDeclaration,exports.flowShouldParseExportStar=flowShouldParseExportStar,exports.flowParseExportStar=flowParseExportStar,exports.flowAfterParseClassSuper=flowAfterParseClassSuper,exports.flowStartParseObjPropValue=flowStartParseObjPropValue,exports.flowParseAssignableListItemTypes=flowParseAssignableListItemTypes,exports.flowStartParseImportSpecifiers=flowStartParseImportSpecifiers,exports.flowParseImportSpecifier=flowParseImportSpecifier,exports.flowStartParseFunctionParams=flowStartParseFunctionParams,exports.flowAfterParseVarHead=flowAfterParseVarHead,exports.flowStartParseAsyncArrowFromCallExpression=flowStartParseAsyncArrowFromCallExpression,exports.flowParseMaybeAssign=flowParseMaybeAssign,exports.flowParseArrow=flowParseArrow,exports.flowParseSubscripts=flowParseSubscripts;