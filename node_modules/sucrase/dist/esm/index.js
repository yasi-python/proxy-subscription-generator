import CJSImportProcessor from"./CJSImportProcessor";import computeSourceMap,{}from"./computeSourceMap";import{HelperManager}from"./HelperManager";import identifyShadowedGlobals from"./identifyShadowedGlobals";import NameManager from"./NameManager";import{validateOptions}from"./Options";import{parse}from"./parser";import TokenProcessor from"./TokenProcessor";import RootTransformer from"./transformers/RootTransformer";import formatTokens from"./util/formatTokens";import getTSImportedNames from"./util/getTSImportedNames";export function getVersion(){return"3.35.0"}export function transform(e,o){validateOptions(o);try{const r=getSucraseContext(e,o),t=new RootTransformer(r,o.transforms,Boolean(o.enableLegacyBabel5ModuleInterop),o).transform();let s={code:t.code};if(o.sourceMapOptions){if(!o.filePath)throw new Error("filePath must be specified when generating a source map.");s={...s,sourceMap:computeSourceMap(t,o.filePath,o.sourceMapOptions,e,r.tokenProcessor.tokens)}}return s}catch(e){throw o.filePath&&(e.message=`Error transforming ${o.filePath}: ${e.message}`),e}}export function getFormattedTokens(e,o){const r=getSucraseContext(e,o).tokenProcessor.tokens;return formatTokens(e,r)}function getSucraseContext(e,o){const r=o.transforms.includes("jsx"),t=o.transforms.includes("typescript"),s=o.transforms.includes("flow"),n=!0===o.disableESTransforms,a=parse(e,r,t,s),p=a.tokens,m=a.scopes,i=new NameManager(e,p),c=new HelperManager(i),f=new TokenProcessor(e,p,s,n,c),l=Boolean(o.enableLegacyTypeScriptModuleInterop);let u=null;return o.transforms.includes("imports")?(u=new CJSImportProcessor(i,f,l,o,o.transforms.includes("typescript"),Boolean(o.keepUnusedImports),c),u.preprocessTokens(),identifyShadowedGlobals(f,m,u.getGlobalNames()),o.transforms.includes("typescript")&&!o.keepUnusedImports&&u.pruneTypeOnlyImports()):o.transforms.includes("typescript")&&!o.keepUnusedImports&&identifyShadowedGlobals(f,m,getTSImportedNames(f)),{tokenProcessor:f,scopes:m,nameManager:i,importProcessor:u,helperManager:c}}