function _optionalChain(t){let e,o=t[0],s=1;for(;s<t.length;){const n=t[s],i=t[s+1];if(s+=2,("optionalAccess"===n||"optionalCall"===n)&&null==o)return;"access"===n||"optionalAccess"===n?(e=o,o=i(o)):"call"!==n&&"optionalCall"!==n||(o=i((...t)=>o.call(e,...t)),e=void 0)}return o}import{TokenType as tt}from"../parser/tokenizer/types";import Transformer from"./Transformer";const JEST_GLOBAL_NAME="jest",HOISTED_METHODS=["mock","unmock","enableAutomock","disableAutomock"];export default class JestHoistTransformer extends Transformer{__init(){this.hoistedFunctionNames=[]}constructor(t,e,o,s){super(),this.rootTransformer=t,this.tokens=e,this.nameManager=o,this.importProcessor=s,JestHoistTransformer.prototype.__init.call(this)}process(){return!(0!==this.tokens.currentToken().scopeDepth||!this.tokens.matches4(tt.name,tt.dot,tt.name,tt.parenL)||"jest"!==this.tokens.identifierName())&&(!_optionalChain([this,"access",t=>t.importProcessor,"optionalAccess",t=>t.getGlobalNames,"call",t=>t(),"optionalAccess",t=>t.has,"call",t=>t("jest")])&&this.extractHoistedCalls())}getHoistedCode(){return this.hoistedFunctionNames.length>0?this.hoistedFunctionNames.map(t=>`${t}();`).join(""):""}extractHoistedCalls(){this.tokens.removeToken();let t=!1;for(;this.tokens.matches3(tt.dot,tt.name,tt.parenL);){const e=this.tokens.identifierNameAtIndex(this.tokens.currentIndex()+1);if(HOISTED_METHODS.includes(e)){const e=this.nameManager.claimFreeName("__jestHoist");this.hoistedFunctionNames.push(e),this.tokens.replaceToken(`function ${e}(){jest.`),this.tokens.copyToken(),this.tokens.copyToken(),this.rootTransformer.processBalancedCode(),this.tokens.copyExpectedToken(tt.parenR),this.tokens.appendCode(";}"),t=!1}else t?this.tokens.copyToken():this.tokens.replaceToken("jest."),this.tokens.copyToken(),this.tokens.copyToken(),this.rootTransformer.processBalancedCode(),this.tokens.copyExpectedToken(tt.parenR),t=!0}return!0}}