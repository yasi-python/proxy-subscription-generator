import{IdentifierRole}from"../parser/tokenizer";import{TokenType as tt}from"../parser/tokenizer/types";import Transformer from"./Transformer";export default class ReactDisplayNameTransformer extends Transformer{constructor(e,t,s,n){super(),this.rootTransformer=e,this.tokens=t,this.importProcessor=s,this.options=n}process(){const e=this.tokens.currentIndex();if("createReactClass"===this.tokens.identifierName()){const t=this.importProcessor&&this.importProcessor.getIdentifierReplacement("createReactClass");return t?this.tokens.replaceToken(`(0, ${t})`):this.tokens.copyToken(),this.tryProcessCreateClassCall(e),!0}if(this.tokens.matches3(tt.name,tt.dot,tt.name)&&"React"===this.tokens.identifierName()&&"createClass"===this.tokens.identifierNameAtIndex(this.tokens.currentIndex()+2)){const t=this.importProcessor&&this.importProcessor.getIdentifierReplacement("React")||"React";return t?(this.tokens.replaceToken(t),this.tokens.copyToken(),this.tokens.copyToken()):(this.tokens.copyToken(),this.tokens.copyToken(),this.tokens.copyToken()),this.tryProcessCreateClassCall(e),!0}return!1}tryProcessCreateClassCall(e){const t=this.findDisplayName(e);t&&this.classNeedsDisplayName()&&(this.tokens.copyExpectedToken(tt.parenL),this.tokens.copyExpectedToken(tt.braceL),this.tokens.appendCode(`displayName: '${t}',`),this.rootTransformer.processBalancedCode(),this.tokens.copyExpectedToken(tt.braceR),this.tokens.copyExpectedToken(tt.parenR))}findDisplayName(e){return e<2?null:this.tokens.matches2AtIndex(e-2,tt.name,tt.eq)||e>=2&&this.tokens.tokens[e-2].identifierRole===IdentifierRole.ObjectKey?this.tokens.identifierNameAtIndex(e-2):this.tokens.matches2AtIndex(e-2,tt._export,tt._default)?this.getDisplayNameFromFilename():null}getDisplayNameFromFilename(){const e=(this.options.filePath||"unknown").split("/"),t=e[e.length-1],s=t.lastIndexOf("."),n=-1===s?t:t.slice(0,s);return"index"===n&&e[e.length-2]?e[e.length-2]:n}classNeedsDisplayName(){let e=this.tokens.currentIndex();if(!this.tokens.matches2(tt.parenL,tt.braceL))return!1;const t=e+1,s=this.tokens.tokens[t].contextId;if(null==s)throw new Error("Expected non-null context ID on object open-brace.");for(;e<this.tokens.tokens.length;e++){const t=this.tokens.tokens[e];if(t.type===tt.braceR&&t.contextId===s){e++;break}if("displayName"===this.tokens.identifierNameAtIndex(e)&&this.tokens.tokens[e].identifierRole===IdentifierRole.ObjectKey&&t.contextId===s)return!1}if(e===this.tokens.tokens.length)throw new Error("Unexpected end of input when processing React class.");return this.tokens.matches1AtIndex(e,tt.parenR)||this.tokens.matches2AtIndex(e,tt.comma,tt.parenR)}}