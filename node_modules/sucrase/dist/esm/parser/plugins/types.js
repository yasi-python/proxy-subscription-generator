import{eatTypeToken,lookaheadType,match}from"../tokenizer/index";import{TokenType as tt}from"../tokenizer/types";import{isFlowEnabled,isTypeScriptEnabled}from"../traverser/base";import{baseParseConditional}from"../traverser/expression";import{flowParseTypeAnnotation}from"./flow";import{tsParseTypeAnnotation}from"./typescript";export function typedParseConditional(t){if(match(tt.question)){const t=lookaheadType();if(t===tt.colon||t===tt.comma||t===tt.parenR)return}baseParseConditional(t)}export function typedParseParenItem(){eatTypeToken(tt.question),match(tt.colon)&&(isTypeScriptEnabled?tsParseTypeAnnotation():isFlowEnabled&&flowParseTypeAnnotation())}