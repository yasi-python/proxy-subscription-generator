import{eat,lookaheadType,lookaheadTypeAndKeyword,match,next,popTypeContext,pushTypeContext}from"../tokenizer/index";import{ContextualKeyword}from"../tokenizer/keywords";import{TokenType,TokenType as tt}from"../tokenizer/types";import{input,state}from"../traverser/base";import{baseParseMaybeAssign,baseParseSubscript,baseParseSubscripts,parseArrow,parseArrowExpression,parseCallExpressionArguments,parseExprAtom,parseExpression,parseFunctionBody,parseIdentifier,parseLiteral}from"../traverser/expression";import{baseParseExportStar,parseExport,parseExportFrom,parseExportSpecifiers,parseFunctionParams,parseImport,parseStatement}from"../traverser/statement";import{canInsertSemicolon,eatContextual,expect,expectContextual,isContextual,isLookaheadContextual,semicolon,unexpected}from"../traverser/util";function isMaybeDefaultImport(e){return(e.type===tt.name||!!(e.type&TokenType.IS_KEYWORD))&&e.contextualKeyword!==ContextualKeyword._from}function flowParseTypeInitialiser(e){const t=pushTypeContext(0);expect(e||tt.colon),flowParseType(),popTypeContext(t)}function flowParsePredicate(){expect(tt.modulo),expectContextual(ContextualKeyword._checks),eat(tt.parenL)&&(parseExpression(),expect(tt.parenR))}function flowParseTypeAndPredicateInitialiser(){const e=pushTypeContext(0);expect(tt.colon),match(tt.modulo)?flowParsePredicate():(flowParseType(),match(tt.modulo)&&flowParsePredicate()),popTypeContext(e)}function flowParseDeclareClass(){next(),flowParseInterfaceish(!0)}function flowParseDeclareFunction(){next(),parseIdentifier(),match(tt.lessThan)&&flowParseTypeParameterDeclaration(),expect(tt.parenL),flowParseFunctionTypeParams(),expect(tt.parenR),flowParseTypeAndPredicateInitialiser(),semicolon()}function flowParseDeclare(){match(tt._class)?flowParseDeclareClass():match(tt._function)?flowParseDeclareFunction():match(tt._var)?flowParseDeclareVariable():eatContextual(ContextualKeyword._module)?eat(tt.dot)?flowParseDeclareModuleExports():flowParseDeclareModule():isContextual(ContextualKeyword._type)?flowParseDeclareTypeAlias():isContextual(ContextualKeyword._opaque)?flowParseDeclareOpaqueType():isContextual(ContextualKeyword._interface)?flowParseDeclareInterface():match(tt._export)?flowParseDeclareExportDeclaration():unexpected()}function flowParseDeclareVariable(){next(),flowParseTypeAnnotatableIdentifier(),semicolon()}function flowParseDeclareModule(){for(match(tt.string)?parseExprAtom():parseIdentifier(),expect(tt.braceL);!match(tt.braceR)&&!state.error;)match(tt._import)?(next(),parseImport()):unexpected();expect(tt.braceR)}function flowParseDeclareExportDeclaration(){expect(tt._export),eat(tt._default)?match(tt._function)||match(tt._class)?flowParseDeclare():(flowParseType(),semicolon()):match(tt._var)||match(tt._function)||match(tt._class)||isContextual(ContextualKeyword._opaque)?flowParseDeclare():match(tt.star)||match(tt.braceL)||isContextual(ContextualKeyword._interface)||isContextual(ContextualKeyword._type)||isContextual(ContextualKeyword._opaque)?parseExport():unexpected()}function flowParseDeclareModuleExports(){expectContextual(ContextualKeyword._exports),flowParseTypeAnnotation(),semicolon()}function flowParseDeclareTypeAlias(){next(),flowParseTypeAlias()}function flowParseDeclareOpaqueType(){next(),flowParseOpaqueType(!0)}function flowParseDeclareInterface(){next(),flowParseInterfaceish()}function flowParseInterfaceish(e=!1){if(flowParseRestrictedIdentifier(),match(tt.lessThan)&&flowParseTypeParameterDeclaration(),eat(tt._extends))do{flowParseInterfaceExtends()}while(!e&&eat(tt.comma));if(isContextual(ContextualKeyword._mixins)){next();do{flowParseInterfaceExtends()}while(eat(tt.comma))}if(isContextual(ContextualKeyword._implements)){next();do{flowParseInterfaceExtends()}while(eat(tt.comma))}flowParseObjectType(e,!1,e)}function flowParseInterfaceExtends(){flowParseQualifiedTypeIdentifier(!1),match(tt.lessThan)&&flowParseTypeParameterInstantiation()}function flowParseInterface(){flowParseInterfaceish()}function flowParseRestrictedIdentifier(){parseIdentifier()}function flowParseTypeAlias(){flowParseRestrictedIdentifier(),match(tt.lessThan)&&flowParseTypeParameterDeclaration(),flowParseTypeInitialiser(tt.eq),semicolon()}function flowParseOpaqueType(e){expectContextual(ContextualKeyword._type),flowParseRestrictedIdentifier(),match(tt.lessThan)&&flowParseTypeParameterDeclaration(),match(tt.colon)&&flowParseTypeInitialiser(tt.colon),e||flowParseTypeInitialiser(tt.eq),semicolon()}function flowParseTypeParameter(){flowParseVariance(),flowParseTypeAnnotatableIdentifier(),eat(tt.eq)&&flowParseType()}export function flowParseTypeParameterDeclaration(){const e=pushTypeContext(0);match(tt.lessThan)||match(tt.typeParameterStart)?next():unexpected();do{flowParseTypeParameter(),match(tt.greaterThan)||expect(tt.comma)}while(!match(tt.greaterThan)&&!state.error);expect(tt.greaterThan),popTypeContext(e)}function flowParseTypeParameterInstantiation(){const e=pushTypeContext(0);for(expect(tt.lessThan);!match(tt.greaterThan)&&!state.error;)flowParseType(),match(tt.greaterThan)||expect(tt.comma);expect(tt.greaterThan),popTypeContext(e)}function flowParseInterfaceType(){if(expectContextual(ContextualKeyword._interface),eat(tt._extends))do{flowParseInterfaceExtends()}while(eat(tt.comma));flowParseObjectType(!1,!1,!1)}function flowParseObjectPropertyKey(){match(tt.num)||match(tt.string)?parseExprAtom():parseIdentifier()}function flowParseObjectTypeIndexer(){lookaheadType()===tt.colon?(flowParseObjectPropertyKey(),flowParseTypeInitialiser()):flowParseType(),expect(tt.bracketR),flowParseTypeInitialiser()}function flowParseObjectTypeInternalSlot(){flowParseObjectPropertyKey(),expect(tt.bracketR),expect(tt.bracketR),match(tt.lessThan)||match(tt.parenL)?flowParseObjectTypeMethodish():(eat(tt.question),flowParseTypeInitialiser())}function flowParseObjectTypeMethodish(){for(match(tt.lessThan)&&flowParseTypeParameterDeclaration(),expect(tt.parenL);!match(tt.parenR)&&!match(tt.ellipsis)&&!state.error;)flowParseFunctionTypeParam(),match(tt.parenR)||expect(tt.comma);eat(tt.ellipsis)&&flowParseFunctionTypeParam(),expect(tt.parenR),flowParseTypeInitialiser()}function flowParseObjectTypeCallProperty(){flowParseObjectTypeMethodish()}function flowParseObjectType(e,t,a){let o;for(t&&match(tt.braceBarL)?(expect(tt.braceBarL),o=tt.braceBarR):(expect(tt.braceL),o=tt.braceR);!match(o)&&!state.error;){if(a&&isContextual(ContextualKeyword._proto)){const t=lookaheadType();t!==tt.colon&&t!==tt.question&&(next(),e=!1)}if(e&&isContextual(ContextualKeyword._static)){const e=lookaheadType();e!==tt.colon&&e!==tt.question&&next()}if(flowParseVariance(),eat(tt.bracketL))eat(tt.bracketL)?flowParseObjectTypeInternalSlot():flowParseObjectTypeIndexer();else if(match(tt.parenL)||match(tt.lessThan))flowParseObjectTypeCallProperty();else{if(isContextual(ContextualKeyword._get)||isContextual(ContextualKeyword._set)){const e=lookaheadType();e!==tt.name&&e!==tt.string&&e!==tt.num||next()}flowParseObjectTypeProperty()}flowObjectTypeSemicolon()}expect(o)}function flowParseObjectTypeProperty(){if(match(tt.ellipsis)){if(expect(tt.ellipsis),eat(tt.comma)||eat(tt.semi),match(tt.braceR))return;flowParseType()}else flowParseObjectPropertyKey(),match(tt.lessThan)||match(tt.parenL)?flowParseObjectTypeMethodish():(eat(tt.question),flowParseTypeInitialiser())}function flowObjectTypeSemicolon(){eat(tt.semi)||eat(tt.comma)||match(tt.braceR)||match(tt.braceBarR)||unexpected()}function flowParseQualifiedTypeIdentifier(e){for(e||parseIdentifier();eat(tt.dot);)parseIdentifier()}function flowParseGenericType(){flowParseQualifiedTypeIdentifier(!0),match(tt.lessThan)&&flowParseTypeParameterInstantiation()}function flowParseTypeofType(){expect(tt._typeof),flowParsePrimaryType()}function flowParseTupleType(){for(expect(tt.bracketL);state.pos<input.length&&!match(tt.bracketR)&&(flowParseType(),!match(tt.bracketR));)expect(tt.comma);expect(tt.bracketR)}function flowParseFunctionTypeParam(){const e=lookaheadType();e===tt.colon||e===tt.question?(parseIdentifier(),eat(tt.question),flowParseTypeInitialiser()):flowParseType()}function flowParseFunctionTypeParams(){for(;!match(tt.parenR)&&!match(tt.ellipsis)&&!state.error;)flowParseFunctionTypeParam(),match(tt.parenR)||expect(tt.comma);eat(tt.ellipsis)&&flowParseFunctionTypeParam()}function flowParsePrimaryType(){let e=!1;const t=state.noAnonFunctionType;switch(state.type){case tt.name:return isContextual(ContextualKeyword._interface)?void flowParseInterfaceType():(parseIdentifier(),void flowParseGenericType());case tt.braceL:return void flowParseObjectType(!1,!1,!1);case tt.braceBarL:return void flowParseObjectType(!1,!0,!1);case tt.bracketL:return void flowParseTupleType();case tt.lessThan:return flowParseTypeParameterDeclaration(),expect(tt.parenL),flowParseFunctionTypeParams(),expect(tt.parenR),expect(tt.arrow),void flowParseType();case tt.parenL:if(next(),!match(tt.parenR)&&!match(tt.ellipsis))if(match(tt.name)){const t=lookaheadType();e=t!==tt.question&&t!==tt.colon}else e=!0;if(e){if(state.noAnonFunctionType=!1,flowParseType(),state.noAnonFunctionType=t,state.noAnonFunctionType||!(match(tt.comma)||match(tt.parenR)&&lookaheadType()===tt.arrow))return void expect(tt.parenR);eat(tt.comma)}return flowParseFunctionTypeParams(),expect(tt.parenR),expect(tt.arrow),void flowParseType();case tt.minus:return next(),void parseLiteral();case tt.string:case tt.num:case tt._true:case tt._false:case tt._null:case tt._this:case tt._void:case tt.star:return void next();default:if(state.type===tt._typeof)return void flowParseTypeofType();if(state.type&TokenType.IS_KEYWORD)return next(),void(state.tokens[state.tokens.length-1].type=tt.name)}unexpected()}function flowParsePostfixType(){for(flowParsePrimaryType();!canInsertSemicolon()&&(match(tt.bracketL)||match(tt.questionDot));)eat(tt.questionDot),expect(tt.bracketL),eat(tt.bracketR)||(flowParseType(),expect(tt.bracketR))}function flowParsePrefixType(){eat(tt.question)?flowParsePrefixType():flowParsePostfixType()}function flowParseAnonFunctionWithoutParens(){flowParsePrefixType(),!state.noAnonFunctionType&&eat(tt.arrow)&&flowParseType()}function flowParseIntersectionType(){for(eat(tt.bitwiseAND),flowParseAnonFunctionWithoutParens();eat(tt.bitwiseAND);)flowParseAnonFunctionWithoutParens()}function flowParseUnionType(){for(eat(tt.bitwiseOR),flowParseIntersectionType();eat(tt.bitwiseOR);)flowParseIntersectionType()}function flowParseType(){flowParseUnionType()}export function flowParseTypeAnnotation(){flowParseTypeInitialiser()}function flowParseTypeAnnotatableIdentifier(){parseIdentifier(),match(tt.colon)&&flowParseTypeAnnotation()}export function flowParseVariance(){(match(tt.plus)||match(tt.minus))&&(next(),state.tokens[state.tokens.length-1].isType=!0)}export function flowParseFunctionBodyAndFinish(e){match(tt.colon)&&flowParseTypeAndPredicateInitialiser(),parseFunctionBody(!1,e)}export function flowParseSubscript(e,t,a){if(match(tt.questionDot)&&lookaheadType()===tt.lessThan)return t?void(a.stop=!0):(next(),flowParseTypeParameterInstantiation(),expect(tt.parenL),void parseCallExpressionArguments());if(!t&&match(tt.lessThan)){const e=state.snapshot();if(flowParseTypeParameterInstantiation(),expect(tt.parenL),parseCallExpressionArguments(),!state.error)return;state.restoreFromSnapshot(e)}baseParseSubscript(e,t,a)}export function flowStartParseNewArguments(){if(match(tt.lessThan)){const e=state.snapshot();flowParseTypeParameterInstantiation(),state.error&&state.restoreFromSnapshot(e)}}export function flowTryParseStatement(){if(match(tt.name)&&state.contextualKeyword===ContextualKeyword._interface){const e=pushTypeContext(0);return next(),flowParseInterface(),popTypeContext(e),!0}return!!isContextual(ContextualKeyword._enum)&&(flowParseEnumDeclaration(),!0)}export function flowTryParseExportDefaultExpression(){return!!isContextual(ContextualKeyword._enum)&&(flowParseEnumDeclaration(),!0)}export function flowParseIdentifierStatement(e){if(e===ContextualKeyword._declare){if(match(tt._class)||match(tt.name)||match(tt._function)||match(tt._var)||match(tt._export)){const e=pushTypeContext(1);flowParseDeclare(),popTypeContext(e)}}else if(match(tt.name))if(e===ContextualKeyword._interface){const e=pushTypeContext(1);flowParseInterface(),popTypeContext(e)}else if(e===ContextualKeyword._type){const e=pushTypeContext(1);flowParseTypeAlias(),popTypeContext(e)}else if(e===ContextualKeyword._opaque){const e=pushTypeContext(1);flowParseOpaqueType(!1),popTypeContext(e)}semicolon()}export function flowShouldParseExportDeclaration(){return isContextual(ContextualKeyword._type)||isContextual(ContextualKeyword._interface)||isContextual(ContextualKeyword._opaque)||isContextual(ContextualKeyword._enum)}export function flowShouldDisallowExportDefaultSpecifier(){return match(tt.name)&&(state.contextualKeyword===ContextualKeyword._type||state.contextualKeyword===ContextualKeyword._interface||state.contextualKeyword===ContextualKeyword._opaque||state.contextualKeyword===ContextualKeyword._enum)}export function flowParseExportDeclaration(){if(isContextual(ContextualKeyword._type)){const e=pushTypeContext(1);next(),match(tt.braceL)?(parseExportSpecifiers(),parseExportFrom()):flowParseTypeAlias(),popTypeContext(e)}else if(isContextual(ContextualKeyword._opaque)){const e=pushTypeContext(1);next(),flowParseOpaqueType(!1),popTypeContext(e)}else if(isContextual(ContextualKeyword._interface)){const e=pushTypeContext(1);next(),flowParseInterface(),popTypeContext(e)}else parseStatement(!0)}export function flowShouldParseExportStar(){return match(tt.star)||isContextual(ContextualKeyword._type)&&lookaheadType()===tt.star}export function flowParseExportStar(){if(eatContextual(ContextualKeyword._type)){const e=pushTypeContext(2);baseParseExportStar(),popTypeContext(e)}else baseParseExportStar()}export function flowAfterParseClassSuper(e){if(e&&match(tt.lessThan)&&flowParseTypeParameterInstantiation(),isContextual(ContextualKeyword._implements)){const e=pushTypeContext(0);next(),state.tokens[state.tokens.length-1].type=tt._implements;do{flowParseRestrictedIdentifier(),match(tt.lessThan)&&flowParseTypeParameterInstantiation()}while(eat(tt.comma));popTypeContext(e)}}export function flowStartParseObjPropValue(){match(tt.lessThan)&&(flowParseTypeParameterDeclaration(),match(tt.parenL)||unexpected())}export function flowParseAssignableListItemTypes(){const e=pushTypeContext(0);eat(tt.question),match(tt.colon)&&flowParseTypeAnnotation(),popTypeContext(e)}export function flowStartParseImportSpecifiers(){if(match(tt._typeof)||isContextual(ContextualKeyword._type)){const e=lookaheadTypeAndKeyword();(isMaybeDefaultImport(e)||e.type===tt.braceL||e.type===tt.star)&&next()}}export function flowParseImportSpecifier(){const e=state.contextualKeyword===ContextualKeyword._type||state.type===tt._typeof;e?next():parseIdentifier(),isContextual(ContextualKeyword._as)&&!isLookaheadContextual(ContextualKeyword._as)?(parseIdentifier(),(!e||match(tt.name)||state.type&TokenType.IS_KEYWORD)&&parseIdentifier()):(e&&(match(tt.name)||state.type&TokenType.IS_KEYWORD)&&parseIdentifier(),eatContextual(ContextualKeyword._as)&&parseIdentifier())}export function flowStartParseFunctionParams(){if(match(tt.lessThan)){const e=pushTypeContext(0);flowParseTypeParameterDeclaration(),popTypeContext(e)}}export function flowAfterParseVarHead(){match(tt.colon)&&flowParseTypeAnnotation()}export function flowStartParseAsyncArrowFromCallExpression(){if(match(tt.colon)){const e=state.noAnonFunctionType;state.noAnonFunctionType=!0,flowParseTypeAnnotation(),state.noAnonFunctionType=e}}export function flowParseMaybeAssign(e,t){if(match(tt.lessThan)){const a=state.snapshot();let o=baseParseMaybeAssign(e,t);if(!state.error)return o;state.restoreFromSnapshot(a),state.type=tt.typeParameterStart;const r=pushTypeContext(0);if(flowParseTypeParameterDeclaration(),popTypeContext(r),o=baseParseMaybeAssign(e,t),o)return!0;unexpected()}return baseParseMaybeAssign(e,t)}export function flowParseArrow(){if(match(tt.colon)){const e=pushTypeContext(0),t=state.snapshot(),a=state.noAnonFunctionType;state.noAnonFunctionType=!0,flowParseTypeAndPredicateInitialiser(),state.noAnonFunctionType=a,canInsertSemicolon()&&unexpected(),match(tt.arrow)||unexpected(),state.error&&state.restoreFromSnapshot(t),popTypeContext(e)}return eat(tt.arrow)}export function flowParseSubscripts(e,t=!1){if(state.tokens[state.tokens.length-1].contextualKeyword===ContextualKeyword._async&&match(tt.lessThan)){const e=state.snapshot();if(parseAsyncArrowWithTypeParameters()&&!state.error)return;state.restoreFromSnapshot(e)}baseParseSubscripts(e,t)}function parseAsyncArrowWithTypeParameters(){state.scopeDepth++;const e=state.tokens.length;return parseFunctionParams(),!!parseArrow()&&(parseArrowExpression(e),!0)}function flowParseEnumDeclaration(){expectContextual(ContextualKeyword._enum),state.tokens[state.tokens.length-1].type=tt._enum,parseIdentifier(),flowParseEnumBody()}function flowParseEnumBody(){eatContextual(ContextualKeyword._of)&&next(),expect(tt.braceL),flowParseEnumMembers(),expect(tt.braceR)}function flowParseEnumMembers(){for(;!match(tt.braceR)&&!state.error&&!eat(tt.ellipsis);)flowParseEnumMember(),match(tt.braceR)||expect(tt.comma)}function flowParseEnumMember(){parseIdentifier(),eat(tt.eq)&&next()}