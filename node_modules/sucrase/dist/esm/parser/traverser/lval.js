import{flowParseAssignableListItemTypes}from"../plugins/flow";import{tsParseAssignableListItemTypes,tsParseModifiers}from"../plugins/typescript";import{eat,IdentifierRole,match,next,popTypeContext,pushTypeContext}from"../tokenizer/index";import{ContextualKeyword}from"../tokenizer/keywords";import{TokenType,TokenType as tt}from"../tokenizer/types";import{isFlowEnabled,isTypeScriptEnabled,state}from"./base";import{parseIdentifier,parseMaybeAssign,parseObj}from"./expression";import{expect,unexpected}from"./util";export function parseSpread(){next(),parseMaybeAssign(!1)}export function parseRest(e){next(),parseBindingAtom(e)}export function parseBindingIdentifier(e){parseIdentifier(),markPriorBindingIdentifier(e)}export function parseImportedIdentifier(){parseIdentifier(),state.tokens[state.tokens.length-1].identifierRole=IdentifierRole.ImportDeclaration}export function markPriorBindingIdentifier(e){let t;t=0===state.scopeDepth?IdentifierRole.TopLevelDeclaration:e?IdentifierRole.BlockScopedDeclaration:IdentifierRole.FunctionScopedDeclaration,state.tokens[state.tokens.length-1].identifierRole=t}export function parseBindingAtom(e){switch(state.type){case tt._this:{const e=pushTypeContext(0);return next(),void popTypeContext(e)}case tt._yield:case tt.name:return state.type=tt.name,void parseBindingIdentifier(e);case tt.bracketL:return next(),void parseBindingList(tt.bracketR,e,!0);case tt.braceL:return void parseObj(!0,e);default:unexpected()}}export function parseBindingList(e,t,s=!1,n=!1,i=0){let r=!0,o=!1;const a=state.tokens.length;for(;!eat(e)&&!state.error;)if(r?r=!1:(expect(tt.comma),state.tokens[state.tokens.length-1].contextId=i,!o&&state.tokens[a].isType&&(state.tokens[state.tokens.length-1].isType=!0,o=!0)),s&&match(tt.comma));else{if(eat(e))break;if(match(tt.ellipsis)){parseRest(t),parseAssignableListItemTypes(),eat(TokenType.comma),expect(e);break}parseAssignableListItem(n,t)}}function parseAssignableListItem(e,t){e&&tsParseModifiers([ContextualKeyword._public,ContextualKeyword._protected,ContextualKeyword._private,ContextualKeyword._readonly,ContextualKeyword._override]),parseMaybeDefault(t),parseAssignableListItemTypes(),parseMaybeDefault(t,!0)}function parseAssignableListItemTypes(){isFlowEnabled?flowParseAssignableListItemTypes():isTypeScriptEnabled&&tsParseAssignableListItemTypes()}export function parseMaybeDefault(e,t=!1){if(t||parseBindingAtom(e),!eat(tt.eq))return;const s=state.tokens.length-1;parseMaybeAssign(),state.tokens[s].rhsEndIndex=state.tokens.length}