import State from"../tokenizer/state";import{charCodes}from"../util/charcodes";export let isJSXEnabled;export let isTypeScriptEnabled;export let isFlowEnabled;export let state;export let input;export let nextContextId;export function getNextContextId(){return nextContextId++}export function augmentError(t){if("pos"in t){const e=locationForIndex(t.pos);t.message+=` (${e.line}:${e.column})`,t.loc=e}return t}export class Loc{constructor(t,e){this.line=t,this.column=e}}export function locationForIndex(t){let e=1,o=1;for(let n=0;n<t;n++)input.charCodeAt(n)===charCodes.lineFeed?(e++,o=1):o++;return new Loc(e,o)}export function initParser(t,e,o,n){input=t,state=new State,nextContextId=1,isJSXEnabled=e,isTypeScriptEnabled=o,isFlowEnabled=n}