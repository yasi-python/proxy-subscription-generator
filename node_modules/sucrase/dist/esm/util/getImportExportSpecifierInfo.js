import{TokenType as tt}from"../parser/tokenizer/types";export default function getImportExportSpecifierInfo(e,t=e.currentIndex()){let i=t+1;if(isSpecifierEnd(e,i)){const n=e.identifierNameAtIndex(t);return{isType:!1,leftName:n,rightName:n,endIndex:i}}if(i++,isSpecifierEnd(e,i))return{isType:!0,leftName:null,rightName:null,endIndex:i};if(i++,isSpecifierEnd(e,i))return{isType:!1,leftName:e.identifierNameAtIndex(t),rightName:e.identifierNameAtIndex(t+2),endIndex:i};if(i++,isSpecifierEnd(e,i))return{isType:!0,leftName:null,rightName:null,endIndex:i};throw new Error(`Unexpected import/export specifier at ${t}`)}function isSpecifierEnd(e,t){const i=e.tokens[t];return i.type===tt.braceR||i.type===tt.comma}