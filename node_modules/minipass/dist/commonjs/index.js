"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Minipass=exports.isWritable=exports.isReadable=exports.isStream=void 0;const proc="object"==typeof process&&process?process:{stdout:null,stderr:null},node_events_1=require("node:events"),node_stream_1=__importDefault(require("node:stream")),node_string_decoder_1=require("node:string_decoder"),isStream=t=>!!t&&"object"==typeof t&&(t instanceof Minipass||t instanceof node_stream_1.default||(0,exports.isReadable)(t)||(0,exports.isWritable)(t));exports.isStream=isStream;const isReadable=t=>!!t&&"object"==typeof t&&t instanceof node_events_1.EventEmitter&&"function"==typeof t.pipe&&t.pipe!==node_stream_1.default.Writable.prototype.pipe;exports.isReadable=isReadable;const isWritable=t=>!!t&&"object"==typeof t&&t instanceof node_events_1.EventEmitter&&"function"==typeof t.write&&"function"==typeof t.end;exports.isWritable=isWritable;const EOF=Symbol("EOF"),MAYBE_EMIT_END=Symbol("maybeEmitEnd"),EMITTED_END=Symbol("emittedEnd"),EMITTING_END=Symbol("emittingEnd"),EMITTED_ERROR=Symbol("emittedError"),CLOSED=Symbol("closed"),READ=Symbol("read"),FLUSH=Symbol("flush"),FLUSHCHUNK=Symbol("flushChunk"),ENCODING=Symbol("encoding"),DECODER=Symbol("decoder"),FLOWING=Symbol("flowing"),PAUSED=Symbol("paused"),RESUME=Symbol("resume"),BUFFER=Symbol("buffer"),PIPES=Symbol("pipes"),BUFFERLENGTH=Symbol("bufferLength"),BUFFERPUSH=Symbol("bufferPush"),BUFFERSHIFT=Symbol("bufferShift"),OBJECTMODE=Symbol("objectMode"),DESTROYED=Symbol("destroyed"),ERROR=Symbol("error"),EMITDATA=Symbol("emitData"),EMITEND=Symbol("emitEnd"),EMITEND2=Symbol("emitEnd2"),ASYNC=Symbol("async"),ABORT=Symbol("abort"),ABORTED=Symbol("aborted"),SIGNAL=Symbol("signal"),DATALISTENERS=Symbol("dataListeners"),DISCARDED=Symbol("discarded"),defer=t=>Promise.resolve().then(t),nodefer=t=>t(),isEndish=t=>"end"===t||"finish"===t||"prefinish"===t,isArrayBufferLike=t=>t instanceof ArrayBuffer||!!t&&"object"==typeof t&&t.constructor&&"ArrayBuffer"===t.constructor.name&&t.byteLength>=0,isArrayBufferView=t=>!Buffer.isBuffer(t)&&ArrayBuffer.isView(t);class Pipe{src;dest;opts;ondrain;constructor(t,e,s){this.src=t,this.dest=e,this.opts=s,this.ondrain=()=>t[RESUME](),this.dest.on("drain",this.ondrain)}unpipe(){this.dest.removeListener("drain",this.ondrain)}proxyErrors(t){}end(){this.unpipe(),this.opts.end&&this.dest.end()}}class PipeProxyErrors extends Pipe{unpipe(){this.src.removeListener("error",this.proxyErrors),super.unpipe()}constructor(t,e,s){super(t,e,s),this.proxyErrors=t=>e.emit("error",t),t.on("error",this.proxyErrors)}}const isObjectModeOptions=t=>!!t.objectMode,isEncodingOptions=t=>!t.objectMode&&!!t.encoding&&"buffer"!==t.encoding;class Minipass extends node_events_1.EventEmitter{[FLOWING]=!1;[PAUSED]=!1;[PIPES]=[];[BUFFER]=[];[OBJECTMODE];[ENCODING];[ASYNC];[DECODER];[EOF]=!1;[EMITTED_END]=!1;[EMITTING_END]=!1;[CLOSED]=!1;[EMITTED_ERROR]=null;[BUFFERLENGTH]=0;[DESTROYED]=!1;[SIGNAL];[ABORTED]=!1;[DATALISTENERS]=0;[DISCARDED]=!1;writable=!0;readable=!0;constructor(...t){const e=t[0]||{};if(super(),e.objectMode&&"string"==typeof e.encoding)throw new TypeError("Encoding and objectMode may not be used together");isObjectModeOptions(e)?(this[OBJECTMODE]=!0,this[ENCODING]=null):isEncodingOptions(e)?(this[ENCODING]=e.encoding,this[OBJECTMODE]=!1):(this[OBJECTMODE]=!1,this[ENCODING]=null),this[ASYNC]=!!e.async,this[DECODER]=this[ENCODING]?new node_string_decoder_1.StringDecoder(this[ENCODING]):null,e&&!0===e.debugExposeBuffer&&Object.defineProperty(this,"buffer",{get:()=>this[BUFFER]}),e&&!0===e.debugExposePipes&&Object.defineProperty(this,"pipes",{get:()=>this[PIPES]});const{signal:s}=e;s&&(this[SIGNAL]=s,s.aborted?this[ABORT]():s.addEventListener("abort",()=>this[ABORT]()))}get bufferLength(){return this[BUFFERLENGTH]}get encoding(){return this[ENCODING]}set encoding(t){throw new Error("Encoding must be set at instantiation time")}setEncoding(t){throw new Error("Encoding must be set at instantiation time")}get objectMode(){return this[OBJECTMODE]}set objectMode(t){throw new Error("objectMode must be set at instantiation time")}get async(){return this[ASYNC]}set async(t){this[ASYNC]=this[ASYNC]||!!t}[ABORT](){this[ABORTED]=!0,this.emit("abort",this[SIGNAL]?.reason),this.destroy(this[SIGNAL]?.reason)}get aborted(){return this[ABORTED]}set aborted(t){}write(t,e,s){if(this[ABORTED])return!1;if(this[EOF])throw new Error("write after end");if(this[DESTROYED])return this.emit("error",Object.assign(new Error("Cannot call write after a stream was destroyed"),{code:"ERR_STREAM_DESTROYED"})),!0;"function"==typeof e&&(s=e,e="utf8"),e||(e="utf8");const i=this[ASYNC]?defer:nodefer;if(!this[OBJECTMODE]&&!Buffer.isBuffer(t))if(isArrayBufferView(t))t=Buffer.from(t.buffer,t.byteOffset,t.byteLength);else if(isArrayBufferLike(t))t=Buffer.from(t);else if("string"!=typeof t)throw new Error("Non-contiguous data written to non-objectMode stream");return this[OBJECTMODE]?(this[FLOWING]&&0!==this[BUFFERLENGTH]&&this[FLUSH](!0),this[FLOWING]?this.emit("data",t):this[BUFFERPUSH](t),0!==this[BUFFERLENGTH]&&this.emit("readable"),s&&i(s),this[FLOWING]):t.length?("string"!=typeof t||e===this[ENCODING]&&!this[DECODER]?.lastNeed||(t=Buffer.from(t,e)),Buffer.isBuffer(t)&&this[ENCODING]&&(t=this[DECODER].write(t)),this[FLOWING]&&0!==this[BUFFERLENGTH]&&this[FLUSH](!0),this[FLOWING]?this.emit("data",t):this[BUFFERPUSH](t),0!==this[BUFFERLENGTH]&&this.emit("readable"),s&&i(s),this[FLOWING]):(0!==this[BUFFERLENGTH]&&this.emit("readable"),s&&i(s),this[FLOWING])}read(t){if(this[DESTROYED])return null;if(this[DISCARDED]=!1,0===this[BUFFERLENGTH]||0===t||t&&t>this[BUFFERLENGTH])return this[MAYBE_EMIT_END](),null;this[OBJECTMODE]&&(t=null),this[BUFFER].length>1&&!this[OBJECTMODE]&&(this[BUFFER]=[this[ENCODING]?this[BUFFER].join(""):Buffer.concat(this[BUFFER],this[BUFFERLENGTH])]);const e=this[READ](t||null,this[BUFFER][0]);return this[MAYBE_EMIT_END](),e}[READ](t,e){if(this[OBJECTMODE])this[BUFFERSHIFT]();else{const s=e;t===s.length||null===t?this[BUFFERSHIFT]():"string"==typeof s?(this[BUFFER][0]=s.slice(t),e=s.slice(0,t),this[BUFFERLENGTH]-=t):(this[BUFFER][0]=s.subarray(t),e=s.subarray(0,t),this[BUFFERLENGTH]-=t)}return this.emit("data",e),this[BUFFER].length||this[EOF]||this.emit("drain"),e}end(t,e,s){return"function"==typeof t&&(s=t,t=void 0),"function"==typeof e&&(s=e,e="utf8"),void 0!==t&&this.write(t,e),s&&this.once("end",s),this[EOF]=!0,this.writable=!1,!this[FLOWING]&&this[PAUSED]||this[MAYBE_EMIT_END](),this}[RESUME](){this[DESTROYED]||(this[DATALISTENERS]||this[PIPES].length||(this[DISCARDED]=!0),this[PAUSED]=!1,this[FLOWING]=!0,this.emit("resume"),this[BUFFER].length?this[FLUSH]():this[EOF]?this[MAYBE_EMIT_END]():this.emit("drain"))}resume(){return this[RESUME]()}pause(){this[FLOWING]=!1,this[PAUSED]=!0,this[DISCARDED]=!1}get destroyed(){return this[DESTROYED]}get flowing(){return this[FLOWING]}get paused(){return this[PAUSED]}[BUFFERPUSH](t){this[OBJECTMODE]?this[BUFFERLENGTH]+=1:this[BUFFERLENGTH]+=t.length,this[BUFFER].push(t)}[BUFFERSHIFT](){return this[OBJECTMODE]?this[BUFFERLENGTH]-=1:this[BUFFERLENGTH]-=this[BUFFER][0].length,this[BUFFER].shift()}[FLUSH](t=!1){do{}while(this[FLUSHCHUNK](this[BUFFERSHIFT]())&&this[BUFFER].length);t||this[BUFFER].length||this[EOF]||this.emit("drain")}[FLUSHCHUNK](t){return this.emit("data",t),this[FLOWING]}pipe(t,e){if(this[DESTROYED])return t;this[DISCARDED]=!1;const s=this[EMITTED_END];return e=e||{},t===proc.stdout||t===proc.stderr?e.end=!1:e.end=!1!==e.end,e.proxyErrors=!!e.proxyErrors,s?e.end&&t.end():(this[PIPES].push(e.proxyErrors?new PipeProxyErrors(this,t,e):new Pipe(this,t,e)),this[ASYNC]?defer(()=>this[RESUME]()):this[RESUME]()),t}unpipe(t){const e=this[PIPES].find(e=>e.dest===t);e&&(1===this[PIPES].length?(this[FLOWING]&&0===this[DATALISTENERS]&&(this[FLOWING]=!1),this[PIPES]=[]):this[PIPES].splice(this[PIPES].indexOf(e),1),e.unpipe())}addListener(t,e){return this.on(t,e)}on(t,e){const s=super.on(t,e);if("data"===t)this[DISCARDED]=!1,this[DATALISTENERS]++,this[PIPES].length||this[FLOWING]||this[RESUME]();else if("readable"===t&&0!==this[BUFFERLENGTH])super.emit("readable");else if(isEndish(t)&&this[EMITTED_END])super.emit(t),this.removeAllListeners(t);else if("error"===t&&this[EMITTED_ERROR]){const t=e;this[ASYNC]?defer(()=>t.call(this,this[EMITTED_ERROR])):t.call(this,this[EMITTED_ERROR])}return s}removeListener(t,e){return this.off(t,e)}off(t,e){const s=super.off(t,e);return"data"===t&&(this[DATALISTENERS]=this.listeners("data").length,0!==this[DATALISTENERS]||this[DISCARDED]||this[PIPES].length||(this[FLOWING]=!1)),s}removeAllListeners(t){const e=super.removeAllListeners(t);return"data"!==t&&void 0!==t||(this[DATALISTENERS]=0,this[DISCARDED]||this[PIPES].length||(this[FLOWING]=!1)),e}get emittedEnd(){return this[EMITTED_END]}[MAYBE_EMIT_END](){this[EMITTING_END]||this[EMITTED_END]||this[DESTROYED]||0!==this[BUFFER].length||!this[EOF]||(this[EMITTING_END]=!0,this.emit("end"),this.emit("prefinish"),this.emit("finish"),this[CLOSED]&&this.emit("close"),this[EMITTING_END]=!1)}emit(t,...e){const s=e[0];if("error"!==t&&"close"!==t&&t!==DESTROYED&&this[DESTROYED])return!1;if("data"===t)return!(!this[OBJECTMODE]&&!s)&&(this[ASYNC]?(defer(()=>this[EMITDATA](s)),!0):this[EMITDATA](s));if("end"===t)return this[EMITEND]();if("close"===t){if(this[CLOSED]=!0,!this[EMITTED_END]&&!this[DESTROYED])return!1;const t=super.emit("close");return this.removeAllListeners("close"),t}if("error"===t){this[EMITTED_ERROR]=s,super.emit(ERROR,s);const t=!(this[SIGNAL]&&!this.listeners("error").length)&&super.emit("error",s);return this[MAYBE_EMIT_END](),t}if("resume"===t){const t=super.emit("resume");return this[MAYBE_EMIT_END](),t}if("finish"===t||"prefinish"===t){const e=super.emit(t);return this.removeAllListeners(t),e}const i=super.emit(t,...e);return this[MAYBE_EMIT_END](),i}[EMITDATA](t){for(const e of this[PIPES])!1===e.dest.write(t)&&this.pause();const e=!this[DISCARDED]&&super.emit("data",t);return this[MAYBE_EMIT_END](),e}[EMITEND](){return!this[EMITTED_END]&&(this[EMITTED_END]=!0,this.readable=!1,this[ASYNC]?(defer(()=>this[EMITEND2]()),!0):this[EMITEND2]())}[EMITEND2](){if(this[DECODER]){const t=this[DECODER].end();if(t){for(const e of this[PIPES])e.dest.write(t);this[DISCARDED]||super.emit("data",t)}}for(const t of this[PIPES])t.end();const t=super.emit("end");return this.removeAllListeners("end"),t}async collect(){const t=Object.assign([],{dataLength:0});this[OBJECTMODE]||(t.dataLength=0);const e=this.promise();return this.on("data",e=>{t.push(e),this[OBJECTMODE]||(t.dataLength+=e.length)}),await e,t}async concat(){if(this[OBJECTMODE])throw new Error("cannot concat in objectMode");const t=await this.collect();return this[ENCODING]?t.join(""):Buffer.concat(t,t.dataLength)}async promise(){return new Promise((t,e)=>{this.on(DESTROYED,()=>e(new Error("stream destroyed"))),this.on("error",t=>e(t)),this.on("end",()=>t())})}[Symbol.asyncIterator](){this[DISCARDED]=!1;let t=!1;const e=async()=>(this.pause(),t=!0,{value:void 0,done:!0});return{next:()=>{if(t)return e();const s=this.read();if(null!==s)return Promise.resolve({done:!1,value:s});if(this[EOF])return e();let i,r;const E=t=>{this.off("data",n),this.off("end",o),this.off(DESTROYED,h),e(),r(t)},n=t=>{this.off("error",E),this.off("end",o),this.off(DESTROYED,h),this.pause(),i({value:t,done:!!this[EOF]})},o=()=>{this.off("error",E),this.off("data",n),this.off(DESTROYED,h),e(),i({done:!0,value:void 0})},h=()=>E(new Error("stream destroyed"));return new Promise((t,e)=>{r=e,i=t,this.once(DESTROYED,h),this.once("error",E),this.once("end",o),this.once("data",n)})},throw:e,return:e,[Symbol.asyncIterator](){return this}}}[Symbol.iterator](){this[DISCARDED]=!1;let t=!1;const e=()=>(this.pause(),this.off(ERROR,e),this.off(DESTROYED,e),this.off("end",e),t=!0,{done:!0,value:void 0});return this.once("end",e),this.once(ERROR,e),this.once(DESTROYED,e),{next:()=>{if(t)return e();const s=this.read();return null===s?e():{done:!1,value:s}},throw:e,return:e,[Symbol.iterator](){return this}}}destroy(t){return this[DESTROYED]?(t?this.emit("error",t):this.emit(DESTROYED),this):(this[DESTROYED]=!0,this[DISCARDED]=!0,this[BUFFER].length=0,this[BUFFERLENGTH]=0,"function"!=typeof this.close||this[CLOSED]||this.close(),t?this.emit("error",t):this.emit(DESTROYED),this)}static get isStream(){return exports.isStream}}exports.Minipass=Minipass;