import{Alias}from"../nodes/Alias.js";import{isScalar}from"../nodes/identity.js";import{composeCollection}from"./compose-collection.js";import{composeScalar}from"./compose-scalar.js";import{resolveEnd}from"./resolve-end.js";import{emptyScalarPosition}from"./util-empty-scalar-position.js";const CN={composeNode:composeNode,composeEmptyNode:composeEmptyNode};function composeNode(o,e,s,t){const c=o.atKey,{spaceBefore:n,comment:r,anchor:a,tag:m}=s;let i,p=!0;switch(e.type){case"alias":i=composeAlias(o,e,t),(a||m)&&t(e,"ALIAS_PROPS","An alias node must not specify any properties");break;case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":case"block-scalar":i=composeScalar(o,e,m,t),a&&(i.anchor=a.source.substring(1));break;case"block-map":case"block-seq":case"flow-collection":i=composeCollection(CN,o,e,s,t),a&&(i.anchor=a.source.substring(1));break;default:t(e,"UNEXPECTED_TOKEN","error"===e.type?e.message:`Unsupported token (type: ${e.type})`),i=composeEmptyNode(o,e.offset,void 0,null,s,t),p=!1}if(a&&""===i.anchor&&t(a,"BAD_ALIAS","Anchor cannot be an empty string"),c&&o.options.stringKeys&&(!isScalar(i)||"string"!=typeof i.value||i.tag&&"tag:yaml.org,2002:str"!==i.tag)){t(m??e,"NON_STRING_KEY","With stringKeys, all keys must be strings")}return n&&(i.spaceBefore=!0),r&&("scalar"===e.type&&""===e.source?i.comment=r:i.commentBefore=r),o.options.keepSourceTokens&&p&&(i.srcToken=e),i}function composeEmptyNode(o,e,s,t,{spaceBefore:c,comment:n,anchor:r,tag:a,end:m},i){const p={type:"scalar",offset:emptyScalarPosition(e,s,t),indent:-1,source:""},l=composeScalar(o,p,a,i);return r&&(l.anchor=r.source.substring(1),""===l.anchor&&i(r,"BAD_ALIAS","Anchor cannot be an empty string")),c&&(l.spaceBefore=!0),n&&(l.comment=n,l.range[2]=m),l}function composeAlias({options:o},{offset:e,source:s,end:t},c){const n=new Alias(s.substring(1));""===n.source&&c(e,"BAD_ALIAS","Alias cannot be an empty string"),n.source.endsWith(":")&&c(e+s.length-1,"BAD_ALIAS","Alias ending in : is ambiguous",!0);const r=e+s.length,a=resolveEnd(t,r,o.strict,c);return n.range=[e,r,a.offset],a.comment&&(n.comment=a.comment),n}export{composeEmptyNode,composeNode};