import{Document}from"../doc/Document.js";import{composeNode,composeEmptyNode}from"./compose-node.js";import{resolveEnd}from"./resolve-end.js";import{resolveProps}from"./resolve-props.js";function composeDoc(e,o,{offset:t,start:n,value:s,end:r},c){const m=Object.assign({_directives:o},e),i=new Document(void 0,m),d={atKey:!1,atRoot:!0,directives:i.directives,options:i.options,schema:i.schema},p=resolveProps(n,{indicator:"doc-start",next:s??r?.[0],offset:t,onError:c,parentIndent:0,startOnNewline:!0});p.found&&(i.directives.docStart=!0,!s||"block-map"!==s.type&&"block-seq"!==s.type||p.hasNewline||c(p.end,"MISSING_CHAR","Block collection cannot start on same line with directives-end marker")),i.contents=s?composeNode(d,s,p,c):composeEmptyNode(d,p.end,n,null,p,c);const a=i.contents.range[2],l=resolveEnd(r,a,!1,c);return l.comment&&(i.comment=l.comment),i.range=[t,a,l.offset],i}export{composeDoc};