import{isDocument,isNode,isPair,isCollection,isMap,isSeq,isScalar,isAlias}from"./nodes/identity.js";const BREAK=Symbol("break visit"),SKIP=Symbol("skip children"),REMOVE=Symbol("remove node");function visit(i,e){const t=initVisitor(e);isDocument(i)?visit_(null,i.contents,t,Object.freeze([i]))===REMOVE&&(i.contents=null):visit_(null,i,t,Object.freeze([]))}function visit_(i,e,t,s){const n=callVisitor(i,e,t,s);if(isNode(n)||isPair(n))return replaceNode(i,s,n),visit_(i,n,t,s);if("symbol"!=typeof n)if(isCollection(e)){s=Object.freeze(s.concat(e));for(let i=0;i<e.items.length;++i){const n=visit_(i,e.items[i],t,s);if("number"==typeof n)i=n-1;else{if(n===BREAK)return BREAK;n===REMOVE&&(e.items.splice(i,1),i-=1)}}}else if(isPair(e)){s=Object.freeze(s.concat(e));const i=visit_("key",e.key,t,s);if(i===BREAK)return BREAK;i===REMOVE&&(e.key=null);const n=visit_("value",e.value,t,s);if(n===BREAK)return BREAK;n===REMOVE&&(e.value=null)}return n}async function visitAsync(i,e){const t=initVisitor(e);isDocument(i)?await visitAsync_(null,i.contents,t,Object.freeze([i]))===REMOVE&&(i.contents=null):await visitAsync_(null,i,t,Object.freeze([]))}async function visitAsync_(i,e,t,s){const n=await callVisitor(i,e,t,s);if(isNode(n)||isPair(n))return replaceNode(i,s,n),visitAsync_(i,n,t,s);if("symbol"!=typeof n)if(isCollection(e)){s=Object.freeze(s.concat(e));for(let i=0;i<e.items.length;++i){const n=await visitAsync_(i,e.items[i],t,s);if("number"==typeof n)i=n-1;else{if(n===BREAK)return BREAK;n===REMOVE&&(e.items.splice(i,1),i-=1)}}}else if(isPair(e)){s=Object.freeze(s.concat(e));const i=await visitAsync_("key",e.key,t,s);if(i===BREAK)return BREAK;i===REMOVE&&(e.key=null);const n=await visitAsync_("value",e.value,t,s);if(n===BREAK)return BREAK;n===REMOVE&&(e.value=null)}return n}function initVisitor(i){return"object"==typeof i&&(i.Collection||i.Node||i.Value)?Object.assign({Alias:i.Node,Map:i.Node,Scalar:i.Node,Seq:i.Node},i.Value&&{Map:i.Value,Scalar:i.Value,Seq:i.Value},i.Collection&&{Map:i.Collection,Seq:i.Collection},i):i}function callVisitor(i,e,t,s){return"function"==typeof t?t(i,e,s):isMap(e)?t.Map?.(i,e,s):isSeq(e)?t.Seq?.(i,e,s):isPair(e)?t.Pair?.(i,e,s):isScalar(e)?t.Scalar?.(i,e,s):isAlias(e)?t.Alias?.(i,e,s):void 0}function replaceNode(i,e,t){const s=e[e.length-1];if(isCollection(s))s.items[i]=t;else if(isPair(s))"key"===i?s.key=t:s.value=t;else{if(!isDocument(s)){const i=isAlias(s)?"alias":"scalar";throw new Error(`Cannot replace node with ${i} parent`)}s.contents=t}}visit.BREAK=BREAK,visit.SKIP=SKIP,visit.REMOVE=REMOVE,visitAsync.BREAK=BREAK,visitAsync.SKIP=SKIP,visitAsync.REMOVE=REMOVE;export{visit,visitAsync};