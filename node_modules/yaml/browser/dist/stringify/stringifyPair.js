import{isCollection,isNode,isScalar,isSeq}from"../nodes/identity.js";import{Scalar}from"../nodes/Scalar.js";import{stringify}from"./stringify.js";import{lineComment,indentComment}from"./stringifyComment.js";function stringifyPair({key:n,value:e},i,t,l){const{allNullValues:o,doc:s,indent:r,indentStep:m,options:{commentString:a,indentSeq:c,simpleKeys:f}}=i;let d=isNode(n)&&n.comment||null;if(f){if(d)throw new Error("With simple keys, key nodes cannot have comments");if(isCollection(n)||!isNode(n)&&"object"==typeof n){throw new Error("With simple keys, collection cannot be used as a key value")}}let y=!f&&(!n||d&&null==e&&!i.inFlow||isCollection(n)||(isScalar(n)?n.type===Scalar.BLOCK_FOLDED||n.type===Scalar.BLOCK_LITERAL:"object"==typeof n));i=Object.assign({},i,{allNullValues:!1,implicitKey:!y&&(f||!o),indent:r+m});let p,u,g,w=!1,h=!1,C=stringify(n,i,()=>w=!0,()=>h=!0);if(!y&&!i.inFlow&&C.length>1024){if(f)throw new Error("With simple keys, single line scalar must not span more than 1024 characters");y=!0}if(i.inFlow){if(o||null==e)return w&&t&&t(),""===C?"?":y?`? ${C}`:C}else if(o&&!f||null==e&&y)return C=`? ${C}`,d&&!w?C+=lineComment(C,i.indent,a(d)):h&&l&&l(),C;w&&(d=null),y?(d&&(C+=lineComment(C,i.indent,a(d))),C=`? ${C}\n${r}:`):(C=`${C}:`,d&&(C+=lineComment(C,i.indent,a(d)))),isNode(e)?(p=!!e.spaceBefore,u=e.commentBefore,g=e.comment):(p=!1,u=null,g=null,e&&"object"==typeof e&&(e=s.createNode(e))),i.implicitKey=!1,y||d||!isScalar(e)||(i.indentAtStart=C.length+1),h=!1,c||!(m.length>=2)||i.inFlow||y||!isSeq(e)||e.flow||e.tag||e.anchor||(i.indent=i.indent.substring(2));let S=!1;const j=stringify(e,i,()=>S=!0,()=>h=!0);let F=" ";if(d||p||u){if(F=p?"\n":"",u){const n=a(u);F+=`\n${indentComment(n,i.indent)}`}""!==j||i.inFlow?F+=`\n${i.indent}`:"\n"===F&&(F="\n\n")}else if(!y&&isCollection(e)){const n=j[0],t=j.indexOf("\n"),l=-1!==t,o=i.inFlow??e.flow??0===e.items.length;if(l||!o){let e=!1;if(l&&("&"===n||"!"===n)){let i=j.indexOf(" ");"&"===n&&-1!==i&&i<t&&"!"===j[i+1]&&(i=j.indexOf(" ",i+1)),(-1===i||t<i)&&(e=!0)}e||(F=`\n${i.indent}`)}}else""!==j&&"\n"!==j[0]||(F="");return C+=F+j,i.inFlow?S&&t&&t():g&&!S?C+=lineComment(C,i.indent,a(g)):h&&l&&l(),C}export{stringifyPair};