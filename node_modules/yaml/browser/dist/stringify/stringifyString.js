import{Scalar}from"../nodes/Scalar.js";import{foldFlowLines,FOLD_FLOW,FOLD_QUOTED,FOLD_BLOCK}from"./foldFlowLines.js";const getFoldOptions=(t,n)=>({indentAtStart:n?t.indent.length:t.indentAtStart,lineWidth:t.options.lineWidth,minContentWidth:t.options.minContentWidth}),containsDocumentMarker=t=>/^(%|---|\.\.\.)/m.test(t);function lineLengthOverLimit(t,n,e){if(!n||n<0)return!1;const i=n-e,r=t.length;if(r<=i)return!1;for(let n=0,e=0;n<r;++n)if("\n"===t[n]){if(n-e>i)return!0;if(e=n+1,r-e<=i)return!1}return!0}function doubleQuotedString(t,n){const e=JSON.stringify(t);if(n.options.doubleQuotedAsJSON)return e;const{implicitKey:i}=n,r=n.options.doubleQuotedMinMultiLineLength,l=n.indent||(containsDocumentMarker(t)?"  ":"");let o="",s=0;for(let t=0,n=e[t];n;n=e[++t])if(" "===n&&"\\"===e[t+1]&&"n"===e[t+2]&&(o+=e.slice(s,t)+"\\ ",t+=1,s=t,n="\\"),"\\"===n)switch(e[t+1]){case"u":{o+=e.slice(s,t);const n=e.substr(t+2,4);switch(n){case"0000":o+="\\0";break;case"0007":o+="\\a";break;case"000b":o+="\\v";break;case"001b":o+="\\e";break;case"0085":o+="\\N";break;case"00a0":o+="\\_";break;case"2028":o+="\\L";break;case"2029":o+="\\P";break;default:"00"===n.substr(0,2)?o+="\\x"+n.substr(2):o+=e.substr(t,6)}t+=5,s=t+1}break;case"n":if(i||'"'===e[t+2]||e.length<r)t+=1;else{for(o+=e.slice(s,t)+"\n\n";"\\"===e[t+2]&&"n"===e[t+3]&&'"'!==e[t+4];)o+="\n",t+=2;o+=l," "===e[t+2]&&(o+="\\"),t+=1,s=t+1}break;default:t+=1}return o=s?o+e.slice(s):e,i?o:foldFlowLines(o,l,FOLD_QUOTED,getFoldOptions(n,!1))}function singleQuotedString(t,n){if(!1===n.options.singleQuote||n.implicitKey&&t.includes("\n")||/[ \t]\n|\n[ \t]/.test(t))return doubleQuotedString(t,n);const e=n.indent||(containsDocumentMarker(t)?"  ":""),i="'"+t.replace(/'/g,"''").replace(/\n+/g,`$&\n${e}`)+"'";return n.implicitKey?i:foldFlowLines(i,e,FOLD_FLOW,getFoldOptions(n,!1))}function quotedString(t,n){const{singleQuote:e}=n.options;let i;if(!1===e)i=doubleQuotedString;else{const n=t.includes('"'),r=t.includes("'");i=n&&!r?singleQuotedString:r&&!n?doubleQuotedString:e?singleQuotedString:doubleQuotedString}return i(t,n)}let blockEndNewlines;try{blockEndNewlines=new RegExp("(^|(?<!\n))\n+(?!\n|$)","g")}catch{blockEndNewlines=/\n+(?!\n|$)/g}function blockString({comment:t,type:n,value:e},i,r,l){const{blockQuote:o,commentString:s,lineWidth:c}=i.options;if(!o||/\n[\t ]+$/.test(e)||/^\s*$/.test(e))return quotedString(e,i);const u=i.indent||(i.forceBlockIndent||containsDocumentMarker(e)?"  ":""),a="literal"===o||"folded"!==o&&n!==Scalar.BLOCK_FOLDED&&(n===Scalar.BLOCK_LITERAL||!lineLengthOverLimit(e,c,u.length));if(!e)return a?"|\n":">\n";let g,d;for(d=e.length;d>0;--d){const t=e[d-1];if("\n"!==t&&"\t"!==t&&" "!==t)break}let f=e.substring(d);const S=f.indexOf("\n");-1===S?g="-":e===f||S!==f.length-1?(g="+",l&&l()):g="",f&&(e=e.slice(0,-f.length),"\n"===f[f.length-1]&&(f=f.slice(0,-1)),f=f.replace(blockEndNewlines,`$&${u}`));let p,L=!1,b=-1;for(p=0;p<e.length;++p){const t=e[p];if(" "===t)L=!0;else{if("\n"!==t)break;b=p}}let O=e.substring(0,b<p?b+1:p);O&&(e=e.substring(O.length),O=O.replace(/\n+/g,`$&${u}`));let $=(L?u?"2":"1":"")+g;if(t&&($+=" "+s(t.replace(/ ?[\r\n]+/g," ")),r&&r()),!a){const t=e.replace(/\n+/g,"\n$&").replace(/(?:^|\n)([\t ].*)(?:([\n\t ]*)\n(?![\n\t ]))?/g,"$1$2").replace(/\n+/g,`$&${u}`);let r=!1;const l=getFoldOptions(i,!0);"folded"!==o&&n!==Scalar.BLOCK_FOLDED&&(l.onOverflow=()=>{r=!0});const s=foldFlowLines(`${O}${t}${f}`,u,FOLD_BLOCK,l);if(!r)return`>${$}\n${u}${s}`}return`|${$}\n${u}${O}${e=e.replace(/\n+/g,`$&${u}`)}${f}`}function plainString(t,n,e,i){const{type:r,value:l}=t,{actualString:o,implicitKey:s,indent:c,indentStep:u,inFlow:a}=n;if(s&&l.includes("\n")||a&&/[[\]{},]/.test(l))return quotedString(l,n);if(/^[\n\t ,[\]{}#&*!|>'"%@`]|^[?-]$|^[?-][ \t]|[\n:][ \t]|[ \t]\n|[\n\t ]#|[\n\t :]$/.test(l))return s||a||!l.includes("\n")?quotedString(l,n):blockString(t,n,e,i);if(!s&&!a&&r!==Scalar.PLAIN&&l.includes("\n"))return blockString(t,n,e,i);if(containsDocumentMarker(l)){if(""===c)return n.forceBlockIndent=!0,blockString(t,n,e,i);if(s&&c===u)return quotedString(l,n)}const g=l.replace(/\n+/g,`$&\n${c}`);if(o){const t=t=>t.default&&"tag:yaml.org,2002:str"!==t.tag&&t.test?.test(g),{compat:e,tags:i}=n.doc.schema;if(i.some(t)||e?.some(t))return quotedString(l,n)}return s?g:foldFlowLines(g,c,FOLD_FLOW,getFoldOptions(n,!1))}function stringifyString(t,n,e,i){const{implicitKey:r,inFlow:l}=n,o="string"==typeof t.value?t:Object.assign({},t,{value:String(t.value)});let{type:s}=t;s!==Scalar.QUOTE_DOUBLE&&/[\x00-\x08\x0b-\x1f\x7f-\x9f\u{D800}-\u{DFFF}]/u.test(o.value)&&(s=Scalar.QUOTE_DOUBLE);const c=t=>{switch(t){case Scalar.BLOCK_FOLDED:case Scalar.BLOCK_LITERAL:return r||l?quotedString(o.value,n):blockString(o,n,e,i);case Scalar.QUOTE_DOUBLE:return doubleQuotedString(o.value,n);case Scalar.QUOTE_SINGLE:return singleQuotedString(o.value,n);case Scalar.PLAIN:return plainString(o,n,e,i);default:return null}};let u=c(s);if(null===u){const{defaultKeyType:t,defaultStringType:e}=n.options,i=r&&t||e;if(u=c(i),null===u)throw new Error(`Unsupported default string type ${i}`)}return u}export{stringifyString};