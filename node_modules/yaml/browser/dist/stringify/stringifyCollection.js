import{isNode,isPair}from"../nodes/identity.js";import{stringify}from"./stringify.js";import{lineComment,indentComment}from"./stringifyComment.js";function stringifyCollection(e,n,t){return(n.inFlow??e.flow?stringifyFlowCollection:stringifyBlockCollection)(e,n,t)}function stringifyBlockCollection({comment:e,items:n},t,{blockItemPrefix:o,flowChars:i,itemIndent:l,onChompKeep:m,onComment:s}){const{indent:r,options:{commentString:c}}=t,f=Object.assign({},t,{indent:l,type:null});let d=!1;const u=[];for(let e=0;e<n.length;++e){const i=n[e];let m=null;if(isNode(i))!d&&i.spaceBefore&&u.push(""),addCommentBefore(t,u,i.commentBefore,d),i.comment&&(m=i.comment);else if(isPair(i)){const e=isNode(i.key)?i.key:null;e&&(!d&&e.spaceBefore&&u.push(""),addCommentBefore(t,u,e.commentBefore,d))}d=!1;let s=stringify(i,f,()=>m=null,()=>d=!0);m&&(s+=lineComment(s,l,c(m))),d&&m&&(d=!1),u.push(o+s)}let g;if(0===u.length)g=i.start+i.end;else{g=u[0];for(let e=1;e<u.length;++e){const n=u[e];g+=n?`\n${r}${n}`:"\n"}}return e?(g+="\n"+indentComment(c(e),r),s&&s()):d&&m&&m(),g}function stringifyFlowCollection({items:e},n,{flowChars:t,itemIndent:o}){const{indent:i,indentStep:l,flowCollectionPadding:m,options:{commentString:s}}=n;o+=l;const r=Object.assign({},n,{indent:o,inFlow:!0,type:null});let c=!1,f=0;const d=[];for(let t=0;t<e.length;++t){const i=e[t];let l=null;if(isNode(i))i.spaceBefore&&d.push(""),addCommentBefore(n,d,i.commentBefore,!1),i.comment&&(l=i.comment);else if(isPair(i)){const e=isNode(i.key)?i.key:null;e&&(e.spaceBefore&&d.push(""),addCommentBefore(n,d,e.commentBefore,!1),e.comment&&(c=!0));const t=isNode(i.value)?i.value:null;t?(t.comment&&(l=t.comment),t.commentBefore&&(c=!0)):null==i.value&&e?.comment&&(l=e.comment)}l&&(c=!0);let m=stringify(i,r,()=>l=null);t<e.length-1&&(m+=","),l&&(m+=lineComment(m,o,s(l))),!c&&(d.length>f||m.includes("\n"))&&(c=!0),d.push(m),f=d.length}const{start:u,end:g}=t;if(0===d.length)return u+g;if(!c){const e=d.reduce((e,n)=>e+n.length+2,2);c=n.options.lineWidth>0&&e>n.options.lineWidth}if(c){let e=u;for(const n of d)e+=n?`\n${l}${i}${n}`:"\n";return`${e}\n${i}${g}`}return`${u}${m}${d.join(" ")}${m}${g}`}function addCommentBefore({indent:e,options:{commentString:n}},t,o,i){if(o&&i&&(o=o.replace(/^\n+/,"")),o){const i=indentComment(n(o),e);t.push(i.trimStart())}}export{stringifyCollection};