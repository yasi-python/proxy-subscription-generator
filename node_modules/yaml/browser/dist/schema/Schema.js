import{MAP,SCALAR,SEQ}from"../nodes/identity.js";import{map}from"./common/map.js";import{seq}from"./common/seq.js";import{string}from"./common/string.js";import{getTags,coreKnownTags}from"./tags.js";const sortMapEntriesByKey=(t,e)=>t.key<e.key?-1:t.key>e.key?1:0;class Schema{constructor({compat:t,customTags:e,merge:s,resolveKnownTags:o,schema:r,sortMapEntries:n,toStringDefaults:a}){this.compat=Array.isArray(t)?getTags(t,"compat"):t?getTags(null,t):null,this.name="string"==typeof r&&r||"core",this.knownTags=o?coreKnownTags:{},this.tags=getTags(e,this.name,s),this.toStringOptions=a??null,Object.defineProperty(this,MAP,{value:map}),Object.defineProperty(this,SCALAR,{value:string}),Object.defineProperty(this,SEQ,{value:seq}),this.sortMapEntries="function"==typeof n?n:!0===n?sortMapEntriesByKey:null}clone(){const t=Object.create(Schema.prototype,Object.getOwnPropertyDescriptors(this));return t.tags=this.tags.slice(),t}}export{Schema};