import{Scalar}from"../../nodes/Scalar.js";import{stringifyString}from"../../stringify/stringifyString.js";const binary={identify:t=>t instanceof Uint8Array,default:!1,tag:"tag:yaml.org,2002:binary",resolve(t,r){if("function"==typeof atob){const r=atob(t.replace(/[\n\r]/g,"")),n=new Uint8Array(r.length);for(let t=0;t<r.length;++t)n[t]=r.charCodeAt(t);return n}return r("This environment does not support reading binary tags; either Buffer or atob is required"),t},stringify({comment:t,type:r,value:n},e,i,o){if(!n)return"";const a=n;let s;if("function"!=typeof btoa)throw new Error("This environment does not support writing binary tags; either Buffer or btoa is required");{let t="";for(let r=0;r<a.length;++r)t+=String.fromCharCode(a[r]);s=btoa(t)}if(r??(r=Scalar.BLOCK_LITERAL),r!==Scalar.QUOTE_DOUBLE){const t=Math.max(e.options.lineWidth-e.indent.length,e.options.minContentWidth),n=Math.ceil(s.length/t),i=new Array(n);for(let r=0,e=0;r<n;++r,e+=t)i[r]=s.substr(e,t);s=i.join(r===Scalar.BLOCK_LITERAL?"\n":" ")}return stringifyString({comment:t,type:r,value:s},e,i,o)}};export{binary};