import{Composer}from"./compose/composer.js";import{Document}from"./doc/Document.js";import{prettifyError,YAMLParseError}from"./errors.js";import{warn}from"./log.js";import{isDocument}from"./nodes/identity.js";import{LineCounter}from"./parse/line-counter.js";import{Parser}from"./parse/parser.js";function parseOptions(r){const e=!1!==r.prettyErrors;return{lineCounter:r.lineCounter||e&&new LineCounter||null,prettyErrors:e}}function parseAllDocuments(r,e={}){const{lineCounter:o,prettyErrors:n}=parseOptions(e),t=new Parser(o?.addNewLine),s=new Composer(e),i=Array.from(s.compose(t.parse(r)));if(n&&o)for(const e of i)e.errors.forEach(prettifyError(r,o)),e.warnings.forEach(prettifyError(r,o));return i.length>0?i:Object.assign([],{empty:!0},s.streamInfo())}function parseDocument(r,e={}){const{lineCounter:o,prettyErrors:n}=parseOptions(e),t=new Parser(o?.addNewLine),s=new Composer(e);let i=null;for(const e of s.compose(t.parse(r),!0,r.length))if(i){if("silent"!==i.options.logLevel){i.errors.push(new YAMLParseError(e.range.slice(0,2),"MULTIPLE_DOCS","Source contains multiple documents; please use YAML.parseAllDocuments()"));break}}else i=e;return n&&o&&(i.errors.forEach(prettifyError(r,o)),i.warnings.forEach(prettifyError(r,o))),i}function parse(r,e,o){let n;"function"==typeof e?n=e:void 0===o&&e&&"object"==typeof e&&(o=e);const t=parseDocument(r,o);if(!t)return null;if(t.warnings.forEach(r=>warn(t.options.logLevel,r)),t.errors.length>0){if("silent"!==t.options.logLevel)throw t.errors[0];t.errors=[]}return t.toJS(Object.assign({reviver:n},o))}function stringify(r,e,o){let n=null;if("function"==typeof e||Array.isArray(e)?n=e:void 0===o&&e&&(o=e),"string"==typeof o&&(o=o.length),"number"==typeof o){const r=Math.round(o);o=r<1?void 0:r>8?{indent:8}:{indent:r}}if(void 0===r){const{keepUndefined:r}=o??e??{};if(!r)return}return isDocument(r)&&!n?r.toString(o):new Document(r,n,o).toString(o)}export{parse,parseAllDocuments,parseDocument,stringify};