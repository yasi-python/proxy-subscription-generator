import{applyReviver}from"../doc/applyReviver.js";import{NODE_TYPE,isDocument}from"./identity.js";import{toJS}from"./toJS.js";class NodeBase{constructor(e){Object.defineProperty(this,NODE_TYPE,{value:e})}clone(){const e=Object.create(Object.getPrototypeOf(this),Object.getOwnPropertyDescriptors(this));return this.range&&(e.range=this.range.slice()),e}toJS(e,{mapAsMap:t,maxAliasCount:o,onAnchor:r,reviver:n}={}){if(!isDocument(e))throw new TypeError("A document argument is required");const s={anchors:new Map,doc:e,keep:!0,mapAsMap:!0===t,mapKeyWarned:!1,maxAliasCount:"number"==typeof o?o:100},i=toJS(this,"",s);if("function"==typeof r)for(const{count:e,res:t}of s.anchors.values())r(t,e);return"function"==typeof n?applyReviver(n,{"":i},"",i):i}}export{NodeBase};