"use strict";var log=require("../log.js"),merge=require("../schema/yaml-1.1/merge.js"),stringify=require("../stringify/stringify.js"),identity=require("./identity.js"),toJS=require("./toJS.js");function addPairToJSMap(e,t,{key:i,value:r}){if(identity.isNode(i)&&i.addToJSMap)i.addToJSMap(e,t,r);else if(merge.isMergeKey(e,i))merge.addMergeToJSMap(e,t,r);else{const n=toJS.toJS(i,"",e);if(t instanceof Map)t.set(n,toJS.toJS(r,n,e));else if(t instanceof Set)t.add(n);else{const o=stringifyKey(i,n,e),s=toJS.toJS(r,o,e);o in t?Object.defineProperty(t,o,{value:s,writable:!0,enumerable:!0,configurable:!0}):t[o]=s}}return t}function stringifyKey(e,t,i){if(null===t)return"";if("object"!=typeof t)return String(t);if(identity.isNode(e)&&i?.doc){const t=stringify.createStringifyContext(i.doc,{});t.anchors=new Set;for(const e of i.anchors.keys())t.anchors.add(e.anchor);t.inFlow=!0,t.inStringifyKey=!0;const r=e.toString(t);if(!i.mapKeyWarned){let e=JSON.stringify(r);e.length>40&&(e=e.substring(0,36)+'..."'),log.warn(i.doc.options.logLevel,`Keys with collection values will be stringified due to JS Object restrictions: ${e}. Set mapAsMap: true to use object keys.`),i.mapKeyWarned=!0}return r}return JSON.stringify(t)}exports.addPairToJSMap=addPairToJSMap;