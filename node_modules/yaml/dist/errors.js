"use strict";class YAMLError extends Error{constructor(r,s,t,e){super(),this.name=r,this.code=t,this.message=e,this.pos=s}}class YAMLParseError extends YAMLError{constructor(r,s,t){super("YAMLParseError",r,s,t)}}class YAMLWarning extends YAMLError{constructor(r,s,t){super("YAMLWarning",r,s,t)}}const prettifyError=(r,s)=>t=>{if(-1===t.pos[0])return;t.linePos=t.pos.map(r=>s.linePos(r));const{line:e,col:n}=t.linePos[0];t.message+=` at line ${e}, column ${n}`;let o=n-1,i=r.substring(s.lineStarts[e-1],s.lineStarts[e]).replace(/[\n\r]+$/,"");if(o>=60&&i.length>80){const r=Math.min(o-39,i.length-79);i="…"+i.substring(r),o-=r-1}if(i.length>80&&(i=i.substring(0,79)+"…"),e>1&&/^ *$/.test(i.substring(0,o))){let t=r.substring(s.lineStarts[e-2],s.lineStarts[e-1]);t.length>80&&(t=t.substring(0,79)+"…\n"),i=t+i}if(/[^ ]/.test(i)){let r=1;const s=t.linePos[1];s&&s.line===e&&s.col>n&&(r=Math.max(1,Math.min(s.col-n,80-o)));const a=" ".repeat(o)+"^".repeat(r);t.message+=`:\n\n${i}\n${a}\n`}};exports.YAMLError=YAMLError,exports.YAMLParseError=YAMLParseError,exports.YAMLWarning=YAMLWarning,exports.prettifyError=prettifyError;