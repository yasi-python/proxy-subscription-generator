"use strict";var identity=require("../nodes/identity.js"),map=require("./common/map.js"),seq=require("./common/seq.js"),string=require("./common/string.js"),tags=require("./tags.js");const sortMapEntriesByKey=(t,e)=>t.key<e.key?-1:t.key>e.key?1:0;class Schema{constructor({compat:t,customTags:e,merge:s,resolveKnownTags:r,schema:i,sortMapEntries:n,toStringDefaults:a}){this.compat=Array.isArray(t)?tags.getTags(t,"compat"):t?tags.getTags(null,t):null,this.name="string"==typeof i&&i||"core",this.knownTags=r?tags.coreKnownTags:{},this.tags=tags.getTags(e,this.name,s),this.toStringOptions=a??null,Object.defineProperty(this,identity.MAP,{value:map.map}),Object.defineProperty(this,identity.SCALAR,{value:string.string}),Object.defineProperty(this,identity.SEQ,{value:seq.seq}),this.sortMapEntries="function"==typeof n?n:!0===n?sortMapEntriesByKey:null}clone(){const t=Object.create(Schema.prototype,Object.getOwnPropertyDescriptors(this));return t.tags=this.tags.slice(),t}}exports.Schema=Schema;