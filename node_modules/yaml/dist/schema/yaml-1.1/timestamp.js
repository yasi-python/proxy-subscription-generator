"use strict";var stringifyNumber=require("../../stringify/stringifyNumber.js");function parseSexagesimal(t,e){const i=t[0],s="-"===i||"+"===i?t.substring(1):t,a=t=>e?BigInt(t):Number(t),r=s.replace(/_/g,"").split(":").reduce((t,e)=>t*a(60)+a(e),a(0));return"-"===i?a(-1)*r:r}function stringifySexagesimal(t){let{value:e}=t,i=t=>t;if("bigint"==typeof e)i=t=>BigInt(t);else if(isNaN(e)||!isFinite(e))return stringifyNumber.stringifyNumber(t);let s="";e<0&&(s="-",e*=i(-1));const a=i(60),r=[e%a];return e<60?r.unshift(0):(e=(e-r[0])/a,r.unshift(e%a),e>=60&&(e=(e-r[0])/a,r.unshift(e))),s+r.map(t=>String(t).padStart(2,"0")).join(":").replace(/000000\d*$/,"")}const intTime={identify:t=>"bigint"==typeof t||Number.isInteger(t),default:!0,tag:"tag:yaml.org,2002:int",format:"TIME",test:/^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,resolve:(t,e,{intAsBigInt:i})=>parseSexagesimal(t,i),stringify:stringifySexagesimal},floatTime={identify:t=>"number"==typeof t,default:!0,tag:"tag:yaml.org,2002:float",format:"TIME",test:/^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\.[0-9_]*$/,resolve:t=>parseSexagesimal(t,!1),stringify:stringifySexagesimal},timestamp={identify:t=>t instanceof Date,default:!0,tag:"tag:yaml.org,2002:timestamp",test:RegExp("^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})(?:(?:t|T|[ \\t]+)([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\.[0-9]+)?)(?:[ \\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?)?$"),resolve(t){const e=t.match(timestamp.test);if(!e)throw new Error("!!timestamp expects a date, starting with yyyy-mm-dd");const[,i,s,a,r,n,m]=e.map(Number),g=e[7]?Number((e[7]+"00").substr(1,3)):0;let f=Date.UTC(i,s-1,a,r||0,n||0,m||0,g);const l=e[8];if(l&&"Z"!==l){let t=parseSexagesimal(l,!1);Math.abs(t)<30&&(t*=60),f-=6e4*t}return new Date(f)},stringify:({value:t})=>t?.toISOString().replace(/(T00:00:00)?\.000Z$/,"")??""};exports.floatTime=floatTime,exports.intTime=intTime,exports.timestamp=timestamp;