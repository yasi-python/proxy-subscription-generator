"use strict";var identity=require("./nodes/identity.js"),publicApi=require("./public-api.js"),visit=require("./visit.js");const scalarChar={BLOCK_FOLDED:">",BLOCK_LITERAL:"|",PLAIN:":",QUOTE_DOUBLE:'"',QUOTE_SINGLE:"'"};function anchorExists(e,t){let s=!1;return visit.visit(e,{Value(e,r){if(r.anchor===t)return s=!0,visit.visit.BREAK}}),s}function testEvents(e){const t=publicApi.parseAllDocuments(e),s=t.find(e=>e.errors.length>0),r=s?s.errors[0].message:null,i=["+STR"];try{for(let e=0;e<t.length;++e){const s=t[e];let r=s.contents;Array.isArray(r)&&(r=r[0]);const[n]=s.range||[0],o=s.errors[0];if(o&&(!o.pos||o.pos[0]<n))throw new Error;let c="+DOC";if(s.directives.docStart)c+=" ---";else if(s.contents&&s.contents.range[2]===s.contents.range[0]&&!s.contents.anchor&&!s.contents.tag)continue;i.push(c),addEvents(i,s,o?.pos[0]??-1,r);let a="-DOC";s.directives.docEnd&&(a+=" ..."),i.push(a)}}catch(e){return{events:i,error:r??e}}return i.push("-STR"),{events:i,error:r}}function addEvents(e,t,s,r){if(!r)return void e.push("=VAL :");if(-1!==s&&identity.isNode(r)&&r.range[0]>=s)throw new Error;let i="",n=identity.isScalar(r)||identity.isCollection(r)?r.anchor:void 0;if(n){if(/\d$/.test(n)){const e=n.replace(/\d$/,"");anchorExists(t,e)&&(n=e)}i=` &${n}`}if(identity.isNode(r)&&r.tag&&(i+=` <${r.tag}>`),identity.isMap(r)){const n=r.flow?"+MAP {}":"+MAP";e.push(`${n}${i}`),r.items.forEach(({key:r,value:i})=>{addEvents(e,t,s,r),addEvents(e,t,s,i)}),e.push("-MAP")}else if(identity.isSeq(r)){const n=r.flow?"+SEQ []":"+SEQ";e.push(`${n}${i}`),r.items.forEach(r=>{addEvents(e,t,s,r)}),e.push("-SEQ")}else if(identity.isPair(r))e.push(`+MAP${i}`),addEvents(e,t,s,r.key),addEvents(e,t,s,r.value),e.push("-MAP");else if(identity.isAlias(r)){let s=r.source;if(s&&/\d$/.test(s)){const e=s.replace(/\d$/,"");anchorExists(t,e)&&(s=e)}e.push(`=ALI${i} *${s}`)}else{const t=scalarChar[String(r.type)];if(!t)throw new Error(`Unexpected node type ${r.type}`);const s=r.source.replace(/\\/g,"\\\\").replace(/\0/g,"\\0").replace(/\x07/g,"\\a").replace(/\x08/g,"\\b").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\v/g,"\\v").replace(/\f/g,"\\f").replace(/\r/g,"\\r").replace(/\x1b/g,"\\e");e.push(`=VAL${i} ${t}${s}`)}}exports.testEvents=testEvents;