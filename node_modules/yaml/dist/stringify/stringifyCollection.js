"use strict";var identity=require("../nodes/identity.js"),stringify=require("./stringify.js"),stringifyComment=require("./stringifyComment.js");function stringifyCollection(e,n,t){return(n.inFlow??e.flow?stringifyFlowCollection:stringifyBlockCollection)(e,n,t)}function stringifyBlockCollection({comment:e,items:n},t,{blockItemPrefix:i,flowChars:o,itemIndent:l,onChompKeep:s,onComment:m}){const{indent:r,options:{commentString:c}}=t,f=Object.assign({},t,{indent:l,type:null});let d=!1;const u=[];for(let e=0;e<n.length;++e){const o=n[e];let s=null;if(identity.isNode(o))!d&&o.spaceBefore&&u.push(""),addCommentBefore(t,u,o.commentBefore,d),o.comment&&(s=o.comment);else if(identity.isPair(o)){const e=identity.isNode(o.key)?o.key:null;e&&(!d&&e.spaceBefore&&u.push(""),addCommentBefore(t,u,e.commentBefore,d))}d=!1;let m=stringify.stringify(o,f,()=>s=null,()=>d=!0);s&&(m+=stringifyComment.lineComment(m,l,c(s))),d&&s&&(d=!1),u.push(i+m)}let g;if(0===u.length)g=o.start+o.end;else{g=u[0];for(let e=1;e<u.length;++e){const n=u[e];g+=n?`\n${r}${n}`:"\n"}}return e?(g+="\n"+stringifyComment.indentComment(c(e),r),m&&m()):d&&s&&s(),g}function stringifyFlowCollection({items:e},n,{flowChars:t,itemIndent:i}){const{indent:o,indentStep:l,flowCollectionPadding:s,options:{commentString:m}}=n;i+=l;const r=Object.assign({},n,{indent:i,inFlow:!0,type:null});let c=!1,f=0;const d=[];for(let t=0;t<e.length;++t){const o=e[t];let l=null;if(identity.isNode(o))o.spaceBefore&&d.push(""),addCommentBefore(n,d,o.commentBefore,!1),o.comment&&(l=o.comment);else if(identity.isPair(o)){const e=identity.isNode(o.key)?o.key:null;e&&(e.spaceBefore&&d.push(""),addCommentBefore(n,d,e.commentBefore,!1),e.comment&&(c=!0));const t=identity.isNode(o.value)?o.value:null;t?(t.comment&&(l=t.comment),t.commentBefore&&(c=!0)):null==o.value&&e?.comment&&(l=e.comment)}l&&(c=!0);let s=stringify.stringify(o,r,()=>l=null);t<e.length-1&&(s+=","),l&&(s+=stringifyComment.lineComment(s,i,m(l))),!c&&(d.length>f||s.includes("\n"))&&(c=!0),d.push(s),f=d.length}const{start:u,end:g}=t;if(0===d.length)return u+g;if(!c){const e=d.reduce((e,n)=>e+n.length+2,2);c=n.options.lineWidth>0&&e>n.options.lineWidth}if(c){let e=u;for(const n of d)e+=n?`\n${l}${o}${n}`:"\n";return`${e}\n${o}${g}`}return`${u}${s}${d.join(" ")}${s}${g}`}function addCommentBefore({indent:e,options:{commentString:n}},t,i,o){if(i&&o&&(i=i.replace(/^\n+/,"")),i){const o=stringifyComment.indentComment(n(i),e);t.push(o.trimStart())}}exports.stringifyCollection=stringifyCollection;