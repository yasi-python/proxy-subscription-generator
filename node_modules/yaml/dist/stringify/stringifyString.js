"use strict";var Scalar=require("../nodes/Scalar.js"),foldFlowLines=require("./foldFlowLines.js");const getFoldOptions=(e,n)=>({indentAtStart:n?e.indent.length:e.indentAtStart,lineWidth:e.options.lineWidth,minContentWidth:e.options.minContentWidth}),containsDocumentMarker=e=>/^(%|---|\.\.\.)/m.test(e);function lineLengthOverLimit(e,n,t){if(!n||n<0)return!1;const i=n-t,r=e.length;if(r<=i)return!1;for(let n=0,t=0;n<r;++n)if("\n"===e[n]){if(n-t>i)return!0;if(t=n+1,r-t<=i)return!1}return!0}function doubleQuotedString(e,n){const t=JSON.stringify(e);if(n.options.doubleQuotedAsJSON)return t;const{implicitKey:i}=n,r=n.options.doubleQuotedMinMultiLineLength,l=n.indent||(containsDocumentMarker(e)?"  ":"");let o="",s=0;for(let e=0,n=t[e];n;n=t[++e])if(" "===n&&"\\"===t[e+1]&&"n"===t[e+2]&&(o+=t.slice(s,e)+"\\ ",e+=1,s=e,n="\\"),"\\"===n)switch(t[e+1]){case"u":{o+=t.slice(s,e);const n=t.substr(e+2,4);switch(n){case"0000":o+="\\0";break;case"0007":o+="\\a";break;case"000b":o+="\\v";break;case"001b":o+="\\e";break;case"0085":o+="\\N";break;case"00a0":o+="\\_";break;case"2028":o+="\\L";break;case"2029":o+="\\P";break;default:"00"===n.substr(0,2)?o+="\\x"+n.substr(2):o+=t.substr(e,6)}e+=5,s=e+1}break;case"n":if(i||'"'===t[e+2]||t.length<r)e+=1;else{for(o+=t.slice(s,e)+"\n\n";"\\"===t[e+2]&&"n"===t[e+3]&&'"'!==t[e+4];)o+="\n",e+=2;o+=l," "===t[e+2]&&(o+="\\"),e+=1,s=e+1}break;default:e+=1}return o=s?o+t.slice(s):t,i?o:foldFlowLines.foldFlowLines(o,l,foldFlowLines.FOLD_QUOTED,getFoldOptions(n,!1))}function singleQuotedString(e,n){if(!1===n.options.singleQuote||n.implicitKey&&e.includes("\n")||/[ \t]\n|\n[ \t]/.test(e))return doubleQuotedString(e,n);const t=n.indent||(containsDocumentMarker(e)?"  ":""),i="'"+e.replace(/'/g,"''").replace(/\n+/g,`$&\n${t}`)+"'";return n.implicitKey?i:foldFlowLines.foldFlowLines(i,t,foldFlowLines.FOLD_FLOW,getFoldOptions(n,!1))}function quotedString(e,n){const{singleQuote:t}=n.options;let i;if(!1===t)i=doubleQuotedString;else{const n=e.includes('"'),r=e.includes("'");i=n&&!r?singleQuotedString:r&&!n?doubleQuotedString:t?singleQuotedString:doubleQuotedString}return i(e,n)}let blockEndNewlines;try{blockEndNewlines=new RegExp("(^|(?<!\n))\n+(?!\n|$)","g")}catch{blockEndNewlines=/\n+(?!\n|$)/g}function blockString({comment:e,type:n,value:t},i,r,l){const{blockQuote:o,commentString:s,lineWidth:c}=i.options;if(!o||/\n[\t ]+$/.test(t)||/^\s*$/.test(t))return quotedString(t,i);const a=i.indent||(i.forceBlockIndent||containsDocumentMarker(t)?"  ":""),u="literal"===o||"folded"!==o&&n!==Scalar.Scalar.BLOCK_FOLDED&&(n===Scalar.Scalar.BLOCK_LITERAL||!lineLengthOverLimit(t,c,a.length));if(!t)return u?"|\n":">\n";let d,g;for(g=t.length;g>0;--g){const e=t[g-1];if("\n"!==e&&"\t"!==e&&" "!==e)break}let f=t.substring(g);const S=f.indexOf("\n");-1===S?d="-":t===f||S!==f.length-1?(d="+",l&&l()):d="",f&&(t=t.slice(0,-f.length),"\n"===f[f.length-1]&&(f=f.slice(0,-1)),f=f.replace(blockEndNewlines,`$&${a}`));let L,p=!1,b=-1;for(L=0;L<t.length;++L){const e=t[L];if(" "===e)p=!0;else{if("\n"!==e)break;b=L}}let O=t.substring(0,b<L?b+1:L);O&&(t=t.substring(O.length),O=O.replace(/\n+/g,`$&${a}`));let F=(p?a?"2":"1":"")+d;if(e&&(F+=" "+s(e.replace(/ ?[\r\n]+/g," ")),r&&r()),!u){const e=t.replace(/\n+/g,"\n$&").replace(/(?:^|\n)([\t ].*)(?:([\n\t ]*)\n(?![\n\t ]))?/g,"$1$2").replace(/\n+/g,`$&${a}`);let r=!1;const l=getFoldOptions(i,!0);"folded"!==o&&n!==Scalar.Scalar.BLOCK_FOLDED&&(l.onOverflow=()=>{r=!0});const s=foldFlowLines.foldFlowLines(`${O}${e}${f}`,a,foldFlowLines.FOLD_BLOCK,l);if(!r)return`>${F}\n${a}${s}`}return`|${F}\n${a}${O}${t=t.replace(/\n+/g,`$&${a}`)}${f}`}function plainString(e,n,t,i){const{type:r,value:l}=e,{actualString:o,implicitKey:s,indent:c,indentStep:a,inFlow:u}=n;if(s&&l.includes("\n")||u&&/[[\]{},]/.test(l))return quotedString(l,n);if(/^[\n\t ,[\]{}#&*!|>'"%@`]|^[?-]$|^[?-][ \t]|[\n:][ \t]|[ \t]\n|[\n\t ]#|[\n\t :]$/.test(l))return s||u||!l.includes("\n")?quotedString(l,n):blockString(e,n,t,i);if(!s&&!u&&r!==Scalar.Scalar.PLAIN&&l.includes("\n"))return blockString(e,n,t,i);if(containsDocumentMarker(l)){if(""===c)return n.forceBlockIndent=!0,blockString(e,n,t,i);if(s&&c===a)return quotedString(l,n)}const d=l.replace(/\n+/g,`$&\n${c}`);if(o){const e=e=>e.default&&"tag:yaml.org,2002:str"!==e.tag&&e.test?.test(d),{compat:t,tags:i}=n.doc.schema;if(i.some(e)||t?.some(e))return quotedString(l,n)}return s?d:foldFlowLines.foldFlowLines(d,c,foldFlowLines.FOLD_FLOW,getFoldOptions(n,!1))}function stringifyString(e,n,t,i){const{implicitKey:r,inFlow:l}=n,o="string"==typeof e.value?e:Object.assign({},e,{value:String(e.value)});let{type:s}=e;s!==Scalar.Scalar.QUOTE_DOUBLE&&/[\x00-\x08\x0b-\x1f\x7f-\x9f\u{D800}-\u{DFFF}]/u.test(o.value)&&(s=Scalar.Scalar.QUOTE_DOUBLE);const c=e=>{switch(e){case Scalar.Scalar.BLOCK_FOLDED:case Scalar.Scalar.BLOCK_LITERAL:return r||l?quotedString(o.value,n):blockString(o,n,t,i);case Scalar.Scalar.QUOTE_DOUBLE:return doubleQuotedString(o.value,n);case Scalar.Scalar.QUOTE_SINGLE:return singleQuotedString(o.value,n);case Scalar.Scalar.PLAIN:return plainString(o,n,t,i);default:return null}};let a=c(s);if(null===a){const{defaultKeyType:e,defaultStringType:t}=n.options,i=r&&e||t;if(a=c(i),null===a)throw new Error(`Unsupported default string type ${i}`)}return a}exports.stringifyString=stringifyString;