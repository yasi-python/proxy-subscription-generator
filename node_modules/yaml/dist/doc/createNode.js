"use strict";var Alias=require("../nodes/Alias.js"),identity=require("../nodes/identity.js"),Scalar=require("../nodes/Scalar.js");const defaultTagPrefix="tag:yaml.org,2002:";function findTagObject(e,t,n){if(t){const e=n.filter(e=>e.tag===t),a=e.find(e=>!e.format)??e[0];if(!a)throw new Error(`Tag ${t} not found`);return a}return n.find(t=>t.identify?.(e)&&!t.format)}function createNode(e,t,n){if(identity.isDocument(e)&&(e=e.contents),identity.isNode(e))return e;if(identity.isPair(e)){const t=n.schema[identity.MAP].createNode?.(n.schema,null,n);return t.items.push(e),t}(e instanceof String||e instanceof Number||e instanceof Boolean||"undefined"!=typeof BigInt&&e instanceof BigInt)&&(e=e.valueOf());const{aliasDuplicateObjects:a,onAnchor:i,onTagObj:o,schema:r,sourceObjects:c}=n;let s;if(a&&e&&"object"==typeof e){if(s=c.get(e),s)return s.anchor??(s.anchor=i(e)),new Alias.Alias(s.anchor);s={anchor:null,node:null},c.set(e,s)}t?.startsWith("!!")&&(t=defaultTagPrefix+t.slice(2));let f=findTagObject(e,t,r.tags);if(!f){if(e&&"function"==typeof e.toJSON&&(e=e.toJSON()),!e||"object"!=typeof e){const t=new Scalar.Scalar(e);return s&&(s.node=t),t}f=e instanceof Map?r[identity.MAP]:Symbol.iterator in Object(e)?r[identity.SEQ]:r[identity.MAP]}o&&(o(f),delete n.onTagObj);const d=f?.createNode?f.createNode(n.schema,e,n):"function"==typeof f?.nodeClass?.from?f.nodeClass.from(n.schema,e,n):new Scalar.Scalar(e);return t?d.tag=t:f.default||(d.tag=f.tag),s&&(s.node=d),d}exports.createNode=createNode;