"use strict";var Alias=require("../nodes/Alias.js"),Collection=require("../nodes/Collection.js"),identity=require("../nodes/identity.js"),Pair=require("../nodes/Pair.js"),toJS=require("../nodes/toJS.js"),Schema=require("../schema/Schema.js"),stringifyDocument=require("../stringify/stringifyDocument.js"),anchors=require("./anchors.js"),applyReviver=require("./applyReviver.js"),createNode=require("./createNode.js"),directives=require("./directives.js");class Document{constructor(e,t,n){this.commentBefore=null,this.comment=null,this.errors=[],this.warnings=[],Object.defineProperty(this,identity.NODE_TYPE,{value:identity.DOC});let s=null;"function"==typeof t||Array.isArray(t)?s=t:void 0===n&&t&&(n=t,t=void 0);const i=Object.assign({intAsBigInt:!1,keepSourceTokens:!1,logLevel:"warn",prettyErrors:!0,strict:!0,stringKeys:!1,uniqueKeys:!0,version:"1.2"},n);this.options=i;let{version:o}=i;n?._directives?(this.directives=n._directives.atDocument(),this.directives.yaml.explicit&&(o=this.directives.yaml.version)):this.directives=new directives.Directives({version:o}),this.setSchema(o,n),this.contents=void 0===e?null:this.createNode(e,s,n)}clone(){const e=Object.create(Document.prototype,{[identity.NODE_TYPE]:{value:identity.DOC}});return e.commentBefore=this.commentBefore,e.comment=this.comment,e.errors=this.errors.slice(),e.warnings=this.warnings.slice(),e.options=Object.assign({},this.options),this.directives&&(e.directives=this.directives.clone()),e.schema=this.schema.clone(),e.contents=identity.isNode(this.contents)?this.contents.clone(e.schema):this.contents,this.range&&(e.range=this.range.slice()),e}add(e){assertCollection(this.contents)&&this.contents.add(e)}addIn(e,t){assertCollection(this.contents)&&this.contents.addIn(e,t)}createAlias(e,t){if(!e.anchor){const n=anchors.anchorNames(this);e.anchor=!t||n.has(t)?anchors.findNewAnchor(t||"a",n):t}return new Alias.Alias(e.anchor)}createNode(e,t,n){let s;if("function"==typeof t)e=t.call({"":e},"",e),s=t;else if(Array.isArray(t)){const e=e=>"number"==typeof e||e instanceof String||e instanceof Number,n=t.filter(e).map(String);n.length>0&&(t=t.concat(n)),s=t}else void 0===n&&t&&(n=t,t=void 0);const{aliasDuplicateObjects:i,anchorPrefix:o,flow:r,keepUndefined:c,onTagObj:a,tag:h}=n??{},{onAnchor:l,setAnchors:d,sourceObjects:u}=anchors.createNodeAnchors(this,o||"a"),m={aliasDuplicateObjects:i??!0,keepUndefined:c??!1,onAnchor:l,onTagObj:a,replacer:s,schema:this.schema,sourceObjects:u},v=createNode.createNode(e,h,m);return r&&identity.isCollection(v)&&(v.flow=!0),d(),v}createPair(e,t,n={}){const s=this.createNode(e,null,n),i=this.createNode(t,null,n);return new Pair.Pair(s,i)}delete(e){return!!assertCollection(this.contents)&&this.contents.delete(e)}deleteIn(e){return Collection.isEmptyPath(e)?null!=this.contents&&(this.contents=null,!0):!!assertCollection(this.contents)&&this.contents.deleteIn(e)}get(e,t){return identity.isCollection(this.contents)?this.contents.get(e,t):void 0}getIn(e,t){return Collection.isEmptyPath(e)?!t&&identity.isScalar(this.contents)?this.contents.value:this.contents:identity.isCollection(this.contents)?this.contents.getIn(e,t):void 0}has(e){return!!identity.isCollection(this.contents)&&this.contents.has(e)}hasIn(e){return Collection.isEmptyPath(e)?void 0!==this.contents:!!identity.isCollection(this.contents)&&this.contents.hasIn(e)}set(e,t){null==this.contents?this.contents=Collection.collectionFromPath(this.schema,[e],t):assertCollection(this.contents)&&this.contents.set(e,t)}setIn(e,t){Collection.isEmptyPath(e)?this.contents=t:null==this.contents?this.contents=Collection.collectionFromPath(this.schema,Array.from(e),t):assertCollection(this.contents)&&this.contents.setIn(e,t)}setSchema(e,t={}){let n;switch("number"==typeof e&&(e=String(e)),e){case"1.1":this.directives?this.directives.yaml.version="1.1":this.directives=new directives.Directives({version:"1.1"}),n={resolveKnownTags:!1,schema:"yaml-1.1"};break;case"1.2":case"next":this.directives?this.directives.yaml.version=e:this.directives=new directives.Directives({version:e}),n={resolveKnownTags:!0,schema:"core"};break;case null:this.directives&&delete this.directives,n=null;break;default:{const t=JSON.stringify(e);throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${t}`)}}if(t.schema instanceof Object)this.schema=t.schema;else{if(!n)throw new Error("With a null YAML version, the { schema: Schema } option is required");this.schema=new Schema.Schema(Object.assign(n,t))}}toJS({json:e,jsonArg:t,mapAsMap:n,maxAliasCount:s,onAnchor:i,reviver:o}={}){const r={anchors:new Map,doc:this,keep:!e,mapAsMap:!0===n,mapKeyWarned:!1,maxAliasCount:"number"==typeof s?s:100},c=toJS.toJS(this.contents,t??"",r);if("function"==typeof i)for(const{count:e,res:t}of r.anchors.values())i(t,e);return"function"==typeof o?applyReviver.applyReviver(o,{"":c},"",c):c}toJSON(e,t){return this.toJS({json:!0,jsonArg:e,mapAsMap:!1,onAnchor:t})}toString(e={}){if(this.errors.length>0)throw new Error("Document with errors cannot be stringified");if("indent"in e&&(!Number.isInteger(e.indent)||Number(e.indent)<=0)){const t=JSON.stringify(e.indent);throw new Error(`"indent" option must be a positive integer, not ${t}`)}return stringifyDocument.stringifyDocument(this,e)}}function assertCollection(e){if(identity.isCollection(e))return!0;throw new Error("Expected a YAML collection as document contents")}exports.Document=Document;