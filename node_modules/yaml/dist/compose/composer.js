"use strict";var node_process=require("process"),directives=require("../doc/directives.js"),Document=require("../doc/Document.js"),errors=require("../errors.js"),identity=require("../nodes/identity.js"),composeDoc=require("./compose-doc.js"),resolveEnd=require("./resolve-end.js");function getErrorPos(e){if("number"==typeof e)return[e,e+1];if(Array.isArray(e))return 2===e.length?e:[e[0],e[1]];const{offset:r,source:s}=e;return[r,r+("string"==typeof s?s.length:1)]}function parsePrelude(e){let r="",s=!1,t=!1;for(let o=0;o<e.length;++o){const i=e[o];switch(i[0]){case"#":r+=(""===r?"":t?"\n\n":"\n")+(i.substring(1)||" "),s=!0,t=!1;break;case"%":"#"!==e[o+1]?.[0]&&(o+=1),s=!1;break;default:s||(t=!0),s=!1}}return{comment:r,afterEmptyLine:t}}class Composer{constructor(e={}){this.doc=null,this.atDirectives=!1,this.prelude=[],this.errors=[],this.warnings=[],this.onError=(e,r,s,t)=>{const o=getErrorPos(e);t?this.warnings.push(new errors.YAMLWarning(o,r,s)):this.errors.push(new errors.YAMLParseError(o,r,s))},this.directives=new directives.Directives({version:e.version||"1.2"}),this.options=e}decorate(e,r){const{comment:s,afterEmptyLine:t}=parsePrelude(this.prelude);if(s){const o=e.contents;if(r)e.comment=e.comment?`${e.comment}\n${s}`:s;else if(t||e.directives.docStart||!o)e.commentBefore=s;else if(identity.isCollection(o)&&!o.flow&&o.items.length>0){let e=o.items[0];identity.isPair(e)&&(e=e.key);const r=e.commentBefore;e.commentBefore=r?`${s}\n${r}`:s}else{const e=o.commentBefore;o.commentBefore=e?`${s}\n${e}`:s}}r?(Array.prototype.push.apply(e.errors,this.errors),Array.prototype.push.apply(e.warnings,this.warnings)):(e.errors=this.errors,e.warnings=this.warnings),this.prelude=[],this.errors=[],this.warnings=[]}streamInfo(){return{comment:parsePrelude(this.prelude).comment,directives:this.directives,errors:this.errors,warnings:this.warnings}}*compose(e,r=!1,s=-1){for(const r of e)yield*this.next(r);yield*this.end(r,s)}*next(e){switch(node_process.env.LOG_STREAM&&console.dir(e,{depth:null}),e.type){case"directive":this.directives.add(e.source,(r,s,t)=>{const o=getErrorPos(e);o[0]+=r,this.onError(o,"BAD_DIRECTIVE",s,t)}),this.prelude.push(e.source),this.atDirectives=!0;break;case"document":{const r=composeDoc.composeDoc(this.options,this.directives,e,this.onError);this.atDirectives&&!r.directives.docStart&&this.onError(e,"MISSING_CHAR","Missing directives-end/doc-start indicator line"),this.decorate(r,!1),this.doc&&(yield this.doc),this.doc=r,this.atDirectives=!1;break}case"byte-order-mark":case"space":break;case"comment":case"newline":this.prelude.push(e.source);break;case"error":{const r=e.source?`${e.message}: ${JSON.stringify(e.source)}`:e.message,s=new errors.YAMLParseError(getErrorPos(e),"UNEXPECTED_TOKEN",r);this.atDirectives||!this.doc?this.errors.push(s):this.doc.errors.push(s);break}case"doc-end":{if(!this.doc){const r="Unexpected doc-end without preceding document";this.errors.push(new errors.YAMLParseError(getErrorPos(e),"UNEXPECTED_TOKEN",r));break}this.doc.directives.docEnd=!0;const r=resolveEnd.resolveEnd(e.end,e.offset+e.source.length,this.doc.options.strict,this.onError);if(this.decorate(this.doc,!0),r.comment){const e=this.doc.comment;this.doc.comment=e?`${e}\n${r.comment}`:r.comment}this.doc.range[2]=r.offset;break}default:this.errors.push(new errors.YAMLParseError(getErrorPos(e),"UNEXPECTED_TOKEN",`Unsupported token ${e.type}`))}}*end(e=!1,r=-1){if(this.doc)this.decorate(this.doc,!0),yield this.doc,this.doc=null;else if(e){const e=Object.assign({_directives:this.directives},this.options),s=new Document.Document(void 0,e);this.atDirectives&&this.onError(r,"MISSING_CHAR","Missing directives-end indicator line"),s.range=[0,r,r],this.decorate(s,!1),yield s}}}exports.Composer=Composer;