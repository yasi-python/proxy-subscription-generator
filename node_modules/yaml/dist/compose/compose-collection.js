"use strict";var identity=require("../nodes/identity.js"),Scalar=require("../nodes/Scalar.js"),YAMLMap=require("../nodes/YAMLMap.js"),YAMLSeq=require("../nodes/YAMLSeq.js"),resolveBlockMap=require("./resolve-block-map.js"),resolveBlockSeq=require("./resolve-block-seq.js"),resolveFlowCollection=require("./resolve-flow-collection.js");function resolveCollection(e,o,l,s,t,r){const c="block-map"===l.type?resolveBlockMap.resolveBlockMap(e,o,l,s,r):"block-seq"===l.type?resolveBlockSeq.resolveBlockSeq(e,o,l,s,r):resolveFlowCollection.resolveFlowCollection(e,o,l,s,r),a=c.constructor;return"!"===t||t===a.tagName?(c.tag=a.tagName,c):(t&&(c.tag=t),c)}function composeCollection(e,o,l,s,t){const r=s.tag,c=r?o.directives.tagName(r.source,e=>t(r,"TAG_RESOLVE_FAILED",e)):null;if("block-seq"===l.type){const{anchor:e,newlineAfterProp:o}=s,l=e&&r?e.offset>r.offset?e:r:e??r;l&&(!o||o.offset<l.offset)&&t(l,"MISSING_CHAR","Missing newline after block sequence props")}const a="block-map"===l.type?"map":"block-seq"===l.type?"seq":"{"===l.start.source?"map":"seq";if(!r||!c||"!"===c||c===YAMLMap.YAMLMap.tagName&&"map"===a||c===YAMLSeq.YAMLSeq.tagName&&"seq"===a)return resolveCollection(e,o,l,t,c);let n=o.schema.tags.find(e=>e.tag===c&&e.collection===a);if(!n){const s=o.schema.knownTags[c];if(!s||s.collection!==a)return s?t(r,"BAD_COLLECTION_TYPE",`${s.tag} used for ${a} collection, but expects ${s.collection??"scalar"}`,!0):t(r,"TAG_RESOLVE_FAILED",`Unresolved tag: ${c}`,!0),resolveCollection(e,o,l,t,c);o.schema.tags.push(Object.assign({},s,{default:!1})),n=s}const i=resolveCollection(e,o,l,t,c,n),p=n.resolve?.(i,e=>t(r,"TAG_RESOLVE_FAILED",e),o.options)??i,f=identity.isNode(p)?p:new Scalar.Scalar(p);return f.range=i.range,f.tag=c,n?.format&&(f.format=n.format),f}exports.composeCollection=composeCollection;