"use strict";var identity=require("../nodes/identity.js"),Scalar=require("../nodes/Scalar.js"),resolveBlockScalar=require("./resolve-block-scalar.js"),resolveFlowScalar=require("./resolve-flow-scalar.js");function composeScalar(t,e,a,r){const{value:s,type:o,comment:c,range:n}="block-scalar"===e.type?resolveBlockScalar.resolveBlockScalar(t,e,r):resolveFlowScalar.resolveFlowScalar(e,t.options.strict,r),l=a?t.directives.tagName(a.source,t=>r(a,"TAG_RESOLVE_FAILED",t)):null;let i,S;i=t.options.stringKeys&&t.atKey?t.schema[identity.SCALAR]:l?findScalarTagByName(t.schema,s,l,a,r):"scalar"===e.type?findScalarTagByTest(t,s,e,r):t.schema[identity.SCALAR];try{const o=i.resolve(s,t=>r(a??e,"TAG_RESOLVE_FAILED",t),t.options);S=identity.isScalar(o)?o:new Scalar.Scalar(o)}catch(t){const o=t instanceof Error?t.message:String(t);r(a??e,"TAG_RESOLVE_FAILED",o),S=new Scalar.Scalar(s)}return S.range=n,S.source=s,o&&(S.type=o),l&&(S.tag=l),i.format&&(S.format=i.format),c&&(S.comment=c),S}function findScalarTagByName(t,e,a,r,s){if("!"===a)return t[identity.SCALAR];const o=[];for(const e of t.tags)if(!e.collection&&e.tag===a){if(!e.default||!e.test)return e;o.push(e)}for(const t of o)if(t.test?.test(e))return t;const c=t.knownTags[a];return c&&!c.collection?(t.tags.push(Object.assign({},c,{default:!1,test:void 0})),c):(s(r,"TAG_RESOLVE_FAILED",`Unresolved tag: ${a}`,"tag:yaml.org,2002:str"!==a),t[identity.SCALAR])}function findScalarTagByTest({atKey:t,directives:e,schema:a},r,s,o){const c=a.tags.find(e=>(!0===e.default||t&&"key"===e.default)&&e.test?.test(r))||a[identity.SCALAR];if(a.compat){const t=a.compat.find(t=>t.default&&t.test?.test(r))??a[identity.SCALAR];c.tag!==t.tag&&o(s,"TAG_RESOLVE_FAILED",`Value may be parsed as either ${e.tagString(c.tag)} or ${e.tagString(t.tag)}`,!0)}return c}exports.composeScalar=composeScalar;