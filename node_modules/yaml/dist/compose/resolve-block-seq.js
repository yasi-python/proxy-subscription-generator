"use strict";var YAMLSeq=require("../nodes/YAMLSeq.js"),resolveProps=require("./resolve-props.js"),utilFlowIndentCheck=require("./util-flow-indent-check.js");function resolveBlockSeq({composeNode:e,composeEmptyNode:t},o,n,s,r){const c=new(r?.nodeClass??YAMLSeq.YAMLSeq)(o.schema);o.atRoot&&(o.atRoot=!1),o.atKey&&(o.atKey=!1);let l=n.offset,i=null;for(const{start:r,value:a}of n.items){const m=resolveProps.resolveProps(r,{indicator:"seq-item-ind",next:a,offset:l,onError:s,parentIndent:n.indent,startOnNewline:!0});if(!m.found){if(!(m.anchor||m.tag||a)){i=m.end,m.comment&&(c.comment=m.comment);continue}a&&"block-seq"===a.type?s(m.end,"BAD_INDENT","All sequence items must start at the same column"):s(l,"MISSING_CHAR","Sequence item without - indicator")}const u=a?e(o,a,m,s):t(o,m.end,r,null,m,s);o.schema.compat&&utilFlowIndentCheck.flowIndentCheck(n.indent,a,s),l=u.range[2],c.items.push(u)}return c.range=[n.offset,l,i??l],c}exports.resolveBlockSeq=resolveBlockSeq;