"use strict";const stringify=require("./lib/stringify"),compile=require("./lib/compile"),expand=require("./lib/expand"),parse=require("./lib/parse"),braces=(e,r={})=>{let s=[];if(Array.isArray(e))for(const a of e){const e=braces.create(a,r);Array.isArray(e)?s.push(...e):s.push(e)}else s=[].concat(braces.create(e,r));return r&&!0===r.expand&&!0===r.nodupes&&(s=[...new Set(s)]),s};braces.parse=(e,r={})=>parse(e,r),braces.stringify=(e,r={})=>stringify("string"==typeof e?braces.parse(e,r):e,r),braces.compile=(e,r={})=>("string"==typeof e&&(e=braces.parse(e,r)),compile(e,r)),braces.expand=(e,r={})=>{"string"==typeof e&&(e=braces.parse(e,r));let s=expand(e,r);return!0===r.noempty&&(s=s.filter(Boolean)),!0===r.nodupes&&(s=[...new Set(s)]),s},braces.create=(e,r={})=>""===e||e.length<3?[e]:!0!==r.expand?braces.compile(e,r):braces.expand(e,r),module.exports=braces;