"use strict";var G=(t,e,i)=>{if(!e.has(t))throw TypeError("Cannot "+i)},j=(t,e,i)=>(G(t,e,"read from private field"),i?i.call(t):e.get(t)),I=(t,e,i)=>{if(e.has(t))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(t):e.set(t,i)},x=(t,e,i,s)=>(G(t,e,"write to private field"),s?s.call(t,i):e.set(t,i),i);Object.defineProperty(exports,"__esModule",{value:!0}),exports.LRUCache=void 0;var T="object"==typeof performance&&performance&&"function"==typeof performance.now?performance:Date,P=new Set,U="object"==typeof process&&process?process:{},H=(t,e,i,s)=>{"function"==typeof U.emitWarning?U.emitWarning(t,e,i,s):console.error(`[${i}] ${e}: ${t}`)},D=globalThis.AbortController,N=globalThis.AbortSignal;if(typeof D>"u"){N=class{onabort;_onabort=[];reason;aborted=!1;addEventListener(t,e){this._onabort.push(e)}},D=class{constructor(){e()}signal=new N;abort(t){if(!this.signal.aborted){this.signal.reason=t,this.signal.aborted=!0;for(let e of this.signal._onabort)e(t);this.signal.onabort?.(t)}}};let t="1"!==U.env?.LRU_CACHE_IGNORE_AC_WARNING,e=()=>{t&&(t=!1,H("AbortController is not defined. If using lru-cache in node 14, load an AbortController polyfill from the `node-abort-controller` package. A minimal polyfill is provided for use by LRUCache.fetch(), but it should not be relied upon in other contexts (eg, passing it to other APIs that use AbortController/AbortSignal might have undesirable effects). You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.","NO_ABORT_CONTROLLER","ENOTSUP",e))}}var v,V=t=>!P.has(t),Y=Symbol("type"),A=t=>t&&t===Math.floor(t)&&t>0&&isFinite(t),k=t=>A(t)?t<=Math.pow(2,8)?Uint8Array:t<=Math.pow(2,16)?Uint16Array:t<=Math.pow(2,32)?Uint32Array:t<=Number.MAX_SAFE_INTEGER?E:null:null,E=class extends Array{constructor(t){super(t),this.fill(0)}},O=class{heap;length;static create(t){let e=k(t);if(!e)return[];x(O,v,!0);let i=new O(t,e);return x(O,v,!1),i}constructor(t,e){if(!j(O,v))throw new TypeError("instantiate Stack using Stack.create(n)");this.heap=new e(t),this.length=0}push(t){this.heap[this.length++]=t}pop(){return this.heap[--this.length]}},W=O;v=new WeakMap,I(W,v,!1);var C=class{#t;#e;#i;#s;#h;#o;ttl;ttlResolution;ttlAutopurge;updateAgeOnGet;updateAgeOnHas;allowStale;noDisposeOnSet;noUpdateTTL;maxEntrySize;sizeCalculation;noDeleteOnFetchRejection;noDeleteOnStaleGet;allowStaleOnFetchAbort;allowStaleOnFetchRejection;ignoreFetchAbort;#r;#l;#n;#a;#u;#f;#c;#d;#g;#p;#w;#v;#S;#_;#y;#b;#m;static unsafeExposeInternals(t){return{starts:t.#S,ttls:t.#_,sizes:t.#v,keyMap:t.#n,keyList:t.#a,valList:t.#u,next:t.#f,prev:t.#c,get head(){return t.#d},get tail(){return t.#g},free:t.#p,isBackgroundFetch:e=>t.#A(e),backgroundFetch:(e,i,s,h)=>t.#O(e,i,s,h),moveToTail:e=>t.#F(e),indexes:e=>t.#E(e),rindexes:e=>t.#T(e),isStale:e=>t.#z(e)}}get max(){return this.#t}get maxSize(){return this.#e}get calculatedSize(){return this.#l}get size(){return this.#r}get fetchMethod(){return this.#h}get memoMethod(){return this.#o}get dispose(){return this.#i}get disposeAfter(){return this.#s}constructor(t){let{max:e=0,ttl:i,ttlResolution:s=1,ttlAutopurge:h,updateAgeOnGet:o,updateAgeOnHas:r,allowStale:l,dispose:n,disposeAfter:a,noDisposeOnSet:u,noUpdateTTL:f,maxSize:c=0,maxEntrySize:d=0,sizeCalculation:g,fetchMethod:p,memoMethod:w,noDeleteOnFetchRejection:v,noDeleteOnStaleGet:S,allowStaleOnFetchRejection:_,allowStaleOnFetchAbort:y,ignoreFetchAbort:b}=t;if(0!==e&&!A(e))throw new TypeError("max option must be a nonnegative integer");let m=e?k(e):Array;if(!m)throw new Error("invalid max value: "+e);if(this.#t=e,this.#e=c,this.maxEntrySize=d||this.#e,this.sizeCalculation=g,this.sizeCalculation){if(!this.#e&&!this.maxEntrySize)throw new TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");if("function"!=typeof this.sizeCalculation)throw new TypeError("sizeCalculation set to non-function")}if(void 0!==w&&"function"!=typeof w)throw new TypeError("memoMethod must be a function if defined");if(this.#o=w,void 0!==p&&"function"!=typeof p)throw new TypeError("fetchMethod must be a function if specified");if(this.#h=p,this.#b=!!p,this.#n=new Map,this.#a=new Array(e).fill(void 0),this.#u=new Array(e).fill(void 0),this.#f=new m(e),this.#c=new m(e),this.#d=0,this.#g=0,this.#p=W.create(e),this.#r=0,this.#l=0,"function"==typeof n&&(this.#i=n),"function"==typeof a?(this.#s=a,this.#w=[]):(this.#s=void 0,this.#w=void 0),this.#y=!!this.#i,this.#m=!!this.#s,this.noDisposeOnSet=!!u,this.noUpdateTTL=!!f,this.noDeleteOnFetchRejection=!!v,this.allowStaleOnFetchRejection=!!_,this.allowStaleOnFetchAbort=!!y,this.ignoreFetchAbort=!!b,0!==this.maxEntrySize){if(0!==this.#e&&!A(this.#e))throw new TypeError("maxSize must be a positive integer if specified");if(!A(this.maxEntrySize))throw new TypeError("maxEntrySize must be a positive integer if specified");this.#x()}if(this.allowStale=!!l,this.noDeleteOnStaleGet=!!S,this.updateAgeOnGet=!!o,this.updateAgeOnHas=!!r,this.ttlResolution=A(s)||0===s?s:1,this.ttlAutopurge=!!h,this.ttl=i||0,this.ttl){if(!A(this.ttl))throw new TypeError("ttl must be a positive integer if specified");this.#C()}if(0===this.#t&&0===this.ttl&&0===this.#e)throw new TypeError("At least one of max, maxSize, or ttl is required");if(!this.ttlAutopurge&&!this.#t&&!this.#e){let t="LRU_CACHE_UNBOUNDED";V(t)&&(P.add(t),H("TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.","UnboundedCacheWarning",t,C))}}getRemainingTTL(t){return this.#n.has(t)?1/0:0}#C(){let t=new E(this.#t),e=new E(this.#t);this.#_=t,this.#S=e,this.#R=(i,s,h=T.now())=>{if(e[i]=0!==s?h:0,t[i]=s,0!==s&&this.ttlAutopurge){let t=setTimeout(()=>{this.#z(i)&&this.#D(this.#a[i],"expire")},s+1);t.unref&&t.unref()}},this.#W=i=>{e[i]=0!==t[i]?T.now():0},this.#L=(h,o)=>{if(t[o]){let r=t[o],l=e[o];if(!r||!l)return;h.ttl=r,h.start=l,h.now=i||s();let n=h.now-l;h.remainingTTL=r-n}};let i=0,s=()=>{let t=T.now();if(this.ttlResolution>0){i=t;let e=setTimeout(()=>i=0,this.ttlResolution);e.unref&&e.unref()}return t};this.getRemainingTTL=h=>{let o=this.#n.get(h);if(void 0===o)return 0;let r=t[o],l=e[o];return r&&l?r-((i||s())-l):1/0},this.#z=h=>{let o=e[h],r=t[h];return!!r&&!!o&&(i||s())-o>r}}#W=()=>{};#L=()=>{};#R=()=>{};#z=()=>!1;#x(){let t=new E(this.#t);this.#l=0,this.#v=t,this.#U=e=>{this.#l-=t[e],t[e]=0},this.#G=(t,e,i,s)=>{if(this.#A(e))return 0;if(!A(i)){if(!s)throw new TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.");if("function"!=typeof s)throw new TypeError("sizeCalculation must be a function");if(i=s(e,t),!A(i))throw new TypeError("sizeCalculation return invalid (expect positive integer)")}return i},this.#j=(e,i,s)=>{if(t[e]=i,this.#e){let i=this.#e-t[e];for(;this.#l>i;)this.#M(!0)}this.#l+=t[e],s&&(s.entrySize=i,s.totalCalculatedSize=this.#l)}}#U=t=>{};#j=(t,e,i)=>{};#G=(t,e,i,s)=>{if(i||s)throw new TypeError("cannot set size without setting maxSize or maxEntrySize on cache");return 0};*#E({allowStale:t=this.allowStale}={}){if(this.#r)for(let e=this.#g;this.#N(e)&&((t||!this.#z(e))&&(yield e),e!==this.#d);)e=this.#c[e]}*#T({allowStale:t=this.allowStale}={}){if(this.#r)for(let e=this.#d;this.#N(e)&&((t||!this.#z(e))&&(yield e),e!==this.#g);)e=this.#f[e]}#N(t){return void 0!==t&&this.#n.get(this.#a[t])===t}*entries(){for(let t of this.#E())void 0!==this.#u[t]&&void 0!==this.#a[t]&&!this.#A(this.#u[t])&&(yield[this.#a[t],this.#u[t]])}*rentries(){for(let t of this.#T())void 0!==this.#u[t]&&void 0!==this.#a[t]&&!this.#A(this.#u[t])&&(yield[this.#a[t],this.#u[t]])}*keys(){for(let t of this.#E()){let e=this.#a[t];void 0!==e&&!this.#A(this.#u[t])&&(yield e)}}*rkeys(){for(let t of this.#T()){let e=this.#a[t];void 0!==e&&!this.#A(this.#u[t])&&(yield e)}}*values(){for(let t of this.#E())void 0!==this.#u[t]&&!this.#A(this.#u[t])&&(yield this.#u[t])}*rvalues(){for(let t of this.#T())void 0!==this.#u[t]&&!this.#A(this.#u[t])&&(yield this.#u[t])}[Symbol.iterator](){return this.entries()}[Symbol.toStringTag]="LRUCache";find(t,e={}){for(let i of this.#E()){let s=this.#u[i],h=this.#A(s)?s.__staleWhileFetching:s;if(void 0!==h&&t(h,this.#a[i],this))return this.get(this.#a[i],e)}}forEach(t,e=this){for(let i of this.#E()){let s=this.#u[i],h=this.#A(s)?s.__staleWhileFetching:s;void 0!==h&&t.call(e,h,this.#a[i],this)}}rforEach(t,e=this){for(let i of this.#T()){let s=this.#u[i],h=this.#A(s)?s.__staleWhileFetching:s;void 0!==h&&t.call(e,h,this.#a[i],this)}}purgeStale(){let t=!1;for(let e of this.#T({allowStale:!0}))this.#z(e)&&(this.#D(this.#a[e],"expire"),t=!0);return t}info(t){let e=this.#n.get(t);if(void 0===e)return;let i=this.#u[e],s=this.#A(i)?i.__staleWhileFetching:i;if(void 0===s)return;let h={value:s};if(this.#_&&this.#S){let t=this.#_[e],i=this.#S[e];if(t&&i){let e=t-(T.now()-i);h.ttl=e,h.start=Date.now()}}return this.#v&&(h.size=this.#v[e]),h}dump(){let t=[];for(let e of this.#E({allowStale:!0})){let i=this.#a[e],s=this.#u[e],h=this.#A(s)?s.__staleWhileFetching:s;if(void 0===h||void 0===i)continue;let o={value:h};if(this.#_&&this.#S){o.ttl=this.#_[e];let t=T.now()-this.#S[e];o.start=Math.floor(Date.now()-t)}this.#v&&(o.size=this.#v[e]),t.unshift([i,o])}return t}load(t){this.clear();for(let[e,i]of t){if(i.start){let t=Date.now()-i.start;i.start=T.now()-t}this.set(e,i.value,i)}}set(t,e,i={}){if(void 0===e)return this.delete(t),this;let{ttl:s=this.ttl,start:h,noDisposeOnSet:o=this.noDisposeOnSet,sizeCalculation:r=this.sizeCalculation,status:l}=i,{noUpdateTTL:n=this.noUpdateTTL}=i,a=this.#G(t,e,i.size||0,r);if(this.maxEntrySize&&a>this.maxEntrySize)return l&&(l.set="miss",l.maxEntrySizeExceeded=!0),this.#D(t,"set"),this;let u=0===this.#r?void 0:this.#n.get(t);if(void 0===u)u=0===this.#r?this.#g:0!==this.#p.length?this.#p.pop():this.#r===this.#t?this.#M(!1):this.#r,this.#a[u]=t,this.#u[u]=e,this.#n.set(t,u),this.#f[this.#g]=u,this.#c[u]=this.#g,this.#g=u,this.#r++,this.#j(u,a,l),l&&(l.set="add"),n=!1;else{this.#F(u);let i=this.#u[u];if(e!==i){if(this.#b&&this.#A(i)){i.__abortController.abort(new Error("replaced"));let{__staleWhileFetching:e}=i;void 0!==e&&!o&&(this.#y&&this.#i?.(e,t,"set"),this.#m&&this.#w?.push([e,t,"set"]))}else o||(this.#y&&this.#i?.(i,t,"set"),this.#m&&this.#w?.push([i,t,"set"]));if(this.#U(u),this.#j(u,a,l),this.#u[u]=e,l){l.set="replace";let t=i&&this.#A(i)?i.__staleWhileFetching:i;void 0!==t&&(l.oldValue=t)}}else l&&(l.set="update")}if(0!==s&&!this.#_&&this.#C(),this.#_&&(n||this.#R(u,s,h),l&&this.#L(l,u)),!o&&this.#m&&this.#w){let t,e=this.#w;for(;t=e?.shift();)this.#s?.(...t)}return this}pop(){try{for(;this.#r;){let t=this.#u[this.#d];if(this.#M(!0),this.#A(t)){if(t.__staleWhileFetching)return t.__staleWhileFetching}else if(void 0!==t)return t}}finally{if(this.#m&&this.#w){let t,e=this.#w;for(;t=e?.shift();)this.#s?.(...t)}}}#M(t){let e=this.#d,i=this.#a[e],s=this.#u[e];return this.#b&&this.#A(s)?s.__abortController.abort(new Error("evicted")):(this.#y||this.#m)&&(this.#y&&this.#i?.(s,i,"evict"),this.#m&&this.#w?.push([s,i,"evict"])),this.#U(e),t&&(this.#a[e]=void 0,this.#u[e]=void 0,this.#p.push(e)),1===this.#r?(this.#d=this.#g=0,this.#p.length=0):this.#d=this.#f[e],this.#n.delete(i),this.#r--,e}has(t,e={}){let{updateAgeOnHas:i=this.updateAgeOnHas,status:s}=e,h=this.#n.get(t);if(void 0!==h){let t=this.#u[h];if(this.#A(t)&&void 0===t.__staleWhileFetching)return!1;if(!this.#z(h))return i&&this.#W(h),s&&(s.has="hit",this.#L(s,h)),!0;s&&(s.has="stale",this.#L(s,h))}else s&&(s.has="miss");return!1}peek(t,e={}){let{allowStale:i=this.allowStale}=e,s=this.#n.get(t);if(void 0===s||!i&&this.#z(s))return;let h=this.#u[s];return this.#A(h)?h.__staleWhileFetching:h}#O(t,e,i,s){let h=void 0===e?void 0:this.#u[e];if(this.#A(h))return h;let o=new D,{signal:r}=i;r?.addEventListener("abort",()=>o.abort(r.reason),{signal:o.signal});let l={signal:o.signal,options:i,context:s},n=(s,h=!1)=>{let{aborted:r}=o.signal,n=i.ignoreFetchAbort&&void 0!==s;if(i.status&&(r&&!h?(i.status.fetchAborted=!0,i.status.fetchError=o.signal.reason,n&&(i.status.fetchAbortIgnored=!0)):i.status.fetchResolved=!0),r&&!n&&!h)return a(o.signal.reason);let f=u;return this.#u[e]===u&&(void 0===s?f.__staleWhileFetching?this.#u[e]=f.__staleWhileFetching:this.#D(t,"fetch"):(i.status&&(i.status.fetchUpdated=!0),this.set(t,s,l.options))),s},a=s=>{let{aborted:h}=o.signal,r=h&&i.allowStaleOnFetchAbort,l=r||i.allowStaleOnFetchRejection,n=l||i.noDeleteOnFetchRejection,a=u;if(this.#u[e]===u&&(n&&void 0!==a.__staleWhileFetching?r||(this.#u[e]=a.__staleWhileFetching):this.#D(t,"fetch")),l)return i.status&&void 0!==a.__staleWhileFetching&&(i.status.returnedStale=!0),a.__staleWhileFetching;if(a.__returned===a)throw s};i.status&&(i.status.fetchDispatched=!0);let u=new Promise((e,s)=>{let r=this.#h?.(t,h,l);r&&r instanceof Promise&&r.then(t=>e(void 0===t?void 0:t),s),o.signal.addEventListener("abort",()=>{(!i.ignoreFetchAbort||i.allowStaleOnFetchAbort)&&(e(void 0),i.allowStaleOnFetchAbort&&(e=t=>n(t,!0)))})}).then(n,t=>(i.status&&(i.status.fetchRejected=!0,i.status.fetchError=t),a(t))),f=Object.assign(u,{__abortController:o,__staleWhileFetching:h,__returned:void 0});return void 0===e?(this.set(t,f,{...l.options,status:void 0}),e=this.#n.get(t)):this.#u[e]=f,f}#A(t){if(!this.#b)return!1;let e=t;return!!e&&e instanceof Promise&&e.hasOwnProperty("__staleWhileFetching")&&e.__abortController instanceof D}async fetch(t,e={}){let{allowStale:i=this.allowStale,updateAgeOnGet:s=this.updateAgeOnGet,noDeleteOnStaleGet:h=this.noDeleteOnStaleGet,ttl:o=this.ttl,noDisposeOnSet:r=this.noDisposeOnSet,size:l=0,sizeCalculation:n=this.sizeCalculation,noUpdateTTL:a=this.noUpdateTTL,noDeleteOnFetchRejection:u=this.noDeleteOnFetchRejection,allowStaleOnFetchRejection:f=this.allowStaleOnFetchRejection,ignoreFetchAbort:c=this.ignoreFetchAbort,allowStaleOnFetchAbort:d=this.allowStaleOnFetchAbort,context:g,forceRefresh:p=!1,status:w,signal:v}=e;if(!this.#b)return w&&(w.fetch="get"),this.get(t,{allowStale:i,updateAgeOnGet:s,noDeleteOnStaleGet:h,status:w});let S={allowStale:i,updateAgeOnGet:s,noDeleteOnStaleGet:h,ttl:o,noDisposeOnSet:r,size:l,sizeCalculation:n,noUpdateTTL:a,noDeleteOnFetchRejection:u,allowStaleOnFetchRejection:f,allowStaleOnFetchAbort:d,ignoreFetchAbort:c,status:w,signal:v},_=this.#n.get(t);if(void 0===_){w&&(w.fetch="miss");let e=this.#O(t,_,S,g);return e.__returned=e}{let e=this.#u[_];if(this.#A(e)){let t=i&&void 0!==e.__staleWhileFetching;return w&&(w.fetch="inflight",t&&(w.returnedStale=!0)),t?e.__staleWhileFetching:e.__returned=e}let h=this.#z(_);if(!p&&!h)return w&&(w.fetch="hit"),this.#F(_),s&&this.#W(_),w&&this.#L(w,_),e;let o=this.#O(t,_,S,g),r=void 0!==o.__staleWhileFetching&&i;return w&&(w.fetch=h?"stale":"refresh",r&&h&&(w.returnedStale=!0)),r?o.__staleWhileFetching:o.__returned=o}}async forceFetch(t,e={}){let i=await this.fetch(t,e);if(void 0===i)throw new Error("fetch() returned undefined");return i}memo(t,e={}){let i=this.#o;if(!i)throw new Error("no memoMethod provided to constructor");let{context:s,forceRefresh:h,...o}=e,r=this.get(t,o);if(!h&&void 0!==r)return r;let l=i(t,r,{options:o,context:s});return this.set(t,l,o),l}get(t,e={}){let{allowStale:i=this.allowStale,updateAgeOnGet:s=this.updateAgeOnGet,noDeleteOnStaleGet:h=this.noDeleteOnStaleGet,status:o}=e,r=this.#n.get(t);if(void 0!==r){let e=this.#u[r],l=this.#A(e);return o&&this.#L(o,r),this.#z(r)?(o&&(o.get="stale"),l?(o&&i&&void 0!==e.__staleWhileFetching&&(o.returnedStale=!0),i?e.__staleWhileFetching:void 0):(h||this.#D(t,"expire"),o&&i&&(o.returnedStale=!0),i?e:void 0)):(o&&(o.get="hit"),l?e.__staleWhileFetching:(this.#F(r),s&&this.#W(r),e))}o&&(o.get="miss")}#k(t,e){this.#c[e]=t,this.#f[t]=e}#F(t){t!==this.#g&&(t===this.#d?this.#d=this.#f[t]:this.#k(this.#c[t],this.#f[t]),this.#k(this.#g,t),this.#g=t)}delete(t){return this.#D(t,"delete")}#D(t,e){let i=!1;if(0!==this.#r){let s=this.#n.get(t);if(void 0!==s)if(i=!0,1===this.#r)this.#I(e);else{this.#U(s);let i=this.#u[s];if(this.#A(i)?i.__abortController.abort(new Error("deleted")):(this.#y||this.#m)&&(this.#y&&this.#i?.(i,t,e),this.#m&&this.#w?.push([i,t,e])),this.#n.delete(t),this.#a[s]=void 0,this.#u[s]=void 0,s===this.#g)this.#g=this.#c[s];else if(s===this.#d)this.#d=this.#f[s];else{let t=this.#c[s];this.#f[t]=this.#f[s];let e=this.#f[s];this.#c[e]=this.#c[s]}this.#r--,this.#p.push(s)}}if(this.#m&&this.#w?.length){let t,e=this.#w;for(;t=e?.shift();)this.#s?.(...t)}return i}clear(){return this.#I("delete")}#I(t){for(let e of this.#T({allowStale:!0})){let i=this.#u[e];if(this.#A(i))i.__abortController.abort(new Error("deleted"));else{let s=this.#a[e];this.#y&&this.#i?.(i,s,t),this.#m&&this.#w?.push([i,s,t])}}if(this.#n.clear(),this.#u.fill(void 0),this.#a.fill(void 0),this.#_&&this.#S&&(this.#_.fill(0),this.#S.fill(0)),this.#v&&this.#v.fill(0),this.#d=0,this.#g=0,this.#p.length=0,this.#l=0,this.#r=0,this.#m&&this.#w){let t,e=this.#w;for(;t=e?.shift();)this.#s?.(...t)}}};exports.LRUCache=C;