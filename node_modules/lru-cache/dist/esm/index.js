const perf="object"==typeof performance&&performance&&"function"==typeof performance.now?performance:Date,warned=new Set,PROCESS="object"==typeof process&&process?process:{},emitWarning=(t,e,i,s)=>{"function"==typeof PROCESS.emitWarning?PROCESS.emitWarning(t,e,i,s):console.error(`[${i}] ${e}: ${t}`)};let AC=globalThis.AbortController,AS=globalThis.AbortSignal;if(void 0===AC){AS=class{onabort;_onabort=[];reason;aborted=!1;addEventListener(t,e){this._onabort.push(e)}},AC=class{constructor(){e()}signal=new AS;abort(t){if(!this.signal.aborted){this.signal.reason=t,this.signal.aborted=!0;for(const e of this.signal._onabort)e(t);this.signal.onabort?.(t)}}};let t="1"!==PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING;const e=()=>{t&&(t=!1,emitWarning("AbortController is not defined. If using lru-cache in node 14, load an AbortController polyfill from the `node-abort-controller` package. A minimal polyfill is provided for use by LRUCache.fetch(), but it should not be relied upon in other contexts (eg, passing it to other APIs that use AbortController/AbortSignal might have undesirable effects). You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.","NO_ABORT_CONTROLLER","ENOTSUP",e))}}const shouldWarn=t=>!warned.has(t),TYPE=Symbol("type"),isPosInt=t=>t&&t===Math.floor(t)&&t>0&&isFinite(t),getUintArray=t=>isPosInt(t)?t<=Math.pow(2,8)?Uint8Array:t<=Math.pow(2,16)?Uint16Array:t<=Math.pow(2,32)?Uint32Array:t<=Number.MAX_SAFE_INTEGER?ZeroArray:null:null;class ZeroArray extends Array{constructor(t){super(t),this.fill(0)}}class Stack{heap;length;static#t=!1;static create(t){const e=getUintArray(t);if(!e)return[];Stack.#t=!0;const i=new Stack(t,e);return Stack.#t=!1,i}constructor(t,e){if(!Stack.#t)throw new TypeError("instantiate Stack using Stack.create(n)");this.heap=new e(t),this.length=0}push(t){this.heap[this.length++]=t}pop(){return this.heap[--this.length]}}export class LRUCache{#e;#i;#s;#o;#h;#n;ttl;ttlResolution;ttlAutopurge;updateAgeOnGet;updateAgeOnHas;allowStale;noDisposeOnSet;noUpdateTTL;maxEntrySize;sizeCalculation;noDeleteOnFetchRejection;noDeleteOnStaleGet;allowStaleOnFetchAbort;allowStaleOnFetchRejection;ignoreFetchAbort;#a;#r;#l;#c;#d;#u;#f;#p;#g;#v;#S;#m;#y;#z;#w;#A;#L;static unsafeExposeInternals(t){return{starts:t.#y,ttls:t.#z,sizes:t.#m,keyMap:t.#l,keyList:t.#c,valList:t.#d,next:t.#u,prev:t.#f,get head(){return t.#p},get tail(){return t.#g},free:t.#v,isBackgroundFetch:e=>t.#F(e),backgroundFetch:(e,i,s,o)=>t.#x(e,i,s,o),moveToTail:e=>t.#k(e),indexes:e=>t.#T(e),rindexes:e=>t.#_(e),isStale:e=>t.#b(e)}}get max(){return this.#e}get maxSize(){return this.#i}get calculatedSize(){return this.#r}get size(){return this.#a}get fetchMethod(){return this.#h}get memoMethod(){return this.#n}get dispose(){return this.#s}get disposeAfter(){return this.#o}constructor(t){const{max:e=0,ttl:i,ttlResolution:s=1,ttlAutopurge:o,updateAgeOnGet:h,updateAgeOnHas:n,allowStale:a,dispose:r,disposeAfter:l,noDisposeOnSet:c,noUpdateTTL:d,maxSize:u=0,maxEntrySize:f=0,sizeCalculation:p,fetchMethod:g,memoMethod:v,noDeleteOnFetchRejection:S,noDeleteOnStaleGet:m,allowStaleOnFetchRejection:y,allowStaleOnFetchAbort:z,ignoreFetchAbort:w}=t;if(0!==e&&!isPosInt(e))throw new TypeError("max option must be a nonnegative integer");const A=e?getUintArray(e):Array;if(!A)throw new Error("invalid max value: "+e);if(this.#e=e,this.#i=u,this.maxEntrySize=f||this.#i,this.sizeCalculation=p,this.sizeCalculation){if(!this.#i&&!this.maxEntrySize)throw new TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");if("function"!=typeof this.sizeCalculation)throw new TypeError("sizeCalculation set to non-function")}if(void 0!==v&&"function"!=typeof v)throw new TypeError("memoMethod must be a function if defined");if(this.#n=v,void 0!==g&&"function"!=typeof g)throw new TypeError("fetchMethod must be a function if specified");if(this.#h=g,this.#A=!!g,this.#l=new Map,this.#c=new Array(e).fill(void 0),this.#d=new Array(e).fill(void 0),this.#u=new A(e),this.#f=new A(e),this.#p=0,this.#g=0,this.#v=Stack.create(e),this.#a=0,this.#r=0,"function"==typeof r&&(this.#s=r),"function"==typeof l?(this.#o=l,this.#S=[]):(this.#o=void 0,this.#S=void 0),this.#w=!!this.#s,this.#L=!!this.#o,this.noDisposeOnSet=!!c,this.noUpdateTTL=!!d,this.noDeleteOnFetchRejection=!!S,this.allowStaleOnFetchRejection=!!y,this.allowStaleOnFetchAbort=!!z,this.ignoreFetchAbort=!!w,0!==this.maxEntrySize){if(0!==this.#i&&!isPosInt(this.#i))throw new TypeError("maxSize must be a positive integer if specified");if(!isPosInt(this.maxEntrySize))throw new TypeError("maxEntrySize must be a positive integer if specified");this.#O()}if(this.allowStale=!!a,this.noDeleteOnStaleGet=!!m,this.updateAgeOnGet=!!h,this.updateAgeOnHas=!!n,this.ttlResolution=isPosInt(s)||0===s?s:1,this.ttlAutopurge=!!o,this.ttl=i||0,this.ttl){if(!isPosInt(this.ttl))throw new TypeError("ttl must be a positive integer if specified");this.#E()}if(0===this.#e&&0===this.ttl&&0===this.#i)throw new TypeError("At least one of max, maxSize, or ttl is required");if(!this.ttlAutopurge&&!this.#e&&!this.#i){const t="LRU_CACHE_UNBOUNDED";if(shouldWarn(t)){warned.add(t);emitWarning("TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.","UnboundedCacheWarning",t,LRUCache)}}}getRemainingTTL(t){return this.#l.has(t)?1/0:0}#E(){const t=new ZeroArray(this.#e),e=new ZeroArray(this.#e);this.#z=t,this.#y=e,this.#D=(i,s,o=perf.now())=>{if(e[i]=0!==s?o:0,t[i]=s,0!==s&&this.ttlAutopurge){const t=setTimeout(()=>{this.#b(i)&&this.#C(this.#c[i],"expire")},s+1);t.unref&&t.unref()}},this.#M=i=>{e[i]=0!==t[i]?perf.now():0},this.#R=(o,h)=>{if(t[h]){const n=t[h],a=e[h];if(!n||!a)return;o.ttl=n,o.start=a,o.now=i||s();const r=o.now-a;o.remainingTTL=n-r}};let i=0;const s=()=>{const t=perf.now();if(this.ttlResolution>0){i=t;const e=setTimeout(()=>i=0,this.ttlResolution);e.unref&&e.unref()}return t};this.getRemainingTTL=o=>{const h=this.#l.get(o);if(void 0===h)return 0;const n=t[h],a=e[h];if(!n||!a)return 1/0;return n-((i||s())-a)},this.#b=o=>{const h=e[o],n=t[o];return!!n&&!!h&&(i||s())-h>n}}#M=()=>{};#R=()=>{};#D=()=>{};#b=()=>!1;#O(){const t=new ZeroArray(this.#e);this.#r=0,this.#m=t,this.#I=e=>{this.#r-=t[e],t[e]=0},this.#W=(t,e,i,s)=>{if(this.#F(e))return 0;if(!isPosInt(i)){if(!s)throw new TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.");if("function"!=typeof s)throw new TypeError("sizeCalculation must be a function");if(i=s(e,t),!isPosInt(i))throw new TypeError("sizeCalculation return invalid (expect positive integer)")}return i},this.#B=(e,i,s)=>{if(t[e]=i,this.#i){const i=this.#i-t[e];for(;this.#r>i;)this.#U(!0)}this.#r+=t[e],s&&(s.entrySize=i,s.totalCalculatedSize=this.#r)}}#I=t=>{};#B=(t,e,i)=>{};#W=(t,e,i,s)=>{if(i||s)throw new TypeError("cannot set size without setting maxSize or maxEntrySize on cache");return 0};*#T({allowStale:t=this.allowStale}={}){if(this.#a)for(let e=this.#g;this.#G(e)&&(!t&&this.#b(e)||(yield e),e!==this.#p);)e=this.#f[e]}*#_({allowStale:t=this.allowStale}={}){if(this.#a)for(let e=this.#p;this.#G(e)&&(!t&&this.#b(e)||(yield e),e!==this.#g);)e=this.#u[e]}#G(t){return void 0!==t&&this.#l.get(this.#c[t])===t}*entries(){for(const t of this.#T())void 0===this.#d[t]||void 0===this.#c[t]||this.#F(this.#d[t])||(yield[this.#c[t],this.#d[t]])}*rentries(){for(const t of this.#_())void 0===this.#d[t]||void 0===this.#c[t]||this.#F(this.#d[t])||(yield[this.#c[t],this.#d[t]])}*keys(){for(const t of this.#T()){const e=this.#c[t];void 0===e||this.#F(this.#d[t])||(yield e)}}*rkeys(){for(const t of this.#_()){const e=this.#c[t];void 0===e||this.#F(this.#d[t])||(yield e)}}*values(){for(const t of this.#T()){void 0===this.#d[t]||this.#F(this.#d[t])||(yield this.#d[t])}}*rvalues(){for(const t of this.#_()){void 0===this.#d[t]||this.#F(this.#d[t])||(yield this.#d[t])}}[Symbol.iterator](){return this.entries()}[Symbol.toStringTag]="LRUCache";find(t,e={}){for(const i of this.#T()){const s=this.#d[i],o=this.#F(s)?s.__staleWhileFetching:s;if(void 0!==o&&t(o,this.#c[i],this))return this.get(this.#c[i],e)}}forEach(t,e=this){for(const i of this.#T()){const s=this.#d[i],o=this.#F(s)?s.__staleWhileFetching:s;void 0!==o&&t.call(e,o,this.#c[i],this)}}rforEach(t,e=this){for(const i of this.#_()){const s=this.#d[i],o=this.#F(s)?s.__staleWhileFetching:s;void 0!==o&&t.call(e,o,this.#c[i],this)}}purgeStale(){let t=!1;for(const e of this.#_({allowStale:!0}))this.#b(e)&&(this.#C(this.#c[e],"expire"),t=!0);return t}info(t){const e=this.#l.get(t);if(void 0===e)return;const i=this.#d[e],s=this.#F(i)?i.__staleWhileFetching:i;if(void 0===s)return;const o={value:s};if(this.#z&&this.#y){const t=this.#z[e],i=this.#y[e];if(t&&i){const e=t-(perf.now()-i);o.ttl=e,o.start=Date.now()}}return this.#m&&(o.size=this.#m[e]),o}dump(){const t=[];for(const e of this.#T({allowStale:!0})){const i=this.#c[e],s=this.#d[e],o=this.#F(s)?s.__staleWhileFetching:s;if(void 0===o||void 0===i)continue;const h={value:o};if(this.#z&&this.#y){h.ttl=this.#z[e];const t=perf.now()-this.#y[e];h.start=Math.floor(Date.now()-t)}this.#m&&(h.size=this.#m[e]),t.unshift([i,h])}return t}load(t){this.clear();for(const[e,i]of t){if(i.start){const t=Date.now()-i.start;i.start=perf.now()-t}this.set(e,i.value,i)}}set(t,e,i={}){if(void 0===e)return this.delete(t),this;const{ttl:s=this.ttl,start:o,noDisposeOnSet:h=this.noDisposeOnSet,sizeCalculation:n=this.sizeCalculation,status:a}=i;let{noUpdateTTL:r=this.noUpdateTTL}=i;const l=this.#W(t,e,i.size||0,n);if(this.maxEntrySize&&l>this.maxEntrySize)return a&&(a.set="miss",a.maxEntrySizeExceeded=!0),this.#C(t,"set"),this;let c=0===this.#a?void 0:this.#l.get(t);if(void 0===c)c=0===this.#a?this.#g:0!==this.#v.length?this.#v.pop():this.#a===this.#e?this.#U(!1):this.#a,this.#c[c]=t,this.#d[c]=e,this.#l.set(t,c),this.#u[this.#g]=c,this.#f[c]=this.#g,this.#g=c,this.#a++,this.#B(c,l,a),a&&(a.set="add"),r=!1;else{this.#k(c);const i=this.#d[c];if(e!==i){if(this.#A&&this.#F(i)){i.__abortController.abort(new Error("replaced"));const{__staleWhileFetching:e}=i;void 0===e||h||(this.#w&&this.#s?.(e,t,"set"),this.#L&&this.#S?.push([e,t,"set"]))}else h||(this.#w&&this.#s?.(i,t,"set"),this.#L&&this.#S?.push([i,t,"set"]));if(this.#I(c),this.#B(c,l,a),this.#d[c]=e,a){a.set="replace";const t=i&&this.#F(i)?i.__staleWhileFetching:i;void 0!==t&&(a.oldValue=t)}}else a&&(a.set="update")}if(0===s||this.#z||this.#E(),this.#z&&(r||this.#D(c,s,o),a&&this.#R(a,c)),!h&&this.#L&&this.#S){const t=this.#S;let e;for(;e=t?.shift();)this.#o?.(...e)}return this}pop(){try{for(;this.#a;){const t=this.#d[this.#p];if(this.#U(!0),this.#F(t)){if(t.__staleWhileFetching)return t.__staleWhileFetching}else if(void 0!==t)return t}}finally{if(this.#L&&this.#S){const t=this.#S;let e;for(;e=t?.shift();)this.#o?.(...e)}}}#U(t){const e=this.#p,i=this.#c[e],s=this.#d[e];return this.#A&&this.#F(s)?s.__abortController.abort(new Error("evicted")):(this.#w||this.#L)&&(this.#w&&this.#s?.(s,i,"evict"),this.#L&&this.#S?.push([s,i,"evict"])),this.#I(e),t&&(this.#c[e]=void 0,this.#d[e]=void 0,this.#v.push(e)),1===this.#a?(this.#p=this.#g=0,this.#v.length=0):this.#p=this.#u[e],this.#l.delete(i),this.#a--,e}has(t,e={}){const{updateAgeOnHas:i=this.updateAgeOnHas,status:s}=e,o=this.#l.get(t);if(void 0!==o){const t=this.#d[o];if(this.#F(t)&&void 0===t.__staleWhileFetching)return!1;if(!this.#b(o))return i&&this.#M(o),s&&(s.has="hit",this.#R(s,o)),!0;s&&(s.has="stale",this.#R(s,o))}else s&&(s.has="miss");return!1}peek(t,e={}){const{allowStale:i=this.allowStale}=e,s=this.#l.get(t);if(void 0===s||!i&&this.#b(s))return;const o=this.#d[s];return this.#F(o)?o.__staleWhileFetching:o}#x(t,e,i,s){const o=void 0===e?void 0:this.#d[e];if(this.#F(o))return o;const h=new AC,{signal:n}=i;n?.addEventListener("abort",()=>h.abort(n.reason),{signal:h.signal});const a={signal:h.signal,options:i,context:s},r=(s,o=!1)=>{const{aborted:n}=h.signal,r=i.ignoreFetchAbort&&void 0!==s;if(i.status&&(n&&!o?(i.status.fetchAborted=!0,i.status.fetchError=h.signal.reason,r&&(i.status.fetchAbortIgnored=!0)):i.status.fetchResolved=!0),n&&!r&&!o)return l(h.signal.reason);const d=c;return this.#d[e]===c&&(void 0===s?d.__staleWhileFetching?this.#d[e]=d.__staleWhileFetching:this.#C(t,"fetch"):(i.status&&(i.status.fetchUpdated=!0),this.set(t,s,a.options))),s},l=s=>{const{aborted:o}=h.signal,n=o&&i.allowStaleOnFetchAbort,a=n||i.allowStaleOnFetchRejection,r=a||i.noDeleteOnFetchRejection,l=c;if(this.#d[e]===c){!r||void 0===l.__staleWhileFetching?this.#C(t,"fetch"):n||(this.#d[e]=l.__staleWhileFetching)}if(a)return i.status&&void 0!==l.__staleWhileFetching&&(i.status.returnedStale=!0),l.__staleWhileFetching;if(l.__returned===l)throw s};i.status&&(i.status.fetchDispatched=!0);const c=new Promise((e,s)=>{const n=this.#h?.(t,o,a);n&&n instanceof Promise&&n.then(t=>e(void 0===t?void 0:t),s),h.signal.addEventListener("abort",()=>{i.ignoreFetchAbort&&!i.allowStaleOnFetchAbort||(e(void 0),i.allowStaleOnFetchAbort&&(e=t=>r(t,!0)))})}).then(r,t=>(i.status&&(i.status.fetchRejected=!0,i.status.fetchError=t),l(t))),d=Object.assign(c,{__abortController:h,__staleWhileFetching:o,__returned:void 0});return void 0===e?(this.set(t,d,{...a.options,status:void 0}),e=this.#l.get(t)):this.#d[e]=d,d}#F(t){if(!this.#A)return!1;const e=t;return!!e&&e instanceof Promise&&e.hasOwnProperty("__staleWhileFetching")&&e.__abortController instanceof AC}async fetch(t,e={}){const{allowStale:i=this.allowStale,updateAgeOnGet:s=this.updateAgeOnGet,noDeleteOnStaleGet:o=this.noDeleteOnStaleGet,ttl:h=this.ttl,noDisposeOnSet:n=this.noDisposeOnSet,size:a=0,sizeCalculation:r=this.sizeCalculation,noUpdateTTL:l=this.noUpdateTTL,noDeleteOnFetchRejection:c=this.noDeleteOnFetchRejection,allowStaleOnFetchRejection:d=this.allowStaleOnFetchRejection,ignoreFetchAbort:u=this.ignoreFetchAbort,allowStaleOnFetchAbort:f=this.allowStaleOnFetchAbort,context:p,forceRefresh:g=!1,status:v,signal:S}=e;if(!this.#A)return v&&(v.fetch="get"),this.get(t,{allowStale:i,updateAgeOnGet:s,noDeleteOnStaleGet:o,status:v});const m={allowStale:i,updateAgeOnGet:s,noDeleteOnStaleGet:o,ttl:h,noDisposeOnSet:n,size:a,sizeCalculation:r,noUpdateTTL:l,noDeleteOnFetchRejection:c,allowStaleOnFetchRejection:d,allowStaleOnFetchAbort:f,ignoreFetchAbort:u,status:v,signal:S};let y=this.#l.get(t);if(void 0===y){v&&(v.fetch="miss");const e=this.#x(t,y,m,p);return e.__returned=e}{const e=this.#d[y];if(this.#F(e)){const t=i&&void 0!==e.__staleWhileFetching;return v&&(v.fetch="inflight",t&&(v.returnedStale=!0)),t?e.__staleWhileFetching:e.__returned=e}const o=this.#b(y);if(!g&&!o)return v&&(v.fetch="hit"),this.#k(y),s&&this.#M(y),v&&this.#R(v,y),e;const h=this.#x(t,y,m,p),n=void 0!==h.__staleWhileFetching&&i;return v&&(v.fetch=o?"stale":"refresh",n&&o&&(v.returnedStale=!0)),n?h.__staleWhileFetching:h.__returned=h}}async forceFetch(t,e={}){const i=await this.fetch(t,e);if(void 0===i)throw new Error("fetch() returned undefined");return i}memo(t,e={}){const i=this.#n;if(!i)throw new Error("no memoMethod provided to constructor");const{context:s,forceRefresh:o,...h}=e,n=this.get(t,h);if(!o&&void 0!==n)return n;const a=i(t,n,{options:h,context:s});return this.set(t,a,h),a}get(t,e={}){const{allowStale:i=this.allowStale,updateAgeOnGet:s=this.updateAgeOnGet,noDeleteOnStaleGet:o=this.noDeleteOnStaleGet,status:h}=e,n=this.#l.get(t);if(void 0!==n){const e=this.#d[n],a=this.#F(e);return h&&this.#R(h,n),this.#b(n)?(h&&(h.get="stale"),a?(h&&i&&void 0!==e.__staleWhileFetching&&(h.returnedStale=!0),i?e.__staleWhileFetching:void 0):(o||this.#C(t,"expire"),h&&i&&(h.returnedStale=!0),i?e:void 0)):(h&&(h.get="hit"),a?e.__staleWhileFetching:(this.#k(n),s&&this.#M(n),e))}h&&(h.get="miss")}#P(t,e){this.#f[e]=t,this.#u[t]=e}#k(t){t!==this.#g&&(t===this.#p?this.#p=this.#u[t]:this.#P(this.#f[t],this.#u[t]),this.#P(this.#g,t),this.#g=t)}delete(t){return this.#C(t,"delete")}#C(t,e){let i=!1;if(0!==this.#a){const s=this.#l.get(t);if(void 0!==s)if(i=!0,1===this.#a)this.#j(e);else{this.#I(s);const i=this.#d[s];if(this.#F(i)?i.__abortController.abort(new Error("deleted")):(this.#w||this.#L)&&(this.#w&&this.#s?.(i,t,e),this.#L&&this.#S?.push([i,t,e])),this.#l.delete(t),this.#c[s]=void 0,this.#d[s]=void 0,s===this.#g)this.#g=this.#f[s];else if(s===this.#p)this.#p=this.#u[s];else{const t=this.#f[s];this.#u[t]=this.#u[s];const e=this.#u[s];this.#f[e]=this.#f[s]}this.#a--,this.#v.push(s)}}if(this.#L&&this.#S?.length){const t=this.#S;let e;for(;e=t?.shift();)this.#o?.(...e)}return i}clear(){return this.#j("delete")}#j(t){for(const e of this.#_({allowStale:!0})){const i=this.#d[e];if(this.#F(i))i.__abortController.abort(new Error("deleted"));else{const s=this.#c[e];this.#w&&this.#s?.(i,s,t),this.#L&&this.#S?.push([i,s,t])}}if(this.#l.clear(),this.#d.fill(void 0),this.#c.fill(void 0),this.#z&&this.#y&&(this.#z.fill(0),this.#y.fill(0)),this.#m&&this.#m.fill(0),this.#p=0,this.#g=0,this.#v.length=0,this.#r=0,this.#a=0,this.#L&&this.#S){const t=this.#S;let e;for(;e=t?.shift();)this.#o?.(...e)}}}