var test=require("tape"),functionBind=require("../implementation"),getCurrentContext=function(){return this};test("functionBind is a function",function(n){n.equal(typeof functionBind,"function"),n.end()}),test("non-functions",function(n){var t=[!0,!1,[],{},42,"foo",NaN,/a/g];n.plan(t.length);for(var e=0;e<t.length;++e)try{functionBind.call(t[e])}catch(r){n.ok(r instanceof TypeError,"throws when given "+String(t[e]))}n.end()}),test("without a context",function(n){n.test("binds properly",function(n){var t,e,r={func:functionBind.call(function(){t=Array.prototype.slice.call(arguments),e=this})};r.func(1,2,3),n.deepEqual(t,[1,2,3]),n.equal(e,getCurrentContext.call()),n.end()}),n.test("binds properly, and still supplies bound arguments",function(n){var t,e,r={func:functionBind.call(function(){t=Array.prototype.slice.call(arguments),e=this},void 0,1,2,3)};r.func(4,5,6),n.deepEqual(t,[1,2,3,4,5,6]),n.equal(e,getCurrentContext.call()),n.end()}),n.test("returns properly",function(n){var t,e={func:functionBind.call(function(){return t=Array.prototype.slice.call(arguments),this},null)},r=e.func(1,2,3);n.equal(r,getCurrentContext.call(),"returned context is namespaced context"),n.deepEqual(t,[1,2,3],"passed arguments are correct"),n.end()}),n.test("returns properly with bound arguments",function(n){var t,e={func:functionBind.call(function(){return t=Array.prototype.slice.call(arguments),this},null,1,2,3)},r=e.func(4,5,6);n.equal(r,getCurrentContext.call(),"returned context is namespaced context"),n.deepEqual(t,[1,2,3,4,5,6],"passed arguments are correct"),n.end()}),n.test("called as a constructor",function(n){var t=function(n){return function(){return n}};n.test("returns object value",function(n){var e=[1,2,3],r=new(functionBind.call(t(e),null));n.equal(r,e),n.end()}),n.test("does not return primitive value",function(n){var e=new(functionBind.call(t(42),null));n.notEqual(e,42),n.end()}),n.test("object from bound constructor is instance of original and bound constructor",function(n){var t=function(n){this.name=n||"A"},e=functionBind.call(t,null,"B"),r=new e;n.ok(r instanceof e,"result is instance of bound constructor"),n.ok(r instanceof t,"result is instance of original constructor"),n.end()}),n.end()}),n.end()}),test("with a context",function(n){n.test("with no bound arguments",function(n){var t,e,r={},u={func:functionBind.call(function(){t=Array.prototype.slice.call(arguments),e=this},r)};u.func(1,2,3),n.equal(e,r,"binds a context properly"),n.deepEqual(t,[1,2,3],"supplies passed arguments"),n.end()}),n.test("with bound arguments",function(n){var t,e,r={},u={func:functionBind.call(function(){t=Array.prototype.slice.call(arguments),e=this},r,1,2,3)};u.func(4,5,6),n.equal(e,r,"binds a context properly"),n.deepEqual(t,[1,2,3,4,5,6],"supplies bound and passed arguments"),n.end()}),n.test("returns properly",function(n){var t,e={},r={func:functionBind.call(function(){return t=Array.prototype.slice.call(arguments),this},e)},u=r.func(1,2,3);n.equal(u,e,"returned context is bound context"),n.notEqual(u,getCurrentContext.call(),"returned context is not lexical context"),n.deepEqual(t,[1,2,3],"passed arguments are correct"),n.end()}),n.test("returns properly with bound arguments",function(n){var t,e={},r={func:functionBind.call(function(){return t=Array.prototype.slice.call(arguments),this},e,1,2,3)},u=r.func(4,5,6);n.equal(u,e,"returned context is bound context"),n.notEqual(u,getCurrentContext.call(),"returned context is not lexical context"),n.deepEqual(t,[1,2,3,4,5,6],"passed arguments are correct"),n.end()}),n.test("passes the correct arguments when called as a constructor",function(n){var t={name:"Correct"},e=new(functionBind.call(function(n){return n},{name:"Incorrect"}))(t);n.equal(e,t,"returns the right arg when called as a constructor"),n.end()}),n.test("has the new instance's context when called as a constructor",function(n){var t,e={foo:"bar"},r={Func:functionBind.call(function(){t=this},e)},u=new r.Func;n.equal(u instanceof r.Func,!0),n.notEqual(t,e),n.end()}),n.end()}),test("bound function length",function(n){n.test("sets a correct length without thisArg",function(n){var t=functionBind.call(function(n,t,e){return n+t+e});n.equal(t.length,3),n.equal(t(1,2,3),6),n.end()}),n.test("sets a correct length with thisArg",function(n){var t=functionBind.call(function(n,t,e){return n+t+e},{});n.equal(t.length,3),n.equal(t(1,2,3),6),n.end()}),n.test("sets a correct length without thisArg and first argument",function(n){var t=functionBind.call(function(n,t,e){return n+t+e},void 0,1);n.equal(t.length,2),n.equal(t(2,3),6),n.end()}),n.test("sets a correct length with thisArg and first argument",function(n){var t=functionBind.call(function(n,t,e){return n+t+e},{},1);n.equal(t.length,2),n.equal(t(2,3),6),n.end()}),n.test("sets a correct length without thisArg and too many arguments",function(n){var t=functionBind.call(function(n,t,e){return n+t+e},void 0,1,2,3,4);n.equal(t.length,0),n.equal(t(),6),n.end()}),n.test("sets a correct length with thisArg and too many arguments",function(n){var t=functionBind.call(function(n,t,e){return n+t+e},{},1,2,3,4);n.equal(t.length,0),n.equal(t(),6),n.end()})});