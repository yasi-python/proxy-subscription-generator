const isWindows="win32"===process.platform||"cygwin"===process.env.OSTYPE||"msys"===process.env.OSTYPE,path=require("path"),COLON=isWindows?";":":",isexe=require("isexe"),getNotFoundError=t=>Object.assign(new Error(`not found: ${t}`),{code:"ENOENT"}),getPathInfo=(t,e)=>{const n=e.colon||COLON,s=t.match(/\//)||isWindows&&t.match(/\\/)?[""]:[...isWindows?[process.cwd()]:[],...(e.path||process.env.PATH||"").split(n)],o=isWindows?e.pathExt||process.env.PATHEXT||".EXE;.CMD;.BAT;.COM":"",i=isWindows?o.split(n):[""];return isWindows&&-1!==t.indexOf(".")&&""!==i[0]&&i.unshift(""),{pathEnv:s,pathExt:i,pathExtExe:o}},which=(t,e,n)=>{"function"==typeof e&&(n=e,e={}),e||(e={});const{pathEnv:s,pathExt:o,pathExtExe:i}=getPathInfo(t,e),r=[],h=n=>new Promise((o,i)=>{if(n===s.length)return e.all&&r.length?o(r):i(getNotFoundError(t));const h=s[n],p=/^".*"$/.test(h)?h.slice(1,-1):h,a=path.join(p,t),l=!p&&/^\.[\\\/]/.test(t)?t.slice(0,2)+a:a;o(c(l,n,0))}),c=(t,n,s)=>new Promise((p,a)=>{if(s===o.length)return p(h(n+1));const l=o[s];isexe(t+l,{pathExt:i},(o,i)=>{if(!o&&i){if(!e.all)return p(t+l);r.push(t+l)}return p(c(t,n,s+1))})});return n?h(0).then(t=>n(null,t),n):h(0)},whichSync=(t,e)=>{e=e||{};const{pathEnv:n,pathExt:s,pathExtExe:o}=getPathInfo(t,e),i=[];for(let r=0;r<n.length;r++){const h=n[r],c=/^".*"$/.test(h)?h.slice(1,-1):h,p=path.join(c,t),a=!c&&/^\.[\\\/]/.test(t)?t.slice(0,2)+p:p;for(let n=0;n<s.length;n++){const r=a+s[n];try{if(isexe.sync(r,{pathExt:o})){if(!e.all)return r;i.push(r)}}catch(t){}}}if(e.all&&i.length)return i;if(e.nothrow)return null;throw getNotFoundError(t)};module.exports=which,which.sync=whichSync;