const ANSI_BACKGROUND_OFFSET=10,wrapAnsi16=(e=0)=>s=>`[${s+e}m`,wrapAnsi256=(e=0)=>s=>`[${38+e};5;${s}m`,wrapAnsi16m=(e=0)=>(s,r,t)=>`[${38+e};2;${s};${r};${t}m`,styles={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],overline:[53,55],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],gray:[90,39],grey:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgGray:[100,49],bgGrey:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};export const modifierNames=Object.keys(styles.modifier);export const foregroundColorNames=Object.keys(styles.color);export const backgroundColorNames=Object.keys(styles.bgColor);export const colorNames=[...foregroundColorNames,...backgroundColorNames];function assembleStyles(){const e=new Map;for(const[s,r]of Object.entries(styles)){for(const[s,t]of Object.entries(r))styles[s]={open:`[${t[0]}m`,close:`[${t[1]}m`},r[s]=styles[s],e.set(t[0],t[1]);Object.defineProperty(styles,s,{value:r,enumerable:!1})}return Object.defineProperty(styles,"codes",{value:e,enumerable:!1}),styles.color.close="[39m",styles.bgColor.close="[49m",styles.color.ansi=wrapAnsi16(),styles.color.ansi256=wrapAnsi256(),styles.color.ansi16m=wrapAnsi16m(),styles.bgColor.ansi=wrapAnsi16(10),styles.bgColor.ansi256=wrapAnsi256(10),styles.bgColor.ansi16m=wrapAnsi16m(10),Object.defineProperties(styles,{rgbToAnsi256:{value:(e,s,r)=>e===s&&s===r?e<8?16:e>248?231:Math.round((e-8)/247*24)+232:16+36*Math.round(e/255*5)+6*Math.round(s/255*5)+Math.round(r/255*5),enumerable:!1},hexToRgb:{value:e=>{const s=/[a-f\d]{6}|[a-f\d]{3}/i.exec(e.toString(16));if(!s)return[0,0,0];let[r]=s;3===r.length&&(r=[...r].map(e=>e+e).join(""));const t=Number.parseInt(r,16);return[t>>16&255,t>>8&255,255&t]},enumerable:!1},hexToAnsi256:{value:e=>styles.rgbToAnsi256(...styles.hexToRgb(e)),enumerable:!1},ansi256ToAnsi:{value:e=>{if(e<8)return 30+e;if(e<16)return e-8+90;let s,r,t;if(e>=232)s=(10*(e-232)+8)/255,r=s,t=s;else{const o=(e-=16)%36;s=Math.floor(e/36)/5,r=Math.floor(o/6)/5,t=o%6/5}const o=2*Math.max(s,r,t);if(0===o)return 30;let n=30+(Math.round(t)<<2|Math.round(r)<<1|Math.round(s));return 2===o&&(n+=60),n},enumerable:!1},rgbToAnsi:{value:(e,s,r)=>styles.ansi256ToAnsi(styles.rgbToAnsi256(e,s,r)),enumerable:!1},hexToAnsi:{value:e=>styles.ansi256ToAnsi(styles.hexToAnsi256(e)),enumerable:!1}}),styles}const ansiStyles=assembleStyles();export default ansiStyles;