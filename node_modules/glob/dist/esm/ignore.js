import{Minimatch}from"minimatch";import{Pattern}from"./pattern.js";const defaultPlatform="object"==typeof process&&process&&"string"==typeof process.platform?process.platform:"linux";export class Ignore{relative;relativeChildren;absolute;absoluteChildren;platform;mmopts;constructor(t,{nobrace:o,nocase:e,noext:r,noglobstar:s,platform:i=defaultPlatform}){this.relative=[],this.absolute=[],this.relativeChildren=[],this.absoluteChildren=[],this.platform=i,this.mmopts={dot:!0,nobrace:o,nocase:e,noext:r,noglobstar:s,optimizationLevel:2,platform:i,nocomment:!0,nonegate:!0};for(const o of t)this.add(o)}add(t){const o=new Minimatch(t,this.mmopts);for(let t=0;t<o.set.length;t++){const e=o.set[t],r=o.globParts[t];if(!e||!r)throw new Error("invalid pattern object");for(;"."===e[0]&&"."===r[0];)e.shift(),r.shift();const s=new Pattern(e,r,0,this.platform),i=new Minimatch(s.globString(),this.mmopts),n="**"===r[r.length-1],a=s.isAbsolute();a?this.absolute.push(i):this.relative.push(i),n&&(a?this.absoluteChildren.push(i):this.relativeChildren.push(i))}}ignored(t){const o=t.fullpath(),e=`${o}/`,r=t.relative()||".",s=`${r}/`;for(const t of this.relative)if(t.match(r)||t.match(s))return!0;for(const t of this.absolute)if(t.match(o)||t.match(e))return!0;return!1}childrenIgnored(t){const o=t.fullpath()+"/",e=(t.relative()||".")+"/";for(const t of this.relativeChildren)if(t.match(e))return!0;for(const t of this.absoluteChildren)if(t.match(o))return!0;return!1}}