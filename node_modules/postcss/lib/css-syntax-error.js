"use strict";let pico=require("picocolors"),terminalHighlight=require("./terminal-highlight");class CssSyntaxError extends Error{constructor(e,t,i,s,r,n){super(e),this.name="CssSyntaxError",this.reason=e,r&&(this.file=r),s&&(this.source=s),n&&(this.plugin=n),void 0!==t&&void 0!==i&&("number"==typeof t?(this.line=t,this.column=i):(this.line=t.line,this.column=t.column,this.endLine=i.line,this.endColumn=i.column)),this.setMessage(),Error.captureStackTrace&&Error.captureStackTrace(this,CssSyntaxError)}setMessage(){this.message=this.plugin?this.plugin+": ":"",this.message+=this.file?this.file:"<css input>",void 0!==this.line&&(this.message+=":"+this.line+":"+this.column),this.message+=": "+this.reason}showSourceCode(e){if(!this.source)return"";let t=this.source;null==e&&(e=pico.isColorSupported);let i=e=>e,s=e=>e,r=e=>e;if(e){let{bold:e,gray:t,red:n}=pico.createColors(!0);s=t=>e(n(t)),i=e=>t(e),terminalHighlight&&(r=e=>terminalHighlight(e))}let n=t.split(/\r?\n/),l=Math.max(this.line-3,0),h=Math.min(this.line+2,n.length),o=String(h).length;return n.slice(l,h).map((e,t)=>{let n=l+1+t,h=" "+(" "+n).slice(-o)+" | ";if(n===this.line){if(e.length>160){let t=20,n=Math.max(0,this.column-t),l=Math.max(this.column+t,this.endColumn+t),o=e.slice(n,l),a=i(h.replace(/\d/g," "))+e.slice(0,Math.min(this.column-1,t-1)).replace(/[^\t]/g," ");return s(">")+i(h)+r(o)+"\n "+a+s("^")}let t=i(h.replace(/\d/g," "))+e.slice(0,this.column-1).replace(/[^\t]/g," ");return s(">")+i(h)+r(e)+"\n "+t+s("^")}return" "+i(h)+r(e)}).join("\n")}toString(){let e=this.showSourceCode();return e&&(e="\n\n"+e+"\n"),this.name+": "+this.message+e}}module.exports=CssSyntaxError,CssSyntaxError.default=CssSyntaxError;