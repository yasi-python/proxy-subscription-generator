"use strict";let LazyResult,Processor,Container=require("./container");class Root extends Container{constructor(e){super(e),this.type="root",this.nodes||(this.nodes=[])}normalize(e,r,o){let s=super.normalize(e);if(r)if("prepend"===o)this.nodes.length>1?r.raws.before=this.nodes[1].raws.before:delete r.raws.before;else if(this.first!==r)for(let e of s)e.raws.before=r.raws.before;return s}removeChild(e,r){let o=this.index(e);return!r&&0===o&&this.nodes.length>1&&(this.nodes[1].raws.before=this.nodes[o].raws.before),super.removeChild(e)}toResult(e={}){return new LazyResult(new Processor,this,e).stringify()}}Root.registerLazyResult=e=>{LazyResult=e},Root.registerProcessor=e=>{Processor=e},module.exports=Root,Root.default=Root,Container.registerRoot(Root);