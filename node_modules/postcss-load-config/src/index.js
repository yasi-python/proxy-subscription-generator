"use strict";const resolve=require("path").resolve,url=require("url"),config=require("lilconfig"),yaml=require("yaml"),loadOptions=require("./options.js"),loadPlugins=require("./plugins.js"),interopRequireDefault=e=>e&&e.__esModule?e:{default:e},processResult=(e,r)=>{const s=r.filepath||"";let t=interopRequireDefault(r.config).default||{};return t="function"==typeof t?t(e):Object.assign({},t,e),t.plugins||(t.plugins=[]),{plugins:loadPlugins(t,s),options:loadOptions(t,s),file:s}},createContext=e=>((e=Object.assign({cwd:process.cwd(),env:process.env.NODE_ENV},e)).env||(process.env.NODE_ENV="development"),e),importDefault=async e=>(await import(url.pathToFileURL(e).href)).default,addTypeScriptLoader=(e={},r)=>{const s="postcss";return{...e,searchPlaces:[...e.searchPlaces||[],"package.json",`.${s}rc`,`.${s}rc.json`,`.${s}rc.yaml`,`.${s}rc.yml`,`.${s}rc.ts`,`.${s}rc.cts`,`.${s}rc.js`,`.${s}rc.cjs`,`.${s}rc.mjs`,`${s}.config.ts`,`${s}.config.cts`,`${s}.config.js`,`${s}.config.cjs`,`${s}.config.mjs`],loaders:{...e.loaders,".yaml":(e,r)=>yaml.parse(r),".yml":(e,r)=>yaml.parse(r),".js":importDefault,".cjs":importDefault,".mjs":importDefault,".ts":r,".cts":r}}},withTypeScriptLoader=e=>(r,s,t)=>e(r,s,addTypeScriptLoader(t,e=>{let r={enabled(){}};try{return r=require("ts-node").register({moduleTypes:{"**/*.cts":"cjs"}}),require(e)}catch(e){if("MODULE_NOT_FOUND"===e.code)throw new Error(`'ts-node' is required for the TypeScript configuration files. Make sure it is installed\nError: ${e.message}`);throw e}finally{r.enabled(!1)}})),rc=withTypeScriptLoader((e,r,s)=>(e=createContext(e),r=r?resolve(r):process.cwd(),config.lilconfig("postcss",s).search(r).then(s=>{if(!s)throw new Error(`No PostCSS Config found in: ${r}`);return processResult(e,s)})))
/**
 * Autoload Config for PostCSS
 *
 * @author Michael Ciniawsky @michael-ciniawsky <michael.ciniawsky@gmail.com>
 * @license MIT
 *
 * @module postcss-load-config
 * @version 2.1.0
 *
 * @requires comsiconfig
 * @requires ./options
 * @requires ./plugins
 */;module.exports=rc;