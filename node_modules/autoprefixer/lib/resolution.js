let FractionJs=require("fraction.js"),Prefixer=require("./prefixer"),utils=require("./utils");const REGEXP=/(min|max)-resolution\s*:\s*\d*\.?\d+(dppx|dpcm|dpi|x)/gi,SPLIT=/(min|max)-resolution(\s*:\s*)(\d*\.?\d+)(dppx|dpcm|dpi|x)/i;class Resolution extends Prefixer{clean(e){if(!this.bad){this.bad=[];for(let e of this.prefixes)this.bad.push(this.prefixName(e,"min")),this.bad.push(this.prefixName(e,"max"))}e.params=utils.editList(e.params,e=>e.filter(e=>this.bad.every(i=>!e.includes(i))))}prefixName(e,i){return"-moz-"===e?i+"--moz-device-pixel-ratio":e+i+"-device-pixel-ratio"}prefixQuery(e,i,s,r,t){return r=new FractionJs(r),"dpi"===t?r=r.div(96):"dpcm"===t&&(r=r.mul(2.54).div(96)),r=r.simplify(),"-o-"===e&&(r=r.n+"/"+r.d),this.prefixName(e,i)+s+r}process(e){let i=this.parentPrefix(e),s=i?[i]:this.prefixes;e.params=utils.editList(e.params,(e,i)=>{for(let r of e)if(r.includes("min-resolution")||r.includes("max-resolution")){for(let e of s){let s=r.replace(REGEXP,i=>{let s=i.match(SPLIT);return this.prefixQuery(e,s[1],s[2],s[3],s[4])});i.push(s)}i.push(r)}else i.push(r);return utils.uniq(i)})}}module.exports=Resolution;