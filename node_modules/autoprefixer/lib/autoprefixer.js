let browserslist=require("browserslist"),{agents:agents}=require("caniuse-lite/dist/unpacker/agents"),pico=require("picocolors"),dataPrefixes=require("../data/prefixes"),Browsers=require("./browsers"),getInfo=require("./info"),Prefixes=require("./prefixes"),autoprefixerData={browsers:agents,prefixes:dataPrefixes};const WARNING="\n  Replace Autoprefixer `browsers` option to Browserslist config.\n  Use `browserslist` key in `package.json` or `.browserslistrc` file.\n\n  Using `browsers` option can cause errors. Browserslist config can\n  be used for Babel, Autoprefixer, postcss-normalize and other tools.\n\n  If you really need to use option, rename it to `overrideBrowserslist`.\n\n  Learn more at:\n  https://github.com/browserslist/browserslist#readme\n  https://twitter.com/browserslist\n\n";function isPlainObject(e){return"[object Object]"===Object.prototype.toString.apply(e)}let cache=new Map;function timeCapsule(e,r){0!==r.browsers.selected.length&&(r.add.selectors.length>0||Object.keys(r.add).length>2||e.warn("Autoprefixer target browsers do not need any prefixes.You do not need Autoprefixer anymore.\nCheck your Browserslist config to be sure that your targets are set up correctly.\n\n  Learn more at:\n  https://github.com/postcss/autoprefixer#readme\n  https://github.com/browserslist/browserslist#readme\n\n"))}function plugin(...e){let r;if(1===e.length&&isPlainObject(e[0])?(r=e[0],e=void 0):0===e.length||1===e.length&&!e[0]?e=void 0:e.length<=2&&(Array.isArray(e[0])||!e[0])?(r=e[1],e=e[0]):"object"==typeof e[e.length-1]&&(r=e.pop()),r||(r={}),r.browser)throw new Error("Change `browser` option to `overrideBrowserslist` in Autoprefixer");if(r.browserslist)throw new Error("Change `browserslist` option to `overrideBrowserslist` in Autoprefixer");r.overrideBrowserslist?e=r.overrideBrowserslist:r.browsers&&("undefined"!=typeof console&&console.warn&&console.warn(pico.red(WARNING.replace(/`[^`]+`/g,e=>pico.yellow(e.slice(1,-1))))),e=r.browsers);let s={env:r.env,ignoreUnknownVersions:r.ignoreUnknownVersions,stats:r.stats};function o(o){let t=autoprefixerData,n=new Browsers(t.browsers,e,o,s),i=n.selected.join(", ")+JSON.stringify(r);return cache.has(i)||cache.set(i,new Prefixes(t.prefixes,n,r)),cache.get(i)}return{browsers:e,info:e=>((e=e||{}).from=e.from||process.cwd(),getInfo(o(e))),options:r,postcssPlugin:"autoprefixer",prepare(e){let s=o({env:r.env,from:e.opts.from});return{OnceExit(o){timeCapsule(e,s),!1!==r.remove&&s.processor.remove(o,e),!1!==r.add&&s.processor.add(o,e)}}}}}module.exports=plugin,plugin.postcss=!0,plugin.data=autoprefixerData,plugin.defaults=browserslist.defaults,plugin.info=()=>plugin().info();