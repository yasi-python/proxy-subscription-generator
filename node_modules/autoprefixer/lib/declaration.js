let Browsers=require("./browsers"),Prefixer=require("./prefixer"),utils=require("./utils");class Declaration extends Prefixer{add(e,r,t,s){let i=this.prefixed(e.prop,r);if(!this.isAlready(e,i)&&!this.otherPrefixes(e.value,r))return this.insert(e,r,t,s)}calcBefore(e,r,t=""){let s=this.maxPrefixed(e,r)-utils.removeNote(t).length,i=r.raw("before");return s>0&&(i+=Array(s).fill(" ").join("")),i}check(){return!0}insert(e,r,t){let s=this.set(this.clone(e),r);if(s)return e.parent.some(e=>e.prop===s.prop&&e.value===s.value)?void 0:(this.needCascade(e)&&(s.raws.before=this.calcBefore(t,e,r)),e.parent.insertBefore(e,s))}isAlready(e,r){let t=this.all.group(e).up(e=>e.prop===r);return t||(t=this.all.group(e).down(e=>e.prop===r)),t}maxPrefixed(e,r){if(r._autoprefixerMax)return r._autoprefixerMax;let t=0;for(let r of e)r=utils.removeNote(r),r.length>t&&(t=r.length);return r._autoprefixerMax=t,r._autoprefixerMax}needCascade(e){return e._autoprefixerCascade||(e._autoprefixerCascade=!1!==this.all.options.cascade&&e.raw("before").includes("\n")),e._autoprefixerCascade}normalize(e){return e}old(e,r){return[this.prefixed(e,r)]}otherPrefixes(e,r){for(let t of Browsers.prefixes())if(t!==r&&e.includes(t))return e.replace(/var\([^)]+\)/,"").includes(t);return!1}prefixed(e,r){return r+e}process(e,r){if(!this.needCascade(e))return void super.process(e,r);let t=super.process(e,r);t&&t.length&&(this.restoreBefore(e),e.raws.before=this.calcBefore(t,e))}restoreBefore(e){let r=e.raw("before").split("\n"),t=r[r.length-1];this.all.group(e).up(e=>{let r=e.raw("before").split("\n"),s=r[r.length-1];s.length<t.length&&(t=s)}),r[r.length-1]=t,e.raws.before=r.join("\n")}set(e,r){return e.prop=this.prefixed(e.prop,r),e}}module.exports=Declaration;