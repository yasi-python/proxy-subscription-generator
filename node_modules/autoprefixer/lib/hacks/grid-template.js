let Declaration=require("../declaration"),{getGridGap:getGridGap,inheritGridGap:inheritGridGap,parseTemplate:parseTemplate,warnGridGap:warnGridGap,warnMissedAreas:warnMissedAreas}=require("./grid-utils");class GridTemplate extends Declaration{insert(e,r,a,s){if("-ms-"!==r)return super.insert(e,r,a);if(e.parent.some(e=>"-ms-grid-rows"===e.prop))return;let i=getGridGap(e),t=inheritGridGap(e,i),{areas:p,columns:l,rows:n}=parseTemplate({decl:e,gap:t||i}),d=Object.keys(p).length>0,o=Boolean(n),G=Boolean(l);return warnGridGap({decl:e,gap:i,hasColumns:G,result:s}),warnMissedAreas(p,e,s),(o&&G||d)&&e.cloneBefore({prop:"-ms-grid-rows",raws:{},value:n}),G&&e.cloneBefore({prop:"-ms-grid-columns",raws:{},value:l}),e}}GridTemplate.names=["grid-template"],module.exports=GridTemplate;