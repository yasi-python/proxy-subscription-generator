"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const utils=require("../../utils");class EntryFilter{constructor(t,e){this._settings=t,this._micromatchOptions=e,this.index=new Map}getFilter(t,e){const[i,s]=utils.pattern.partitionAbsoluteAndRelative(e),r={positive:{all:utils.pattern.convertPatternsToRe(t,this._micromatchOptions)},negative:{absolute:utils.pattern.convertPatternsToRe(i,Object.assign(Object.assign({},this._micromatchOptions),{dot:!0})),relative:utils.pattern.convertPatternsToRe(s,Object.assign(Object.assign({},this._micromatchOptions),{dot:!0}))}};return t=>this._filter(t,r)}_filter(t,e){const i=utils.path.removeLeadingDotSegment(t.path);if(this._settings.unique&&this._isDuplicateEntry(i))return!1;if(this._onlyFileFilter(t)||this._onlyDirectoryFilter(t))return!1;const s=this._isMatchToPatternsSet(i,e,t.dirent.isDirectory());return this._settings.unique&&s&&this._createIndexRecord(i),s}_isDuplicateEntry(t){return this.index.has(t)}_createIndexRecord(t){this.index.set(t,void 0)}_onlyFileFilter(t){return this._settings.onlyFiles&&!t.dirent.isFile()}_onlyDirectoryFilter(t){return this._settings.onlyDirectories&&!t.dirent.isDirectory()}_isMatchToPatternsSet(t,e,i){return!!this._isMatchToPatterns(t,e.positive.all,i)&&!this._isMatchToPatterns(t,e.negative.relative,i)&&!this._isMatchToAbsoluteNegative(t,e.negative.absolute,i)}_isMatchToAbsoluteNegative(t,e,i){if(0===e.length)return!1;const s=utils.path.makeAbsolute(this._settings.cwd,t);return this._isMatchToPatterns(s,e,i)}_isMatchToPatterns(t,e,i){if(0===e.length)return!1;const s=utils.pattern.matchAny(t,e);return!s&&i?utils.pattern.matchAny(t+"/",e):s}}exports.default=EntryFilter;