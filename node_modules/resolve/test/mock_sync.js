var path=require("path"),test=require("tape"),resolve=require("../");test("mock",function(e){e.plan(4);var r={};r[path.resolve("/foo/bar/baz.js")]="beep";var o={};function a(e){return{basedir:path.resolve(e),isFile:function(e){return Object.prototype.hasOwnProperty.call(r,path.resolve(e))},isDirectory:function(e){return!!o[path.resolve(e)]},readFileSync:function(e){return r[path.resolve(e)]},realpathSync:function(e){return e}}}o[path.resolve("/foo/bar")]=!0,e.equal(resolve.sync("./baz",a("/foo/bar")),path.resolve("/foo/bar/baz.js")),e.equal(resolve.sync("./baz.js",a("/foo/bar")),path.resolve("/foo/bar/baz.js")),e.throws(function(){resolve.sync("baz",a("/foo/bar"))}),e.throws(function(){resolve.sync("../baz",a("/foo/bar"))})}),test("mock package",function(e){e.plan(1);var r={};r[path.resolve("/foo/node_modules/bar/baz.js")]="beep",r[path.resolve("/foo/node_modules/bar/package.json")]=JSON.stringify({main:"./baz.js"});var o,a={};a[path.resolve("/foo")]=!0,a[path.resolve("/foo/node_modules")]=!0,e.equal(resolve.sync("bar",(o="/foo",{basedir:path.resolve(o),isFile:function(e){return Object.prototype.hasOwnProperty.call(r,path.resolve(e))},isDirectory:function(e){return!!a[path.resolve(e)]},readFileSync:function(e){return r[path.resolve(e)]},realpathSync:function(e){return e}})),path.resolve("/foo/node_modules/bar/baz.js"))}),test("symlinked",function(e){e.plan(2);var r={};r[path.resolve("/foo/bar/baz.js")]="beep",r[path.resolve("/foo/bar/symlinked/baz.js")]="beep";var o={};function a(e){return{preserveSymlinks:!1,basedir:path.resolve(e),isFile:function(e){return Object.prototype.hasOwnProperty.call(r,path.resolve(e))},isDirectory:function(e){return!!o[path.resolve(e)]},readFileSync:function(e){return r[path.resolve(e)]},realpathSync:function(e){var r=path.resolve(e);if(r.indexOf("symlinked")>=0)return r;if(path.extname(r)){var o=path.dirname(r),a=path.basename(r);return path.join(o,"symlinked",a)}return path.join(r,"symlinked")}}}o[path.resolve("/foo/bar")]=!0,o[path.resolve("/foo/bar/symlinked")]=!0,e.equal(resolve.sync("./baz",a("/foo/bar")),path.resolve("/foo/bar/symlinked/baz.js")),e.equal(resolve.sync("./baz.js",a("/foo/bar")),path.resolve("/foo/bar/symlinked/baz.js"))}),test("readPackageSync",function(e){e.plan(3);var r={};r[path.resolve("/foo/node_modules/bar/something-else.js")]="beep",r[path.resolve("/foo/node_modules/bar/package.json")]=JSON.stringify({main:"./baz.js"}),r[path.resolve("/foo/node_modules/bar/baz.js")]="boop";var o={};function a(e,a){return{basedir:path.resolve(e),isFile:function(e){return Object.prototype.hasOwnProperty.call(r,path.resolve(e))},isDirectory:function(e){return!!o[path.resolve(e)]},readFileSync:a?null:function(e){return r[path.resolve(e)]},realpathSync:function(e){return e}}}o[path.resolve("/foo")]=!0,o[path.resolve("/foo/node_modules")]=!0,e.test("with readFile",function(e){e.plan(1),e.equal(resolve.sync("bar",a("/foo")),path.resolve("/foo/node_modules/bar/baz.js"))});var n=function(e,o){return o.indexOf(path.join("bar","package.json"))>=0?{main:"./something-else.js"}:JSON.parse(r[path.resolve(o)])};e.test("with readPackage",function(e){e.plan(1);var r=a("/foo");delete r.readFileSync,r.readPackageSync=n,e.equal(resolve.sync("bar",r),path.resolve("/foo/node_modules/bar/something-else.js"))}),e.test("with readFile and readPackage",function(e){e.plan(1);var r=a("/foo");r.readPackageSync=n,e.throws(function(){resolve.sync("bar",r)},TypeError,"errors when both readFile and readPackage are provided")})});