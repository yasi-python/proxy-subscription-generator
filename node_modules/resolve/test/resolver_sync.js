var path=require("path"),fs=require("fs"),test=require("tape"),resolve=require("../"),sync=require("../sync"),requireResolveSupportsPaths=require.resolve.length>1&&!/^v12\.[012]\./.test(process.version),requireResolveDefaultPathsBroken=/^v8\.9\.|^v9\.[01]\.0|^v9\.2\./.test(process.version);test("`./sync` entry point",function(e){e.equal(resolve.sync,sync,"`./sync` entry point is the same as `.sync` on `main`"),e.end()}),test("foo",function(e){var r=path.join(__dirname,"resolver");e.equal(resolve.sync("./foo",{basedir:r}),path.join(r,"foo.js"),"./foo"),requireResolveSupportsPaths&&e.equal(resolve.sync("./foo",{basedir:r}),require.resolve("./foo",{paths:[r]}),"./foo: resolve.sync === require.resolve"),e.equal(resolve.sync("./foo.js",{basedir:r}),path.join(r,"foo.js"),"./foo.js"),requireResolveSupportsPaths&&e.equal(resolve.sync("./foo.js",{basedir:r}),require.resolve("./foo.js",{paths:[r]}),"./foo.js: resolve.sync === require.resolve"),e.equal(resolve.sync("./foo.js",{basedir:r,filename:path.join(r,"bar.js")}),path.join(r,"foo.js")),e.throws(function(){resolve.sync("foo",{basedir:r})}),e.throws(function(){resolve.sync("foo",{basedir:r,filename:path.join(r,"bar.js")})},{name:"Error",message:"Cannot find module 'foo' from '"+path.join(r,"bar.js")+"'"}),e.end()}),test("bar",function(e){var r=path.join(__dirname,"resolver"),s=path.join(r,"bar");e.equal(resolve.sync("foo",{basedir:s}),path.join(r,"bar/node_modules/foo/index.js"),"foo in bar"),!requireResolveDefaultPathsBroken&&requireResolveSupportsPaths&&e.equal(resolve.sync("foo",{basedir:s}),require.resolve("foo",{paths:[s]}),"foo in bar: resolve.sync === require.resolve"),e.end()}),test("baz",function(e){var r=path.join(__dirname,"resolver");e.equal(resolve.sync("./baz",{basedir:r}),path.join(r,"baz/quux.js"),"./baz"),requireResolveSupportsPaths&&e.equal(resolve.sync("./baz",{basedir:r}),require.resolve("./baz",{paths:[r]}),"./baz: resolve.sync === require.resolve"),e.end()}),test("biz",function(e){var r=path.join(__dirname,"resolver/biz/node_modules");e.equal(resolve.sync("./grux",{basedir:r}),path.join(r,"grux/index.js")),requireResolveSupportsPaths&&e.equal(resolve.sync("./grux",{basedir:r}),require.resolve("./grux",{paths:[r]}),"./grux: resolve.sync === require.resolve");var s=path.join(r,"grux");e.equal(resolve.sync("tiv",{basedir:s}),path.join(r,"tiv/index.js")),!requireResolveDefaultPathsBroken&&requireResolveSupportsPaths&&e.equal(resolve.sync("tiv",{basedir:s}),require.resolve("tiv",{paths:[s]}),"tiv: resolve.sync === require.resolve");var o=path.join(r,"tiv");e.equal(resolve.sync("grux",{basedir:o}),path.join(r,"grux/index.js")),!requireResolveDefaultPathsBroken&&requireResolveSupportsPaths&&e.equal(resolve.sync("grux",{basedir:o}),require.resolve("grux",{paths:[o]}),"grux: resolve.sync === require.resolve"),e.end()}),test("normalize",function(e){var r=path.join(__dirname,"resolver/biz/node_modules/grux");e.equal(resolve.sync("../grux",{basedir:r}),path.join(r,"index.js")),requireResolveSupportsPaths&&e.equal(resolve.sync("../grux",{basedir:r}),require.resolve("../grux",{paths:[r]}),"../grux: resolve.sync === require.resolve"),e.end()}),test("cup",function(e){var r=path.join(__dirname,"resolver");e.equal(resolve.sync("./cup",{basedir:r,extensions:[".js",".coffee"]}),path.join(r,"cup.coffee"),"./cup -> ./cup.coffee"),e.equal(resolve.sync("./cup.coffee",{basedir:r}),path.join(r,"cup.coffee"),"./cup.coffee"),e.throws(function(){resolve.sync("./cup",{basedir:r,extensions:[".js"]})}),requireResolveSupportsPaths&&e.equal(resolve.sync("./cup.coffee",{basedir:r,extensions:[".js",".coffee"]}),require.resolve("./cup.coffee",{paths:[r]}),"./cup.coffee: resolve.sync === require.resolve"),e.end()}),test("mug",function(e){var r=path.join(__dirname,"resolver");e.equal(resolve.sync("./mug",{basedir:r}),path.join(r,"mug.js"),"./mug -> ./mug.js"),requireResolveSupportsPaths&&e.equal(resolve.sync("./mug",{basedir:r}),require.resolve("./mug",{paths:[r]}),"./mug: resolve.sync === require.resolve"),e.equal(resolve.sync("./mug",{basedir:r,extensions:[".coffee",".js"]}),path.join(r,"mug.coffee"),"./mug -> ./mug.coffee"),e.equal(resolve.sync("./mug",{basedir:r,extensions:[".js",".coffee"]}),path.join(r,"mug.js"),"./mug -> ./mug.js"),e.end()}),test("other path",function(e){var r=path.join(__dirname,"resolver"),s=path.join(r,"bar"),o=path.join(r,"other_path");e.equal(resolve.sync("root",{basedir:s,paths:[o]}),path.join(r,"other_path/root.js")),e.equal(resolve.sync("lib/other-lib",{basedir:s,paths:[o]}),path.join(r,"other_path/lib/other-lib.js")),e.throws(function(){resolve.sync("root",{basedir:s})}),e.throws(function(){resolve.sync("zzz",{basedir:s,paths:[o]})}),e.end()}),test("path iterator",function(e){var r=path.join(__dirname,"resolver");e.equal(resolve.sync("baz",{packageIterator:function(e,s,o,a){return[path.join(r,e)]}}),path.join(r,"baz/quux.js")),e.end()}),test("incorrect main",function(e){var r=path.join(__dirname,"resolver"),s=path.join(r,"incorrect_main");e.equal(resolve.sync("./incorrect_main",{basedir:r}),path.join(s,"index.js")),requireResolveSupportsPaths&&e.equal(resolve.sync("./incorrect_main",{basedir:r}),require.resolve("./incorrect_main",{paths:[r]}),"./incorrect_main: resolve.sync === require.resolve"),e.end()}),test("missing index",function(e){e.plan(requireResolveSupportsPaths?2:1);var r=path.join(__dirname,"resolver");try{resolve.sync("./missing_index",{basedir:r}),e.fail("did not fail")}catch(r){e.equal(r&&r.code,"MODULE_NOT_FOUND","error has correct error code")}if(requireResolveSupportsPaths)try{require.resolve("./missing_index",{basedir:r}),e.fail("require.resolve did not fail")}catch(r){e.equal(r&&r.code,"MODULE_NOT_FOUND","error has correct error code")}}),test("missing main",function(e){var r=path.join(__dirname,"resolver");try{resolve.sync("./missing_main",{basedir:r}),e.fail("require.resolve did not fail")}catch(r){e.equal(r&&r.code,"MODULE_NOT_FOUND","error has correct error code")}if(requireResolveSupportsPaths)try{resolve.sync("./missing_main",{basedir:r}),e.fail("require.resolve did not fail")}catch(r){e.equal(r&&r.code,"MODULE_NOT_FOUND","error has correct error code")}e.end()}),test("null main",function(e){var r=path.join(__dirname,"resolver");try{resolve.sync("./null_main",{basedir:r}),e.fail("require.resolve did not fail")}catch(r){e.equal(r&&r.code,"MODULE_NOT_FOUND","error has correct error code")}if(requireResolveSupportsPaths)try{resolve.sync("./null_main",{basedir:r}),e.fail("require.resolve did not fail")}catch(r){e.equal(r&&r.code,"MODULE_NOT_FOUND","error has correct error code")}e.end()}),test("main: false",function(e){var r=path.join(__dirname,"resolver"),s=path.join(r,"false_main");e.equal(resolve.sync("./false_main",{basedir:r}),path.join(s,"index.js"),'`"main": false`: resolves to `index.js`'),requireResolveSupportsPaths&&e.equal(resolve.sync("./false_main",{basedir:r}),require.resolve("./false_main",{paths:[r]}),'`"main": false`: resolve.sync === require.resolve'),e.end()});var stubStatSync=function(e){var r=fs.statSync;try{return fs.statSync=function(){throw new EvalError("Unknown Error")},e()}finally{fs.statSync=r}};test("#79 - re-throw non ENOENT errors from stat",function(e){var r=path.join(__dirname,"resolver");stubStatSync(function(){e.throws(function(){resolve.sync("foo",{basedir:r})},/Unknown Error/)}),e.end()}),test('#52 - incorrectly resolves module-paths like "./someFolder/" when there is a file of the same name',function(e){var r=path.join(__dirname,"resolver"),s=path.join(r,"same_names");e.equal(resolve.sync("./foo",{basedir:s}),path.join(r,"same_names/foo.js")),requireResolveSupportsPaths&&e.equal(resolve.sync("./foo",{basedir:s}),require.resolve("./foo",{paths:[s]}),"./foo: resolve.sync === require.resolve"),e.equal(resolve.sync("./foo/",{basedir:s}),path.join(r,"same_names/foo/index.js")),requireResolveSupportsPaths&&e.equal(resolve.sync("./foo/",{basedir:s}),require.resolve("./foo/",{paths:[s]}),"./foo/: resolve.sync === require.resolve"),e.end()}),test('#211 - incorrectly resolves module-paths like "." when from inside a folder with a sibling file of the same name',function(e){var r=path.join(__dirname,"resolver"),s=path.join(r,"same_names/foo");e.equal(resolve.sync("./",{basedir:s}),path.join(r,"same_names/foo/index.js"),"./"),requireResolveSupportsPaths&&e.equal(resolve.sync("./",{basedir:s}),require.resolve("./",{paths:[s]}),"./: resolve.sync === require.resolve"),e.equal(resolve.sync(".",{basedir:s}),path.join(r,"same_names/foo/index.js"),"."),requireResolveSupportsPaths&&e.equal(resolve.sync(".",{basedir:s}),require.resolve(".",{paths:[s]}),".: resolve.sync === require.resolve",{todo:!0}),e.end()}),test("sync: #121 - treating an existing file as a dir when no basedir",function(e){var r=path.basename(__filename);e.test("sanity check",function(e){e.equal(resolve.sync("./"+r),__filename,"sanity check"),e.equal(resolve.sync("./"+r),require.resolve("./"+r),"sanity check: resolve.sync === require.resolve"),e.end()}),e.test("with a fake directory",function(e){function s(){return resolve.sync("./"+r+"/blah")}e.throws(s,"throws an error");try{s()}catch(s){e.equal(s.code,"MODULE_NOT_FOUND","error code matches require.resolve"),e.equal(s.message,"Cannot find module './"+r+"/blah' from '"+__dirname+"'","can not find nonexistent module")}e.end()}),e.end()}),test("sync dot main",function(e){var r=new Date;e.equal(resolve.sync("./resolver/dot_main"),path.join(__dirname,"resolver/dot_main/index.js"),"./resolver/dot_main"),e.equal(resolve.sync("./resolver/dot_main"),require.resolve("./resolver/dot_main"),"./resolver/dot_main: resolve.sync === require.resolve"),e.ok(new Date-r<50,"resolve.sync timedout"),e.end()}),test("sync dot slash main",function(e){var r=new Date;e.equal(resolve.sync("./resolver/dot_slash_main"),path.join(__dirname,"resolver/dot_slash_main/index.js")),e.equal(resolve.sync("./resolver/dot_slash_main"),require.resolve("./resolver/dot_slash_main"),"./resolver/dot_slash_main: resolve.sync === require.resolve"),e.ok(new Date-r<50,"resolve.sync timedout"),e.end()}),test("not a directory",function(e){var r="./foo";try{resolve.sync("./foo",{basedir:__filename}),e.fail()}catch(r){e.ok(r,"a non-directory errors"),e.equal(r&&r.message,"Cannot find module './foo' from '"+__filename+"'"),e.equal(r&&r.code,"MODULE_NOT_FOUND")}e.end()}),test('non-string "main" field in package.json',function(e){var r=path.join(__dirname,"resolver");try{var s=resolve.sync("./invalid_main",{basedir:r});e.equal(s,void 0,"result should not exist"),e.fail("should not get here")}catch(r){e.ok(r,"errors on non-string main"),e.equal(r.message,"package “invalid_main” `main` must be a string"),e.equal(r.code,"INVALID_PACKAGE_MAIN")}e.end()}),test('non-string "main" field in package.json',function(e){var r=path.join(__dirname,"resolver");try{var s=resolve.sync("./invalid_main",{basedir:r});e.equal(s,void 0,"result should not exist"),e.fail("should not get here")}catch(r){e.ok(r,"errors on non-string main"),e.equal(r.message,"package “invalid_main” `main` must be a string"),e.equal(r.code,"INVALID_PACKAGE_MAIN")}e.end()}),test("browser field in package.json",function(e){var r=path.join(__dirname,"resolver"),s=resolve.sync("./browser_field",{basedir:r,packageFilter:function(e){return e.browser&&(e.main=e.browser,delete e.browser),e}});e.equal(s,path.join(r,"browser_field","b.js")),e.end()}),test("absolute paths",function(e){var r=__filename.slice(0,-path.extname(__filename).length);e.equal(resolve.sync(__filename),__filename,"absolute path to this file resolves"),e.equal(resolve.sync(__filename),require.resolve(__filename),"absolute path to this file: resolve.sync === require.resolve"),e.equal(resolve.sync(r),__filename,"extensionless absolute path to this file resolves"),e.equal(resolve.sync(__filename),require.resolve(__filename),"absolute path to this file: resolve.sync === require.resolve"),e.equal(resolve.sync(__filename,{basedir:process.cwd()}),__filename,"absolute path to this file with a basedir resolves"),requireResolveSupportsPaths&&e.equal(resolve.sync(__filename,{basedir:process.cwd()}),require.resolve(__filename,{paths:[process.cwd()]}),"absolute path to this file + basedir: resolve.sync === require.resolve"),e.equal(resolve.sync(r,{basedir:process.cwd()}),__filename,"extensionless absolute path to this file with a basedir resolves"),requireResolveSupportsPaths&&e.equal(resolve.sync(r,{basedir:process.cwd()}),require.resolve(r,{paths:[process.cwd()]}),"extensionless absolute path to this file + basedir: resolve.sync === require.resolve"),e.end()});var malformedDir=path.join(__dirname,"resolver/malformed_package_json");test("malformed package.json",{skip:!fs.existsSync(malformedDir)},function(e){e.plan(5+(requireResolveSupportsPaths?1:0));var r=malformedDir,s=path.join(r,"index.js");e.equal(resolve.sync("./index.js",{basedir:r}),s,"malformed package.json is silently ignored"),requireResolveSupportsPaths&&e.equal(resolve.sync("./index.js",{basedir:r}),require.resolve("./index.js",{paths:[r]}),"malformed package.json: resolve.sync === require.resolve");var o=resolve.sync("./index.js",{basedir:r,packageFilter:function(r,s,o){e.fail("should not reach here")}});e.equal(o,s,"with packageFilter: malformed package.json is silently ignored");var a=resolve.sync("./index.js",{basedir:r,readPackageSync:function(s,o){e.equal(o,path.join(r,"package.json"),"readPackageSync: `pkgfile` is package.json path");var a=String(s(o));try{return JSON.parse(a)}catch(r){e.ok(r instanceof SyntaxError,"readPackageSync: malformed package.json parses as a syntax error")}}});e.equal(a,s,"with readPackageSync: malformed package.json is silently ignored")});