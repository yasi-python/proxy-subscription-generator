var isCore=require("is-core-module"),fs=require("fs"),path=require("path"),getHomedir=require("./homedir"),caller=require("./caller"),nodeModulesPaths=require("./node-modules-paths"),normalizeOptions=require("./normalize-options"),realpathFS="win32"!==process.platform&&fs.realpathSync&&"function"==typeof fs.realpathSync.native?fs.realpathSync.native:fs.realpathSync,homedir=getHomedir(),defaultPaths=function(){return[path.join(homedir,".node_modules"),path.join(homedir,".node_libraries")]},defaultIsFile=function(e){try{var r=fs.statSync(e,{throwIfNoEntry:!1})}catch(e){if(e&&("ENOENT"===e.code||"ENOTDIR"===e.code))return!1;throw e}return!!r&&(r.isFile()||r.isFIFO())},defaultIsDir=function(e){try{var r=fs.statSync(e,{throwIfNoEntry:!1})}catch(e){if(e&&("ENOENT"===e.code||"ENOTDIR"===e.code))return!1;throw e}return!!r&&r.isDirectory()},defaultRealpathSync=function(e){try{return realpathFS(e)}catch(e){if("ENOENT"!==e.code)throw e}return e},maybeRealpathSync=function(e,r,a){return a&&!1===a.preserveSymlinks?e(r):r},defaultReadPackageSync=function(e,r){var a=e(r);try{return JSON.parse(a)}catch(e){}},getPackageCandidates=function(e,r,a){for(var t=nodeModulesPaths(r,a,e),n=0;n<t.length;n++)t[n]=path.join(t[n],e);return t};module.exports=function(e,r){if("string"!=typeof e)throw new TypeError("Path must be a string.");var a=normalizeOptions(e,r),t=a.isFile||defaultIsFile,n=a.readFileSync||fs.readFileSync,i=a.isDirectory||defaultIsDir,o=a.realpathSync||defaultRealpathSync,c=a.readPackageSync||defaultReadPackageSync;if(a.readFileSync&&a.readPackageSync)throw new TypeError("`readFileSync` and `readPackageSync` are mutually exclusive.");var l=a.packageIterator,s=a.extensions||[".js"],u=!1!==a.includeCoreModules,f=a.basedir||path.dirname(caller()),d=a.filename||f;a.paths=a.paths||defaultPaths();var h=maybeRealpathSync(o,path.resolve(f),a);if(/^(?:\.\.?(?:\/|$)|\/|([A-Za-z]:)?[/\\])/.test(e)){var p=path.resolve(h,e);"."!==e&&".."!==e&&"/"!==e.slice(-1)||(p+="/");var y=g(p)||k(p);if(y)return maybeRealpathSync(o,y,a)}else{if(u&&isCore(e))return e;var m=function(e,r){for(var t=function(){return getPackageCandidates(e,r,a)},n=l?l(e,r,t,a):t(),o=0;o<n.length;o++){var c=n[o];if(i(path.dirname(c))){var s=g(c);if(s)return s;var u=k(c);if(u)return u}}}(e,h);if(m)return maybeRealpathSync(o,m,a)}var v=new Error("Cannot find module '"+e+"' from '"+d+"'");throw v.code="MODULE_NOT_FOUND",v;function g(e){var r=S(path.dirname(e));if(r&&r.dir&&r.pkg&&a.pathFilter){var n=path.relative(r.dir,e),i=a.pathFilter(r.pkg,e,n);i&&(e=path.resolve(r.dir,i))}if(t(e))return e;for(var o=0;o<s.length;o++){var c=e+s[o];if(t(c))return c}}function S(e){if(""!==e&&"/"!==e&&!("win32"===process.platform&&/^\w:[/\\]*$/.test(e)||/[/\\]node_modules[/\\]*$/.test(e))){var r=path.join(maybeRealpathSync(o,e,a),"package.json");if(!t(r))return S(path.dirname(e));var i=c(n,r);return i&&a.packageFilter&&(i=a.packageFilter(i,e)),{pkg:i,dir:e}}}function k(e){var r=path.join(maybeRealpathSync(o,e,a),"/package.json");if(t(r)){try{var i=c(n,r)}catch(e){}if(i&&a.packageFilter&&(i=a.packageFilter(i,e)),i&&i.main){if("string"!=typeof i.main){var l=new TypeError("package “"+i.name+"” `main` must be a string");throw l.code="INVALID_PACKAGE_MAIN",l}"."!==i.main&&"./"!==i.main||(i.main="index");try{var s=g(path.resolve(e,i.main));if(s)return s;var u=k(path.resolve(e,i.main));if(u)return u}catch(e){}}}return g(path.join(e,"/index"))}};