#!/usr/bin/env node
var fs=require("fs"),updateDb=require("update-browserslist-db"),browserslist=require("./"),pkg=require("./package.json"),args=process.argv.slice(2),USAGE='Usage:\n  npx browserslist\n  npx browserslist "QUERIES"\n  npx browserslist --json "QUERIES"\n  npx browserslist --config="path/to/browserlist/file"\n  npx browserslist --coverage "QUERIES"\n  npx browserslist --coverage=US "QUERIES"\n  npx browserslist --coverage=US,RU,global "QUERIES"\n  npx browserslist --env="environment name defined in config"\n  npx browserslist --stats="path/to/browserlist/stats/file"\n  npx browserslist --mobile-to-desktop\n  npx browserslist --ignore-unknown-versions\n';function isArg(e){return args.some(function(s){return s===e||0===s.indexOf(e+"=")})}function error(e){process.stderr.write("browserslist: "+e+"\n"),process.exit(1)}if(isArg("--help")||isArg("-h"))process.stdout.write(pkg.description+".\n\n"+USAGE+"\n");else if(isArg("--version")||isArg("-v"))process.stdout.write("browserslist "+pkg.version+"\n");else if(isArg("--update-db"))process.stdout.write("The --update-db command is deprecated.\nPlease use npx update-browserslist-db@latest instead.\n"),process.stdout.write("Browserslist DB update will still be made.\n"),updateDb(function(e){process.stdout.write(e)});else{for(var queries,areas,browsers,coverage,mode="browsers",opts={},i=0;i<args.length;i++)if("-"===args[i][0]){var arg=args[i].split("="),name=arg[0],value=arg[1];value&&(value=value.replace(/^["']|["']$/g,"")),"--config"===name||"-b"===name?opts.config=value:"--env"===name||"-e"===name?opts.env=value:"--stats"===name||"-s"===name?opts.stats=value:"--coverage"===name||"-c"===name?("json"!==mode&&(mode="coverage"),areas=value?value.split(","):["global"]):"--json"===name?mode="json":"--mobile-to-desktop"===name?opts.mobileToDesktop=!0:"--ignore-unknown-versions"===name?opts.ignoreUnknownVersions=!0:error("Unknown arguments "+args[i]+".\n\n"+USAGE)}else queries=args[i].replace(/^["']|["']$/g,"");try{browsers=browserslist(queries,opts)}catch(e){if("BrowserslistError"!==e.name)throw e;error(e.message)}if("browsers"===mode)browsers.forEach(function(e){process.stdout.write(e+"\n")});else if(areas&&(coverage=areas.map(function(e){var s;"global"!==e?s=e:opts.stats&&(s=JSON.parse(fs.readFileSync(opts.stats)));var r=browserslist.coverage(browsers,s);return[e,Math.round(100*r)/100]}),"coverage"===mode)){var prefix="These browsers account for ";process.stdout.write(prefix),coverage.forEach(function(e,s){var r=e[0],o=e[1],t="globally";r&&"global"!==r?t="in the "+r.toUpperCase():opts.stats&&(t="in custom statistics"),0!==s&&process.stdout.write(prefix.replace(/./g," ")),process.stdout.write(o+"% of all users "+t+"\n")})}if("json"===mode){var data={browsers:browsers};coverage&&(data.coverage=coverage.reduce(function(e,s){return e[s[0]]=s[1],e},{})),process.stdout.write(JSON.stringify(data,null,"  ")+"\n")}}