"use strict";const path=require("path"),win32="win32"===process.platform,{REGEX_BACKSLASH:REGEX_BACKSLASH,REGEX_REMOVE_BACKSLASH:REGEX_REMOVE_BACKSLASH,REGEX_SPECIAL_CHARS:REGEX_SPECIAL_CHARS,REGEX_SPECIAL_CHARS_GLOBAL:REGEX_SPECIAL_CHARS_GLOBAL}=require("./constants");exports.isObject=e=>null!==e&&"object"==typeof e&&!Array.isArray(e),exports.hasRegexChars=e=>REGEX_SPECIAL_CHARS.test(e),exports.isRegexChar=e=>1===e.length&&exports.hasRegexChars(e),exports.escapeRegex=e=>e.replace(REGEX_SPECIAL_CHARS_GLOBAL,"\\$1"),exports.toPosixSlashes=e=>e.replace(REGEX_BACKSLASH,"/"),exports.removeBackslashes=e=>e.replace(REGEX_REMOVE_BACKSLASH,e=>"\\"===e?"":e),exports.supportsLookbehinds=()=>{const e=process.version.slice(1).split(".").map(Number);return 3===e.length&&e[0]>=9||8===e[0]&&e[1]>=10},exports.isWindows=e=>e&&"boolean"==typeof e.windows?e.windows:!0===win32||"\\"===path.sep,exports.escapeLast=(e,s,t)=>{const r=e.lastIndexOf(s,t);return-1===r?e:"\\"===e[r-1]?exports.escapeLast(e,s,r-1):`${e.slice(0,r)}\\${e.slice(r)}`},exports.removePrefix=(e,s={})=>{let t=e;return t.startsWith("./")&&(t=t.slice(2),s.prefix="./"),t},exports.wrapOutput=(e,s={},t={})=>{let r=`${t.contains?"":"^"}(?:${e})${t.contains?"":"$"}`;return!0===s.negated&&(r=`(?:^(?!${r}).*$)`),r};