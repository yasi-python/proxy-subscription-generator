const{AtRule:AtRule,Rule:Rule}=require("postcss");let parser=require("postcss-selector-parser");function parse(e,t){let r;try{parser(e=>{r=e}).processSync(e)}catch(r){throw e.includes(":")?t?t.error("Missed semicolon"):r:t?t.error(r.message):r}return r.at(0)}function interpolateAmpInSelector(e,t){let r=!1;return e.each(e=>{if("nesting"===e.type){let o=t.clone({});"&"!==e.value?e.replaceWith(parse(e.value.replace("&",o.toString()))):e.replaceWith(o),r=!0}else"nodes"in e&&e.nodes&&interpolateAmpInSelector(e,t)&&(r=!0)}),r}function mergeSelectors(e,t){let r=[];return e.selectors.forEach(o=>{let l=parse(o,e);t.selectors.forEach(e=>{if(!e)return;let o=parse(e,t);interpolateAmpInSelector(o,l)||(o.prepend(parser.combinator({value:" "})),o.prepend(l.clone({}))),r.push(o.toString())})}),r}function breakOut(e,t){let r=e.prev();for(t.after(e);r&&"comment"===r.type;){let e=r.prev();t.after(r),r=e}return e}function createFnAtruleChilds(e){return function t(r,o,l,n=l){let s=[];if(o.each(a=>{"rule"===a.type&&l?n&&(a.selectors=mergeSelectors(r,a)):"atrule"===a.type&&a.nodes?e[a.name]?t(r,a,n):!1!==o[rootRuleMergeSel]&&s.push(a):s.push(a)}),l&&s.length){let e=r.clone({nodes:[]});for(let t of s)e.append(t);o.prepend(e)}}}function pickDeclarations(e,t,r){let o=new Rule({nodes:[],selector:e});return o.append(t),r.after(o),o}function atruleNames(e,t){let r={};for(let t of e)r[t]=!0;if(t)for(let e of t)r[e.replace(/^@/,"")]=!0;return r}function parseRootRuleParams(e){let t=(e=e.trim()).match(/^\((.*)\)$/);if(!t)return{selector:e,type:"basic"};let r=t[1].match(/^(with(?:out)?):(.+)$/);if(r){let e="with"===r[1],t=Object.fromEntries(r[2].trim().split(/\s+/).map(e=>[e,!0]));if(e&&t.all)return{type:"noop"};let o=e=>!!t[e];return t.all?o=()=>!0:e&&(o=e=>"all"!==e&&!t[e]),{escapes:o,type:"withrules"}}return{type:"unknown"}}function getAncestorRules(e){let t=[],r=e.parent;for(;r&&r instanceof AtRule;)t.push(r),r=r.parent;return t}function unwrapRootRule(e){let t=e[rootRuleEscapes];if(t){let r,o,l,n,s=e.nodes,a=-1,u=getAncestorRules(e);if(u.forEach((e,s)=>{if(t(e.name))r=e,a=s,l=n;else{let t=n;n=e.clone({nodes:[]}),t&&n.append(t),o=o||n}}),r?l?(o.append(s),r.after(l)):r.after(s):e.after(s),e.next()&&r){let t;u.slice(0,a+1).forEach((r,o,l)=>{let n=t;t=r.clone({nodes:[]}),n&&t.append(n);let s=[],a=(l[o-1]||e).next();for(;a;)s.push(a),a=a.next();t.append(s)}),t&&(l||s[s.length-1]).after(t)}}else e.after(e.nodes);e.remove()}const rootRuleMergeSel=Symbol("rootRuleMergeSel"),rootRuleEscapes=Symbol("rootRuleEscapes");function normalizeRootRule(e){let{params:t}=e,{escapes:r,selector:o,type:l}=parseRootRuleParams(t);if("unknown"===l)throw e.error(`Unknown @${e.name} parameter ${JSON.stringify(t)}`);if("basic"===l&&o){let t=new Rule({nodes:e.nodes,selector:o});e.removeAll(),e.append(t)}e[rootRuleEscapes]=r,e[rootRuleMergeSel]=r?!r("all"):"noop"===l}const hasRootRule=Symbol("hasRootRule");module.exports=(e={})=>{let t=atruleNames(["media","supports","layer","container","starting-style"],e.bubble),r=createFnAtruleChilds(t),o=atruleNames(["document","font-face","keyframes","-webkit-keyframes","-moz-keyframes"],e.unwrap),l=(e.rootRuleName||"at-root").replace(/^@/,""),n=e.preserveEmpty;return{Once(e){e.walkAtRules(l,t=>{normalizeRootRule(t),e[hasRootRule]=!0})},postcssPlugin:"postcss-nested",RootExit(e){e[hasRootRule]&&(e.walkAtRules(l,unwrapRootRule),e[hasRootRule]=!1)},Rule(e){let s=!1,a=e,u=!1,p=[];e.each(n=>{"rule"===n.type?(p.length&&(a=pickDeclarations(e.selector,p,a),p=[]),u=!0,s=!0,n.selectors=mergeSelectors(e,n),a=breakOut(n,a)):"atrule"===n.type?(p.length&&(a=pickDeclarations(e.selector,p,a),p=[]),n.name===l?(s=!0,r(e,n,!0,n[rootRuleMergeSel]),a=breakOut(n,a)):t[n.name]?(u=!0,s=!0,r(e,n,!0),a=breakOut(n,a)):o[n.name]?(u=!0,s=!0,r(e,n,!1),a=breakOut(n,a)):u&&p.push(n)):"decl"===n.type&&u&&p.push(n)}),p.length&&(a=pickDeclarations(e.selector,p,a)),s&&!0!==n&&(e.raws.semicolon=!0,0===e.nodes.length&&e.remove())}}},module.exports.postcss=!0;