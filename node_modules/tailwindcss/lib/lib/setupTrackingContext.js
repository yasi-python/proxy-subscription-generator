"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function(){return setupTrackingContext}});const _fs=_interop_require_default(require("fs")),_quicklru=_interop_require_default(require("@alloc/quick-lru")),_hashConfig=_interop_require_default(require("../util/hashConfig")),_resolveconfig=_interop_require_default(require("../public/resolve-config")),_resolveConfigPath=_interop_require_default(require("../util/resolveConfigPath")),_setupContextUtils=require("./setupContextUtils"),_parseDependency=_interop_require_default(require("../util/parseDependency")),_validateConfig=require("../util/validateConfig.js"),_content=require("./content.js"),_loadconfig=require("../lib/load-config"),_getModuleDependencies=_interop_require_default(require("./getModuleDependencies"));function _interop_require_default(e){return e&&e.__esModule?e:{default:e}}let configPathCache=new _quicklru.default({maxSize:100}),candidateFilesCache=new WeakMap;function getCandidateFiles(e,t){if(candidateFilesCache.has(e))return candidateFilesCache.get(e);let i=(0,_content.parseCandidateFiles)(e,t);return candidateFilesCache.set(e,i).get(e)}function getTailwindConfig(e){let t=(0,_resolveConfigPath.default)(e);if(null!==t){let[e,i,n,r]=configPathCache.get(t)||[],l=(0,_getModuleDependencies.default)(t),o=!1,a=new Map;for(let e of l){let t=_fs.default.statSync(e).mtimeMs;a.set(e,t),(!r||!r.has(e)||t>r.get(e))&&(o=!0)}if(!o)return[e,t,i,n];for(let e of l)delete require.cache[e];let u=(0,_validateConfig.validateConfig)((0,_resolveconfig.default)((0,_loadconfig.loadConfig)(t))),f=(0,_hashConfig.default)(u);return configPathCache.set(t,[u,f,l,a]),[u,t,f,l]}var i,n;let r=(0,_resolveconfig.default)(null!==(n=null!==(i=null==e?void 0:e.config)&&void 0!==i?i:e)&&void 0!==n?n:{});return r=(0,_validateConfig.validateConfig)(r),[r,null,(0,_hashConfig.default)(r),[]]}function setupTrackingContext(e){return({tailwindDirectives:t,registerDependency:i})=>(n,r)=>{let[l,o,a,u]=getTailwindConfig(e),f=new Set(u);if(t.size>0){f.add(r.opts.from);for(let e of r.messages)"dependency"===e.type&&f.add(e.file)}let[d,,s]=(0,_setupContextUtils.getContext)(n,r,l,o,a,f),c=(0,_setupContextUtils.getFileModifiedMap)(d),_=getCandidateFiles(d,l);if(t.size>0){for(let e of _)for(let t of(0,_parseDependency.default)(e))i(t);let[e,t]=(0,_content.resolvedChangedContent)(d,_,c);for(let t of e)d.changedContent.push(t);for(let[e,i]of t.entries())s.set(e,i)}for(let e of u)i({type:"dependency",file:e});for(let[e,t]of s.entries())c.set(e,t);return d}}