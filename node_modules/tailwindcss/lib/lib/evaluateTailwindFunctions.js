"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function(){return _default}});const _dlv=_interop_require_default(require("dlv")),_didyoumean=_interop_require_default(require("didyoumean")),_transformThemeValue=_interop_require_default(require("../util/transformThemeValue")),_index=_interop_require_default(require("../value-parser/index")),_normalizeScreens=require("../util/normalizeScreens"),_buildMediaQuery=_interop_require_default(require("../util/buildMediaQuery")),_toPath=require("../util/toPath"),_withAlphaVariable=require("../util/withAlphaVariable"),_pluginUtils=require("../util/pluginUtils"),_log=_interop_require_default(require("../util/log"));function _interop_require_default(e){return e&&e.__esModule?e:{default:e}}function isObject(e){return"object"==typeof e&&null!==e}function findClosestExistingPath(e,t){let i=(0,_toPath.toPath)(t);do{if(i.pop(),void 0!==(0,_dlv.default)(e,i))break}while(i.length);return i.length?i:void 0}function pathToString(e){return"string"==typeof e?e:e.reduce((e,t,i)=>t.includes(".")?`${e}[${t}]`:0===i?t:`${e}.${t}`,"")}function list(e){return e.map(e=>`'${e}'`).join(", ")}function listKeys(e){return list(Object.keys(e))}function validatePath(e,t,i,r={}){const l=Array.isArray(t)?pathToString(t):t.replace(/^['"]+|['"]+$/g,""),n=Array.isArray(t)?t:(0,_toPath.toPath)(l),a=(0,_dlv.default)(e.theme,n,i);if(void 0===a){let t=`'${l}' does not exist in your theme config.`;const i=n.slice(0,-1),r=(0,_dlv.default)(e.theme,i);if(isObject(r)){const l=Object.keys(r).filter(t=>validatePath(e,[...i,t]).isValid),a=(0,_didyoumean.default)(n[n.length-1],l);a?t+=` Did you mean '${pathToString([...i,a])}'?`:l.length>0&&(t+=` '${pathToString(i)}' has the following valid keys: ${list(l)}`)}else{const i=findClosestExistingPath(e.theme,l);if(i){const r=(0,_dlv.default)(e.theme,i);isObject(r)?t+=` '${pathToString(i)}' has the following keys: ${listKeys(r)}`:t+=` '${pathToString(i)}' is not an object.`}else t+=` Your theme has the following top-level keys: ${listKeys(e.theme)}`}return{isValid:!1,error:t}}if(!("string"==typeof a||"number"==typeof a||"function"==typeof a||a instanceof String||a instanceof Number||Array.isArray(a))){let t=`'${l}' was found but does not resolve to a string.`;if(isObject(a)){let i=Object.keys(a).filter(t=>validatePath(e,[...n,t]).isValid);i.length&&(t+=` Did you mean something like '${pathToString([...n,i[0]])}'?`)}return{isValid:!1,error:t}}const[o]=n;return{isValid:!0,value:(0,_transformThemeValue.default)(o)(a,r)}}function extractArgs(e,t,i){t=t.map(t=>resolveVNode(e,t,i));let r=[""];for(let e of t)"div"===e.type&&","===e.value?r.push(""):r[r.length-1]+=_index.default.stringify(e);return r}function resolveVNode(e,t,i){if("function"===t.type&&void 0!==i[t.value]){let r=extractArgs(e,t.nodes,i);t.type="word",t.value=i[t.value](e,...r)}return t}function resolveFunctions(e,t,i){return Object.keys(i).some(e=>t.includes(`${e}(`))?(0,_index.default)(t).walk(t=>{resolveVNode(e,t,i)}).toString():t}let nodeTypePropertyMap={atrule:"params",decl:"value"};function*toPaths(e){let t,i=(e=e.replace(/^['"]+|['"]+$/g,"")).match(/^([^\s]+)(?![^\[]*\])(?:\s*\/\s*([^\/\s]+))$/);yield[e,void 0],i&&(e=i[1],t=i[2],yield[e,t])}function resolvePath(e,t,i){const r=Array.from(toPaths(t)).map(([t,r])=>Object.assign(validatePath(e,t,i,{opacityValue:r}),{resolvedPath:t,alpha:r}));var l;return null!==(l=r.find(e=>e.isValid))&&void 0!==l?l:r[0]}function _default(e){let t=e.tailwindConfig,i={theme:(i,r,...l)=>{let{isValid:n,value:a,error:o,alpha:u}=resolvePath(t,r,l.length?l:void 0);if(!n){var s;let t=i.parent,r=null===(s=null==t?void 0:t.raws.tailwind)||void 0===s?void 0:s.candidate;if(t&&void 0!==r)return e.markInvalidUtilityNode(t),t.remove(),void _log.default.warn("invalid-theme-key-in-class",[`The utility \`${r}\` contains an invalid theme value and was not generated.`]);throw i.error(o)}let d=(0,_pluginUtils.parseColorFormat)(a);return(void 0!==u||void 0!==d&&"function"==typeof d)&&(void 0===u&&(u=1),a=(0,_withAlphaVariable.withAlphaValue)(d,u,d)),a},screen:(e,i)=>{i=i.replace(/^['"]+/g,"").replace(/['"]+$/g,"");let r=(0,_normalizeScreens.normalizeScreens)(t.theme.screens).find(({name:e})=>e===i);if(!r)throw e.error(`The '${i}' screen does not exist in your theme.`);return(0,_buildMediaQuery.default)(r)}};return e=>{e.walk(e=>{let t=nodeTypePropertyMap[e.type];void 0!==t&&(e[t]=resolveFunctions(e,e[t],i))})}}