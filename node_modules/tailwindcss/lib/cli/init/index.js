"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"init",{enumerable:!0,get:function(){return init}});const _fs=_interop_require_default(require("fs")),_path=_interop_require_default(require("path"));function _interop_require_default(e){return e&&e.__esModule?e:{default:e}}function isESM(){const e=_path.default.resolve("./package.json");try{let t=JSON.parse(_fs.default.readFileSync(e,"utf8"));return t.type&&"module"===t.type}catch(e){return!1}}function init(e){let t=[],s=e["--ts"]||e["--esm"]||isESM(),l=e["--ts"]?"ts":s?"js":"cjs",a=e["--ts"]?"ts":"js";var i;let f=_path.default.resolve(null!==(i=e._[1])&&void 0!==i?i:`./tailwind.config.${a}`);if(_fs.default.existsSync(f))t.push(`${_path.default.basename(f)} already exists.`);else{let s=_fs.default.readFileSync(e["--full"]?_path.default.resolve(__dirname,"../../../stubs/config.full.js"):_path.default.resolve(__dirname,"../../../stubs/config.simple.js"),"utf8"),a=_fs.default.readFileSync(_path.default.resolve(__dirname,`../../../stubs/tailwind.config.${l}`),"utf8");s=s.replace("../colors","tailwindcss/colors"),a=a.replace("__CONFIG__",s.replace("module.exports =","").trim()).trim()+"\n\n",_fs.default.writeFileSync(f,a,"utf8"),t.push(`Created Tailwind CSS config file: ${_path.default.basename(f)}`)}if(e["--postcss"]){let e=_path.default.resolve("./postcss.config.js");if(_fs.default.existsSync(e))t.push(`${_path.default.basename(e)} already exists.`);else{let l=_fs.default.readFileSync(s?_path.default.resolve(__dirname,"../../../stubs/postcss.config.js"):_path.default.resolve(__dirname,"../../../stubs/postcss.config.cjs"),"utf8");_fs.default.writeFileSync(e,l,"utf8"),t.push(`Created PostCSS config file: ${_path.default.basename(e)}`)}}if(t.length>0){console.log();for(let e of t)console.log(e)}}