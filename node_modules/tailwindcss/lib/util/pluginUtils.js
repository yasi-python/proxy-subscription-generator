"use strict";function _export(e,a){for(var t in a)Object.defineProperty(e,t,{enumerable:!0,get:a[t]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{updateAllClasses:function(){return updateAllClasses},asValue:function(){return asValue},parseColorFormat:function(){return parseColorFormat},asColor:function(){return asColor},asLookupValue:function(){return asLookupValue},typeMap:function(){return typeMap},coerceValue:function(){return coerceValue},getMatchingTypes:function(){return getMatchingTypes}});const _escapeCommas=_interop_require_default(require("./escapeCommas")),_withAlphaVariable=require("./withAlphaVariable"),_dataTypes=require("./dataTypes"),_negateValue=_interop_require_default(require("./negateValue")),_validateFormalSyntax=require("./validateFormalSyntax"),_featureFlags=require("../featureFlags.js");function _interop_require_default(e){return e&&e.__esModule?e:{default:e}}function updateAllClasses(e,a){e.walkClasses(e=>{e.value=a(e.value),e.raws&&e.raws.value&&(e.raws.value=(0,_escapeCommas.default)(e.raws.value))})}function resolveArbitraryValue(e,a){if(!isArbitraryValue(e))return;let t=e.slice(1,-1);return a(t)?(0,_dataTypes.normalize)(t):void 0}function asNegativeValue(e,a={},t){let i=a[e];if(void 0!==i)return(0,_negateValue.default)(i);if(isArbitraryValue(e)){let a=resolveArbitraryValue(e,t);if(void 0===a)return;return(0,_negateValue.default)(a)}}function asValue(e,a={},{validate:t=()=>!0}={}){var i;let r=null===(i=a.values)||void 0===i?void 0:i[e];return void 0!==r?r:a.supportsNegativeValues&&e.startsWith("-")?asNegativeValue(e.slice(1),a.values,t):resolveArbitraryValue(e,t)}function isArbitraryValue(e){return e.startsWith("[")&&e.endsWith("]")}function splitUtilityModifier(e){let a=e.lastIndexOf("/"),t=e.lastIndexOf("[",a),i=e.indexOf("]",a);return"]"===e[a-1]||"["===e[a+1]||-1!==t&&-1!==i&&t<a&&a<i&&(a=e.lastIndexOf("/",t)),-1===a||a===e.length-1||isArbitraryValue(e)&&!e.includes("]/[")?[e,void 0]:[e.slice(0,a),e.slice(a+1)]}function parseColorFormat(e){if("string"==typeof e&&e.includes("<alpha-value>")){let a=e;return({opacityValue:e=1})=>a.replace(/<alpha-value>/g,e)}return e}function unwrapArbitraryModifier(e){return(0,_dataTypes.normalize)(e.slice(1,-1))}function asColor(e,a={},{tailwindConfig:t={}}={}){var i,r;if(void 0!==(null===(i=a.values)||void 0===i?void 0:i[e]))return parseColorFormat(null===(r=a.values)||void 0===r?void 0:r[e]);let[l,u]=splitUtilityModifier(e);if(void 0!==u){var s,n,o,d;let e=null!==(d=null===(s=a.values)||void 0===s?void 0:s[l])&&void 0!==d?d:isArbitraryValue(l)?l.slice(1,-1):void 0;if(void 0===e)return;if(e=parseColorFormat(e),isArbitraryValue(u))return(0,_withAlphaVariable.withAlphaValue)(e,unwrapArbitraryModifier(u));if(void 0===(null===(n=t.theme)||void 0===n||null===(o=n.opacity)||void 0===o?void 0:o[u]))return;return(0,_withAlphaVariable.withAlphaValue)(e,t.theme.opacity[u])}return asValue(e,a,{validate:_dataTypes.color})}function asLookupValue(e,a={}){var t;return null===(t=a.values)||void 0===t?void 0:t[e]}function guess(e){return(a,t)=>asValue(a,t,{validate:e})}let typeMap={any:asValue,color:asColor,url:guess(_dataTypes.url),image:guess(_dataTypes.image),length:guess(_dataTypes.length),percentage:guess(_dataTypes.percentage),position:guess(_dataTypes.position),lookup:asLookupValue,"generic-name":guess(_dataTypes.genericName),"family-name":guess(_dataTypes.familyName),number:guess(_dataTypes.number),"line-width":guess(_dataTypes.lineWidth),"absolute-size":guess(_dataTypes.absoluteSize),"relative-size":guess(_dataTypes.relativeSize),shadow:guess(_dataTypes.shadow),size:guess(_validateFormalSyntax.backgroundSize)},supportedTypes=Object.keys(typeMap);function splitAtFirst(e,a){let t=e.indexOf(a);return-1===t?[void 0,e]:[e.slice(0,t),e.slice(t+1)]}function coerceValue(e,a,t,i){if(t.values&&a in t.values)for(let{type:r}of null!=e?e:[]){let e=typeMap[r](a,t,{tailwindConfig:i});if(void 0!==e)return[e,r,null]}if(isArbitraryValue(a)){let e=a.slice(1,-1),[i,r]=splitAtFirst(e,":");if(/^[\w-_]+$/g.test(i)){if(void 0!==i&&!supportedTypes.includes(i))return[]}else r=e;if(r.length>0&&supportedTypes.includes(i))return[asValue(`[${r}]`,t),i,null]}let r=getMatchingTypes(e,a,t,i);for(let e of r)return e;return[]}function*getMatchingTypes(e,a,t,i){let r=(0,_featureFlags.flagEnabled)(i,"generalizedModifiers"),[l,u]=splitUtilityModifier(a);if(r&&null!=t.modifiers&&("any"===t.modifiers||"object"==typeof t.modifiers&&(u&&isArbitraryValue(u)||u in t.modifiers))||(l=a,u=void 0),void 0!==u&&""===l&&(l="DEFAULT"),void 0!==u&&"object"==typeof t.modifiers){var s,n;let e=null!==(n=null===(s=t.modifiers)||void 0===s?void 0:s[u])&&void 0!==n?n:null;null!==e?u=e:isArbitraryValue(u)&&(u=unwrapArbitraryModifier(u))}for(let{type:a}of null!=e?e:[]){let e=typeMap[a](l,t,{tailwindConfig:i});void 0!==e&&(yield[e,a,null!=u?u:null])}}