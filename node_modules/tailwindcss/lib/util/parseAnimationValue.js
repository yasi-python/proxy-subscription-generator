"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function(){return parseAnimationValue}});const DIRECTIONS=new Set(["normal","reverse","alternate","alternate-reverse"]),PLAY_STATES=new Set(["running","paused"]),FILL_MODES=new Set(["none","forwards","backwards","both"]),ITERATION_COUNTS=new Set(["infinite"]),TIMINGS=new Set(["linear","ease","ease-in","ease-out","ease-in-out","step-start","step-end"]),TIMING_FNS=["cubic-bezier","steps"],COMMA=/\,(?![^(]*\))/g,SPACE=/\ +(?![^(]*\))/g,TIME=/^(-?[\d.]+m?s)$/,DIGIT=/^(\d+)$/;function parseAnimationValue(e){return e.split(COMMA).map(e=>{let t=e.trim(),a={value:t},n=t.split(SPACE),s=new Set;for(let e of n)!s.has("DIRECTIONS")&&DIRECTIONS.has(e)?(a.direction=e,s.add("DIRECTIONS")):!s.has("PLAY_STATES")&&PLAY_STATES.has(e)?(a.playState=e,s.add("PLAY_STATES")):!s.has("FILL_MODES")&&FILL_MODES.has(e)?(a.fillMode=e,s.add("FILL_MODES")):s.has("ITERATION_COUNTS")||!ITERATION_COUNTS.has(e)&&!DIGIT.test(e)?!s.has("TIMING_FUNCTION")&&TIMINGS.has(e)||!s.has("TIMING_FUNCTION")&&TIMING_FNS.some(t=>e.startsWith(`${t}(`))?(a.timingFunction=e,s.add("TIMING_FUNCTION")):!s.has("DURATION")&&TIME.test(e)?(a.duration=e,s.add("DURATION")):!s.has("DELAY")&&TIME.test(e)?(a.delay=e,s.add("DELAY")):s.has("NAME")?(a.unknown||(a.unknown=[]),a.unknown.push(e)):(a.name=e,s.add("NAME")):(a.iterationCount=e,s.add("ITERATION_COUNTS"));return a})}