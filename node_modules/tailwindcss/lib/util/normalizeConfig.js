"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"normalizeConfig",{enumerable:!0,get:function(){return normalizeConfig}});const _featureFlags=require("../featureFlags"),_log=_interop_require_wildcard(require("./log"));function _getRequireWildcardCache(t){if("function"!=typeof WeakMap)return null;var e=new WeakMap,n=new WeakMap;return(_getRequireWildcardCache=function(t){return t?n:e})(t)}function _interop_require_wildcard(t,e){if(!e&&t&&t.__esModule)return t;if(null===t||"object"!=typeof t&&"function"!=typeof t)return{default:t};var n=_getRequireWildcardCache(e);if(n&&n.has(t))return n.get(t);var r={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in t)if("default"!==i&&Object.prototype.hasOwnProperty.call(t,i)){var l=o?Object.getOwnPropertyDescriptor(t,i):null;l&&(l.get||l.set)?Object.defineProperty(r,i,l):r[i]=t[i]}return r.default=t,n&&n.set(t,r),r}function normalizeConfig(t){var e;((()=>{if(t.purge)return!1;if(!t.content)return!1;if(!Array.isArray(t.content)&&("object"!=typeof t.content||null===t.content))return!1;if(Array.isArray(t.content))return t.content.every(t=>"string"==typeof t||"string"==typeof(null==t?void 0:t.raw)&&(!(null==t?void 0:t.extension)||"string"==typeof(null==t?void 0:t.extension)));if("object"==typeof t.content&&null!==t.content){if(Object.keys(t.content).some(t=>!["files","relative","extract","transform"].includes(t)))return!1;if(Array.isArray(t.content.files)){if(!t.content.files.every(t=>"string"==typeof t||"string"==typeof(null==t?void 0:t.raw)&&(!(null==t?void 0:t.extension)||"string"==typeof(null==t?void 0:t.extension))))return!1;if("object"==typeof t.content.extract){for(let e of Object.values(t.content.extract))if("function"!=typeof e)return!1}else if(void 0!==t.content.extract&&"function"!=typeof t.content.extract)return!1;if("object"==typeof t.content.transform){for(let e of Object.values(t.content.transform))if("function"!=typeof e)return!1}else if(void 0!==t.content.transform&&"function"!=typeof t.content.transform)return!1;if("boolean"!=typeof t.content.relative&&void 0!==t.content.relative)return!1}return!0}return!1})()||_log.default.warn("purge-deprecation",["The `purge`/`content` options have changed in Tailwind CSS v3.0.","Update your configuration file to eliminate this warning.","https://tailwindcss.com/docs/upgrade-guide#configure-content-sources"]),t.safelist=(()=>{var e;let{content:n,purge:r,safelist:o}=t;return Array.isArray(o)?o:Array.isArray(null==n?void 0:n.safelist)?n.safelist:Array.isArray(null==r?void 0:r.safelist)?r.safelist:Array.isArray(null==r||null===(e=r.options)||void 0===e?void 0:e.safelist)?r.options.safelist:[]})(),t.blocklist=(()=>{let{blocklist:e}=t;if(Array.isArray(e)){if(e.every(t=>"string"==typeof t))return e;_log.default.warn("blocklist-invalid",["The `blocklist` option must be an array of strings.","https://tailwindcss.com/docs/content-configuration#discarding-classes"])}return[]})(),"function"==typeof t.prefix)?(_log.default.warn("prefix-function",["As of Tailwind CSS v3.0, `prefix` cannot be a function.","Update `prefix` in your configuration to be a string to eliminate this warning.","https://tailwindcss.com/docs/upgrade-guide#prefix-cannot-be-a-function"]),t.prefix=""):t.prefix=null!==(e=t.prefix)&&void 0!==e?e:"";t.content={relative:(()=>{let{content:e}=t;return(null==e?void 0:e.relative)?e.relative:(0,_featureFlags.flagEnabled)(t,"relativeContentPathsByDefault")})(),files:(()=>{let{content:e,purge:n}=t;return Array.isArray(n)?n:Array.isArray(null==n?void 0:n.content)?n.content:Array.isArray(e)?e:Array.isArray(null==e?void 0:e.content)?e.content:Array.isArray(null==e?void 0:e.files)?e.files:[]})(),extract:(()=>{let e=(null===(n=t.purge)||void 0===n?void 0:n.extract)?t.purge.extract:(null===(r=t.content)||void 0===r?void 0:r.extract)?t.content.extract:(null===(o=t.purge)||void 0===o||null===(i=o.extract)||void 0===i?void 0:i.DEFAULT)?t.purge.extract.DEFAULT:(null===(l=t.content)||void 0===l||null===(a=l.extract)||void 0===a?void 0:a.DEFAULT)?t.content.extract.DEFAULT:(null===(u=t.purge)||void 0===u||null===(c=u.options)||void 0===c?void 0:c.extractors)?t.purge.options.extractors:(null===(f=t.content)||void 0===f||null===(s=f.options)||void 0===s?void 0:s.extractors)?t.content.options.extractors:{};var n,r,o,i,l,a,u,c,f,s;let d={},p=(()=>{var e,n,r,o;return(null===(e=t.purge)||void 0===e||null===(n=e.options)||void 0===n?void 0:n.defaultExtractor)?t.purge.options.defaultExtractor:(null===(r=t.content)||void 0===r||null===(o=r.options)||void 0===o?void 0:o.defaultExtractor)?t.content.options.defaultExtractor:void 0})();if(void 0!==p&&(d.DEFAULT=p),"function"==typeof e)d.DEFAULT=e;else if(Array.isArray(e))for(let{extensions:t,extractor:n}of null!=e?e:[])for(let e of t)d[e]=n;else"object"==typeof e&&null!==e&&Object.assign(d,e);return d})(),transform:(()=>{let e=(null===(n=t.purge)||void 0===n?void 0:n.transform)?t.purge.transform:(null===(r=t.content)||void 0===r?void 0:r.transform)?t.content.transform:(null===(o=t.purge)||void 0===o||null===(i=o.transform)||void 0===i?void 0:i.DEFAULT)?t.purge.transform.DEFAULT:(null===(l=t.content)||void 0===l||null===(a=l.transform)||void 0===a?void 0:a.DEFAULT)?t.content.transform.DEFAULT:{};var n,r,o,i,l,a;let u={};return"function"==typeof e?u.DEFAULT=e:"object"==typeof e&&null!==e&&Object.assign(u,e),u})()};for(let e of t.content.files)if("string"==typeof e&&/{([^,]*?)}/g.test(e)){_log.default.warn("invalid-glob-braces",[`The glob pattern ${(0,_log.dim)(e)} in your Tailwind CSS configuration is invalid.`,`Update it to ${(0,_log.dim)(e.replace(/{([^,]*?)}/g,"$1"))} to silence this warning.`]);break}return t}