import colors from"picocolors";import log from"./util/log";let defaults={optimizeUniversalDefaults:!1,generalizedModifiers:!0,disableColorOpacityUtilitiesByDefault:!1,relativeContentPathsByDefault:!1},featureFlags={future:["hoverOnlyWhenSupported","respectDefaultRingColorOpacity","disableColorOpacityUtilitiesByDefault","relativeContentPathsByDefault"],experimental:["optimizeUniversalDefaults","generalizedModifiers"]};export function flagEnabled(e,a){return featureFlags.future.includes(a)?"all"===e.future||(e?.future?.[a]??defaults[a]??!1):!!featureFlags.experimental.includes(a)&&("all"===e.experimental||(e?.experimental?.[a]??defaults[a]??!1))}function experimentalFlagsEnabled(e){return"all"===e.experimental?featureFlags.experimental:Object.keys(e?.experimental??{}).filter(a=>featureFlags.experimental.includes(a)&&e.experimental[a])}export function issueFlagNotices(e){if(void 0===process.env.JEST_WORKER_ID&&experimentalFlagsEnabled(e).length>0){let a=experimentalFlagsEnabled(e).map(e=>colors.yellow(e)).join(", ");log.warn("experimental-flags-enabled",[`You have enabled experimental features: ${a}`,"Experimental features in Tailwind CSS are not covered by semver, may introduce breaking changes, and can change at any time."])}}export default featureFlags;