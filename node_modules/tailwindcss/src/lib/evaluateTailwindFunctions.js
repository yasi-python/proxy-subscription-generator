import dlv from"dlv";import didYouMean from"didyoumean";import transformThemeValue from"../util/transformThemeValue";import parseValue from"../value-parser/index";import{normalizeScreens}from"../util/normalizeScreens";import buildMediaQuery from"../util/buildMediaQuery";import{toPath}from"../util/toPath";import{withAlphaValue}from"../util/withAlphaVariable";import{parseColorFormat}from"../util/pluginUtils";import log from"../util/log";function isObject(e){return"object"==typeof e&&null!==e}function findClosestExistingPath(e,t){let i=toPath(t);do{if(i.pop(),void 0!==dlv(e,i))break}while(i.length);return i.length?i:void 0}function pathToString(e){return"string"==typeof e?e:e.reduce((e,t,i)=>t.includes(".")?`${e}[${t}]`:0===i?t:`${e}.${t}`,"")}function list(e){return e.map(e=>`'${e}'`).join(", ")}function listKeys(e){return list(Object.keys(e))}function validatePath(e,t,i,r={}){const o=Array.isArray(t)?pathToString(t):t.replace(/^['"]+|['"]+$/g,""),n=Array.isArray(t)?t:toPath(o),a=dlv(e.theme,n,i);if(void 0===a){let t=`'${o}' does not exist in your theme config.`;const i=n.slice(0,-1),r=dlv(e.theme,i);if(isObject(r)){const o=Object.keys(r).filter(t=>validatePath(e,[...i,t]).isValid),a=didYouMean(n[n.length-1],o);a?t+=` Did you mean '${pathToString([...i,a])}'?`:o.length>0&&(t+=` '${pathToString(i)}' has the following valid keys: ${list(o)}`)}else{const i=findClosestExistingPath(e.theme,o);if(i){const r=dlv(e.theme,i);isObject(r)?t+=` '${pathToString(i)}' has the following keys: ${listKeys(r)}`:t+=` '${pathToString(i)}' is not an object.`}else t+=` Your theme has the following top-level keys: ${listKeys(e.theme)}`}return{isValid:!1,error:t}}if(!("string"==typeof a||"number"==typeof a||"function"==typeof a||a instanceof String||a instanceof Number||Array.isArray(a))){let t=`'${o}' was found but does not resolve to a string.`;if(isObject(a)){let i=Object.keys(a).filter(t=>validatePath(e,[...n,t]).isValid);i.length&&(t+=` Did you mean something like '${pathToString([...n,i[0]])}'?`)}return{isValid:!1,error:t}}const[l]=n;return{isValid:!0,value:transformThemeValue(l)(a,r)}}function extractArgs(e,t,i){t=t.map(t=>resolveVNode(e,t,i));let r=[""];for(let e of t)"div"===e.type&&","===e.value?r.push(""):r[r.length-1]+=parseValue.stringify(e);return r}function resolveVNode(e,t,i){if("function"===t.type&&void 0!==i[t.value]){let r=extractArgs(e,t.nodes,i);t.type="word",t.value=i[t.value](e,...r)}return t}function resolveFunctions(e,t,i){return Object.keys(i).some(e=>t.includes(`${e}(`))?parseValue(t).walk(t=>{resolveVNode(e,t,i)}).toString():t}let nodeTypePropertyMap={atrule:"params",decl:"value"};function*toPaths(e){let t,i=(e=e.replace(/^['"]+|['"]+$/g,"")).match(/^([^\s]+)(?![^\[]*\])(?:\s*\/\s*([^\/\s]+))$/);yield[e,void 0],i&&(e=i[1],t=i[2],yield[e,t])}function resolvePath(e,t,i){const r=Array.from(toPaths(t)).map(([t,r])=>Object.assign(validatePath(e,t,i,{opacityValue:r}),{resolvedPath:t,alpha:r}));return r.find(e=>e.isValid)??r[0]}export default function(e){let t=e.tailwindConfig,i={theme:(i,r,...o)=>{let{isValid:n,value:a,error:l,alpha:s}=resolvePath(t,r,o.length?o:void 0);if(!n){let t=i.parent,r=t?.raws.tailwind?.candidate;if(t&&void 0!==r)return e.markInvalidUtilityNode(t),t.remove(),void log.warn("invalid-theme-key-in-class",[`The utility \`${r}\` contains an invalid theme value and was not generated.`]);throw i.error(l)}let u=parseColorFormat(a);return(void 0!==s||void 0!==u&&"function"==typeof u)&&(void 0===s&&(s=1),a=withAlphaValue(u,s,u)),a},screen:(e,i)=>{i=i.replace(/^['"]+/g,"").replace(/['"]+$/g,"");let r=normalizeScreens(t.theme.screens).find(({name:e})=>e===i);if(!r)throw e.error(`The '${i}' screen does not exist in your theme.`);return buildMediaQuery(r)}};return e=>{e.walk(e=>{let t=nodeTypePropertyMap[e.type];void 0!==t&&(e[t]=resolveFunctions(e,e[t],i))})}}