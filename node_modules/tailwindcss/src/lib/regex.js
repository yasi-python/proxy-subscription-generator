const REGEX_SPECIAL=/[\\^$.*+?()[\]{}|]/g,REGEX_HAS_SPECIAL=RegExp(REGEX_SPECIAL.source);function toSource(e){return(e=(e=Array.isArray(e)?e:[e]).map(e=>e instanceof RegExp?e.source:e)).join("")}export function pattern(e){return new RegExp(toSource(e),"g")}export function withoutCapturing(e){return new RegExp(`(?:${toSource(e)})`,"g")}export function any(e){return`(?:${e.map(toSource).join("|")})`}export function optional(e){return`(?:${toSource(e)})?`}export function zeroOrMore(e){return`(?:${toSource(e)})*`}export function nestedBrackets(e,t,r=1){return withoutCapturing([escape(e),/[^\s]*/,1===r?`[^${escape(e)}${escape(t)}s]*`:any([`[^${escape(e)}${escape(t)}s]*`,nestedBrackets(e,t,r-1)]),/[^\s]*/,escape(t)])}export function escape(e){return e&&REGEX_HAS_SPECIAL.test(e)?e.replace(REGEX_SPECIAL,"\\$&"):e||""}