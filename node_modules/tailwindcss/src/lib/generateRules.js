import postcss from"postcss";import selectorParser from"postcss-selector-parser";import parseObjectStyles from"../util/parseObjectStyles";import isPlainObject from"../util/isPlainObject";import prefixSelector from"../util/prefixSelector";import{updateAllClasses,getMatchingTypes}from"../util/pluginUtils";import log from"../util/log";import*as sharedState from"./sharedState";import{formatVariantSelector,finalizeSelector,eliminateIrrelevantSelectors}from"../util/formatVariantSelector";import{asClass}from"../util/nameClass";import{normalize}from"../util/dataTypes";import{isValidVariantFormatString,parseVariant,INTERNAL_FEATURES}from"./setupContextUtils";import isValidArbitraryValue from"../util/isSyntacticallyValidPropertyValue";import{splitAtTopLevelOnly}from"../util/splitAtTopLevelOnly.js";import{flagEnabled}from"../featureFlags";import{applyImportantSelector}from"../util/applyImportantSelector";let classNameParser=selectorParser(e=>e.first.filter(({type:e})=>"class"===e).pop().value);export function getClassNameFromSelector(e){return classNameParser.transformSync(e)}function*candidatePermutations(e){let t=1/0;for(;t>=0;){let r,a=!1;if(t===1/0&&e.endsWith("]")){let t=e.indexOf("[");"-"===e[t-1]?r=t-1:"/"===e[t-1]?(r=t-1,a=!0):r=-1}else t===1/0&&e.includes("/")?(r=e.lastIndexOf("/"),a=!0):r=e.lastIndexOf("-",t);if(r<0)break;let l=e.slice(0,r),s=e.slice(a?r:r+1);t=r-1,""!==l&&"/"!==s&&(yield[l,s])}}function applyPrefix(e,t){if(0===e.length||""===t.tailwindConfig.prefix)return e;for(let r of e){let[e]=r;if(e.options.respectPrefix){let e=postcss.root({nodes:[r[1].clone()]}),a=r[1].raws.tailwind.classCandidate;e.walkRules(e=>{let r=a.startsWith("-");e.selector=prefixSelector(t.tailwindConfig.prefix,e.selector,r)}),r[1]=e.nodes[0]}}return e}function applyImportant(e,t){if(0===e.length)return e;let r=[];function a(e){return e.parent&&"atrule"===e.parent.type&&"keyframes"===e.parent.name}for(let[l,s]of e){let e=postcss.root({nodes:[s.clone()]});e.walkRules(e=>{if(a(e))return;let r=selectorParser().astSync(e.selector);r.each(e=>eliminateIrrelevantSelectors(e,t)),updateAllClasses(r,e=>e===t?`!${e}`:e),e.selector=r.toString(),e.walkDecls(e=>e.important=!0)}),r.push([{...l,important:!0},e.nodes[0]])}return r}function applyVariant(e,t,r){if(0===t.length)return t;let a={modifier:null,value:sharedState.NONE};{let[i,...n]=splitAtTopLevelOnly(e,"/");if(n.length>1&&(i=i+"/"+n.slice(0,-1).join("/"),n=n.slice(-1)),n.length&&!r.variantMap.has(e)&&(e=i,a.modifier=n[0],!flagEnabled(r.tailwindConfig,"generalizedModifiers")))return[]}if(e.endsWith("]")&&!e.startsWith("[")){let o=/(.)(-?)\[(.*)\]/g.exec(e);if(o){let[,c,p,f]=o;if("@"===c&&"-"===p)return[];if("@"!==c&&""===p)return[];e=e.replace(`${p}[${f}]`,""),a.value=f}}if(isArbitraryValue(e)&&!r.variantMap.has(e)){let u=r.offsets.recordVariant(e),d=normalize(e.slice(1,-1)),m=splitAtTopLevelOnly(d,",");if(m.length>1)return[];if(!m.every(isValidVariantFormatString))return[];let y=m.map((e,t)=>[r.offsets.applyParallelOffset(u,t),parseVariant(e.trim())]);r.variantMap.set(e,y)}if(r.variantMap.has(e)){let h=isArbitraryValue(e),g=r.variantOptions.get(e)?.[INTERNAL_FEATURES]??{},w=r.variantMap.get(e).slice(),S=[],A=!h&&!1!==g.respectPrefix;for(let[C,P]of t){if("user"===C.layer)continue;let v=postcss.root({nodes:[P.clone()]});for(let[R,V,b]of w){let O=(b??v).clone(),x=[];function l(){O.raws.neededBackup||(O.raws.neededBackup=!0,O.walkRules(e=>e.raws.originalSelector=e.selector))}function s(e){return l(),O.each(t=>{"rule"===t.type&&(t.selectors=t.selectors.map(t=>e({get className(){return getClassNameFromSelector(t)},selector:t})))}),O}let N=V({get container(){return l(),O},separator:r.tailwindConfig.separator,modifySelectors:s,wrap(e){let t=O.nodes;O.removeAll(),e.append(t),O.append(e)},format(e){x.push({format:e,respectPrefix:A})},args:a});if(Array.isArray(N)){for(let[k,T]of N.entries())w.push([r.offsets.applyParallelOffset(R,k),T,O.clone()]);continue}if("string"==typeof N&&x.push({format:N,respectPrefix:A}),null===N)continue;O.raws.neededBackup&&(delete O.raws.neededBackup,O.walkRules(t=>{let a=t.raws.originalSelector;if(!a)return;if(delete t.raws.originalSelector,a===t.selector)return;let l=t.selector,s=selectorParser(t=>{t.walkClasses(t=>{t.value=`${e}${r.tailwindConfig.separator}${t.value}`})}).processSync(a);x.push({format:l.replace(s,"&"),respectPrefix:A}),t.selector=a})),O.nodes[0].raws.tailwind={...O.nodes[0].raws.tailwind,parentLayer:C.layer};let M=[{...C,sort:r.offsets.applyVariantOffset(C.sort,R,Object.assign(a,r.variantOptions.get(e))),collectedFormats:(C.collectedFormats??[]).concat(x)},O.nodes[0]];S.push(M)}}return S}return[]}function parseRules(e,t,r={}){return isPlainObject(e)||Array.isArray(e)?Array.isArray(e)?parseRules(e[0],t,e[1]):(t.has(e)||t.set(e,parseObjectStyles(e)),[t.get(e),r]):[[e],r]}const IS_VALID_PROPERTY_NAME=/^[a-z_-]/;function isValidPropName(e){return IS_VALID_PROPERTY_NAME.test(e)}function looksLikeUri(e){if(!e.includes("://"))return!1;try{const t=new URL(e);return""!==t.scheme&&""!==t.host}catch(e){return!1}}function isParsableNode(e){let t=!0;return e.walkDecls(e=>{if(!isParsableCssValue(e.prop,e.value))return t=!1,!1}),t}function isParsableCssValue(e,t){if(looksLikeUri(`${e}:${t}`))return!1;try{return postcss.parse(`a{${e}:${t}}`).toResult(),!0}catch(e){return!1}}function extractArbitraryProperty(e,t){let[,r,a]=e.match(/^\[([a-zA-Z0-9-_]+):(\S+)\]$/)??[];if(void 0===a)return null;if(!isValidPropName(r))return null;if(!isValidArbitraryValue(a))return null;let l=normalize(a,{property:r});return isParsableCssValue(r,l)?[[{sort:t.offsets.arbitraryProperty(e),layer:"utilities",options:{respectImportant:!0}},()=>({[asClass(e)]:{[r]:l}})]]:null}function*resolveMatchedPlugins(e,t){t.candidateRuleMap.has(e)&&(yield[t.candidateRuleMap.get(e),"DEFAULT"]),yield*function*(e){null!==e&&(yield[e,"DEFAULT"])}(extractArbitraryProperty(e,t));let r=e,a=!1;const l=t.tailwindConfig.prefix,s=l.length,i=r.startsWith(l)||r.startsWith(`-${l}`);"-"===r[s]&&i&&(a=!0,r=l+r.slice(s+1)),a&&t.candidateRuleMap.has(r)&&(yield[t.candidateRuleMap.get(r),"-DEFAULT"]);for(let[e,l]of candidatePermutations(r))t.candidateRuleMap.has(e)&&(yield[t.candidateRuleMap.get(e),a?`-${l}`:l])}function splitWithSeparator(e,t){return e===sharedState.NOT_ON_DEMAND?[sharedState.NOT_ON_DEMAND]:splitAtTopLevelOnly(e,t)}function*recordCandidates(e,t){for(const r of e)r[1].raws.tailwind={...r[1].raws.tailwind,classCandidate:t,preserveSource:r[0].options?.preserveSource??!1},yield r}function*resolveMatches(e,t){let r=t.tailwindConfig.separator,[a,...l]=splitWithSeparator(e,r).reverse(),s=!1;a.startsWith("!")&&(s=!0,a=a.slice(1));for(let n of resolveMatchedPlugins(a,t)){let o=[],c=new Map,[p,f]=n,u=1===p.length;for(let[d,m]of p){let y=[];if("function"==typeof m)for(let h of[].concat(m(f,{isOnlyPlugin:u}))){let[g,w]=parseRules(h,t.postCssNodeCache);for(let S of g)y.push([{...d,options:{...d.options,...w}},S])}else if("DEFAULT"===f||"-DEFAULT"===f){let A=m,[C,P]=parseRules(A,t.postCssNodeCache);for(let v of C)y.push([{...d,options:{...d.options,...P}},v])}if(y.length>0){let R=Array.from(getMatchingTypes(d.options?.types??[],f,d.options??{},t.tailwindConfig)).map(([e,t])=>t);R.length>0&&c.set(y,R),o.push(y)}}if(isArbitraryValue(f)){if(o.length>1){let[V,b]=o.reduce((e,t)=>(t.some(([{options:e}])=>e.types.some(({type:e})=>"any"===e))?e[0].push(t):e[1].push(t),e),[[],[]]);function i(e){return 1===e.length?e[0]:e.find(e=>{let t=c.get(e);return e.some(([{options:e},r])=>!!isParsableNode(r)&&e.types.some(({type:e,preferOnConflict:r})=>t.includes(e)&&r))})}let O=i(b)??i(V);if(!O){let x=o.map(e=>new Set([...c.get(e)??[]]));for(let M of x)for(let k of M){let T=!1;for(let E of x)M!==E&&E.has(k)&&(E.delete(k),T=!0);T&&M.delete(k)}let N=[];for(let[F,I]of x.entries())for(let $ of I){let L=o[F].map(([,e])=>e).flat().map(e=>e.toString().split("\n").slice(1,-1).map(e=>e.trim()).map(e=>`      ${e}`).join("\n")).join("\n\n");N.push(`  Use \`${e.replace("[",`[${$}:`)}\` for \`${L.trim()}\``);break}log.warn([`The class \`${e}\` is ambiguous and matches multiple utilities.`,...N,`If this is content and not a class, replace it with \`${e.replace("[","&lsqb;").replace("]","&rsqb;")}\` to silence this warning.`]);continue}o=[O]}o=o.map(e=>e.filter(e=>isParsableNode(e[1])))}o=o.flat(),o=Array.from(recordCandidates(o,a)),o=applyPrefix(o,t),s&&(o=applyImportant(o,a));for(let D of l)o=applyVariant(D,o,t);for(let _ of o)_[1].raws.tailwind={..._[1].raws.tailwind,candidate:e},_=applyFinalFormat(_,{context:t,candidate:e}),null!==_&&(yield _)}}function applyFinalFormat(e,{context:t,candidate:r}){if(!e[0].collectedFormats)return e;let a,l=!0;try{a=formatVariantSelector(e[0].collectedFormats,{context:t,candidate:r})}catch{return null}let s=postcss.root({nodes:[e[1].clone()]});return s.walkRules(e=>{if(!inKeyframes(e))try{let l=finalizeSelector(e.selector,a,{candidate:r,context:t});if(null===l)return void e.remove();e.selector=l}catch{return l=!1,!1}}),l?0===s.nodes.length?null:(e[1]=s.nodes[0],e):null}function inKeyframes(e){return e.parent&&"atrule"===e.parent.type&&"keyframes"===e.parent.name}function getImportantStrategy(e){return!0===e?e=>{inKeyframes(e)||e.walkDecls(e=>{"rule"!==e.parent.type||inKeyframes(e.parent)||(e.important=!0)})}:"string"==typeof e?t=>{inKeyframes(t)||(t.selectors=t.selectors.map(t=>applyImportantSelector(t,e)))}:void 0}function generateRules(e,t,r=!1){let a=[],l=getImportantStrategy(t.tailwindConfig.important);for(let s of e){if(t.notClassCache.has(s))continue;if(t.candidateRuleCache.has(s)){a=a.concat(Array.from(t.candidateRuleCache.get(s)));continue}let e=Array.from(resolveMatches(s,t));if(0===e.length){t.notClassCache.add(s);continue}t.classCache.set(s,e);let i=t.candidateRuleCache.get(s)??new Set;t.candidateRuleCache.set(s,i);for(const s of e){let[{sort:e,options:n},o]=s;if(n.respectImportant&&l){let e=postcss.root({nodes:[o.clone()]});e.walkRules(l),o=e.nodes[0]}let c=[e,r?o.clone():o];i.add(c),t.ruleCache.add(c),a.push(c)}}return a}function isArbitraryValue(e){return e.startsWith("[")&&e.endsWith("]")}export{resolveMatches,generateRules};