let comparisonMap={atrule:["name","params"],rule:["selector"]},types=new Set(Object.keys(comparisonMap));export default function collapseAdjacentRules(){function e(t){let a=null;t.each(e=>{if(!types.has(e.type))return void(a=null);if(null===a)return void(a=e);let t=comparisonMap[e.type];"atrule"===e.type&&"font-face"===e.name?a=e:t.every(t=>(e[t]??"").replace(/\s+/g," ")===(a[t]??"").replace(/\s+/g," "))?(e.nodes&&a.append(e.nodes),e.remove()):a=e}),t.each(t=>{"atrule"===t.type&&e(t)})}return t=>{e(t)}}