import normalizeTailwindDirectives from"./lib/normalizeTailwindDirectives";import expandTailwindAtRules from"./lib/expandTailwindAtRules";import expandApplyAtRules from"./lib/expandApplyAtRules";import evaluateTailwindFunctions from"./lib/evaluateTailwindFunctions";import substituteScreenAtRules from"./lib/substituteScreenAtRules";import resolveDefaultsAtRules from"./lib/resolveDefaultsAtRules";import collapseAdjacentRules from"./lib/collapseAdjacentRules";import collapseDuplicateDeclarations from"./lib/collapseDuplicateDeclarations";import partitionApplyAtRules from"./lib/partitionApplyAtRules";import{createContext}from"./lib/setupContextUtils";import{issueFlagNotices}from"./featureFlags";export default function processTailwindFeatures(e){return async function(t,i){let{tailwindDirectives:l,applyDirectives:a}=normalizeTailwindDirectives(t);partitionApplyAtRules()(t,i);let s=e({tailwindDirectives:l,applyDirectives:a,registerDependency(e){i.messages.push({plugin:"tailwindcss",parent:i.opts.from,...e})},createContext:(e,i)=>createContext(e,i,t)})(t,i);if("-"===s.tailwindConfig.separator)throw new Error("The '-' character cannot be used as a custom separator in JIT mode due to parsing ambiguity. Please use another character like '_' instead.");issueFlagNotices(s.tailwindConfig),await expandTailwindAtRules(s)(t,i),partitionApplyAtRules()(t,i),expandApplyAtRules(s)(t,i),evaluateTailwindFunctions(s)(t,i),substituteScreenAtRules(s)(t,i),resolveDefaultsAtRules(s)(t,i),collapseAdjacentRules(s)(t,i),collapseDuplicateDeclarations(s)(t,i)}}