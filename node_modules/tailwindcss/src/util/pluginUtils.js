import escapeCommas from"./escapeCommas";import{withAlphaValue}from"./withAlphaVariable";import{normalize,length,number,percentage,url,color as validateColor,genericName,familyName,image,absoluteSize,relativeSize,position,lineWidth,shadow}from"./dataTypes";import negateValue from"./negateValue";import{backgroundSize}from"./validateFormalSyntax";import{flagEnabled}from"../featureFlags.js";export function updateAllClasses(e,i){e.walkClasses(e=>{e.value=i(e.value),e.raws&&e.raws.value&&(e.raws.value=escapeCommas(e.raws.value))})}function resolveArbitraryValue(e,i){if(!isArbitraryValue(e))return;let r=e.slice(1,-1);return i(r)?normalize(r):void 0}function asNegativeValue(e,i={},r){let t=i[e];if(void 0!==t)return negateValue(t);if(isArbitraryValue(e)){let i=resolveArbitraryValue(e,r);if(void 0===i)return;return negateValue(i)}}export function asValue(e,i={},{validate:r=()=>!0}={}){let t=i.values?.[e];return void 0!==t?t:i.supportsNegativeValues&&e.startsWith("-")?asNegativeValue(e.slice(1),i.values,r):resolveArbitraryValue(e,r)}function isArbitraryValue(e){return e.startsWith("[")&&e.endsWith("]")}function splitUtilityModifier(e){let i=e.lastIndexOf("/"),r=e.lastIndexOf("[",i),t=e.indexOf("]",i);return"]"===e[i-1]||"["===e[i+1]||-1!==r&&-1!==t&&r<i&&i<t&&(i=e.lastIndexOf("/",r)),-1===i||i===e.length-1||isArbitraryValue(e)&&!e.includes("]/[")?[e,void 0]:[e.slice(0,i),e.slice(i+1)]}export function parseColorFormat(e){if("string"==typeof e&&e.includes("<alpha-value>")){let i=e;return({opacityValue:e=1})=>i.replace(/<alpha-value>/g,e)}return e}function unwrapArbitraryModifier(e){return normalize(e.slice(1,-1))}export function asColor(e,i={},{tailwindConfig:r={}}={}){if(void 0!==i.values?.[e])return parseColorFormat(i.values?.[e]);let[t,a]=splitUtilityModifier(e);if(void 0!==a){let e=i.values?.[t]??(isArbitraryValue(t)?t.slice(1,-1):void 0);if(void 0===e)return;if(e=parseColorFormat(e),isArbitraryValue(a))return withAlphaValue(e,unwrapArbitraryModifier(a));if(void 0===r.theme?.opacity?.[a])return;return withAlphaValue(e,r.theme.opacity[a])}return asValue(e,i,{validate:validateColor})}export function asLookupValue(e,i={}){return i.values?.[e]}function guess(e){return(i,r)=>asValue(i,r,{validate:e})}export let typeMap={any:asValue,color:asColor,url:guess(url),image:guess(image),length:guess(length),percentage:guess(percentage),position:guess(position),lookup:asLookupValue,"generic-name":guess(genericName),"family-name":guess(familyName),number:guess(number),"line-width":guess(lineWidth),"absolute-size":guess(absoluteSize),"relative-size":guess(relativeSize),shadow:guess(shadow),size:guess(backgroundSize)};let supportedTypes=Object.keys(typeMap);function splitAtFirst(e,i){let r=e.indexOf(i);return-1===r?[void 0,e]:[e.slice(0,r),e.slice(r+1)]}export function coerceValue(e,i,r,t){if(r.values&&i in r.values)for(let{type:a}of e??[]){let e=typeMap[a](i,r,{tailwindConfig:t});if(void 0!==e)return[e,a,null]}if(isArbitraryValue(i)){let e=i.slice(1,-1),[t,a]=splitAtFirst(e,":");if(/^[\w-_]+$/g.test(t)){if(void 0!==t&&!supportedTypes.includes(t))return[]}else a=e;if(a.length>0&&supportedTypes.includes(t))return[asValue(`[${a}]`,r),t,null]}let a=getMatchingTypes(e,i,r,t);for(let e of a)return e;return[]}export function*getMatchingTypes(e,i,r,t){let a=flagEnabled(t,"generalizedModifiers"),[l,s]=splitUtilityModifier(i);if(a&&null!=r.modifiers&&("any"===r.modifiers||"object"==typeof r.modifiers&&(s&&isArbitraryValue(s)||s in r.modifiers))||(l=i,s=void 0),void 0!==s&&""===l&&(l="DEFAULT"),void 0!==s&&"object"==typeof r.modifiers){let e=r.modifiers?.[s]??null;null!==e?s=e:isArbitraryValue(s)&&(s=unwrapArbitraryModifier(s))}for(let{type:i}of e??[]){let e=typeMap[i](l,r,{tailwindConfig:t});void 0!==e&&(yield[e,i,s??null])}}