let postcss=require("postcss"),IMPORTANT=/\s*!important\s*$/i,UNITLESS={"box-flex":!0,"box-flex-group":!0,"column-count":!0,flex:!0,"flex-grow":!0,"flex-positive":!0,"flex-shrink":!0,"flex-negative":!0,"font-weight":!0,"line-clamp":!0,"line-height":!0,opacity:!0,order:!0,orphans:!0,"tab-size":!0,widows:!0,"z-index":!0,zoom:!0,"fill-opacity":!0,"stroke-dashoffset":!0,"stroke-opacity":!0,"stroke-width":!0};function dashify(e){return e.replace(/([A-Z])/g,"-$1").replace(/^ms-/,"-ms-").toLowerCase()}function decl(e,t,s){!1!==s&&null!==s&&(t.startsWith("--")||(t=dashify(t)),"number"==typeof s&&(0===s||UNITLESS[t]?s=s.toString():s+="px"),"css-float"===t&&(t="float"),IMPORTANT.test(s)?(s=s.replace(IMPORTANT,""),e.push(postcss.decl({prop:t,value:s,important:!0}))):e.push(postcss.decl({prop:t,value:s})))}function atRule(e,t,s){let o=postcss.atRule({name:t[1],params:t[3]||""});"object"==typeof s&&(o.nodes=[],parse(s,o)),e.push(o)}function parse(e,t){let s,o,l;for(s in e)if(o=e[s],null!=o)if("@"===s[0]){let e=s.match(/@(\S+)(\s+([\W\w]*)\s*)?/);if(Array.isArray(o))for(let s of o)atRule(t,e,s);else atRule(t,e,o)}else if(Array.isArray(o))for(let e of o)decl(t,s,e);else"object"==typeof o?(l=postcss.rule({selector:s}),parse(o,l),t.push(l)):decl(t,s,o)}module.exports=function(e){let t=postcss.root();return parse(e,t),t};