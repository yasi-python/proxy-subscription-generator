import{LRUCache}from"lru-cache";import{posix,win32}from"node:path";import{fileURLToPath}from"node:url";import{lstatSync,readdir as readdirCB,readdirSync,readlinkSync,realpathSync as rps}from"fs";import*as actualFS from"node:fs";const realpathSync=rps.native;import{lstat,readdir,readlink,realpath}from"node:fs/promises";import{Minipass}from"minipass";const defaultFS={lstatSync:lstatSync,readdir:readdirCB,readdirSync:readdirSync,readlinkSync:readlinkSync,realpathSync:realpathSync,promises:{lstat:lstat,readdir:readdir,readlink:readlink,realpath:realpath}},fsFromOption=t=>t&&t!==defaultFS&&t!==actualFS?{...defaultFS,...t,promises:{...defaultFS.promises,...t.promises||{}}}:defaultFS,uncDriveRegexp=/^\\\\\?\\([a-z]:)\\?$/i,uncToDrive=t=>t.replace(/\//g,"\\").replace(uncDriveRegexp,"$1\\"),eitherSep=/[\\\/]/,UNKNOWN=0,IFIFO=1,IFCHR=2,IFDIR=4,IFBLK=6,IFREG=8,IFLNK=10,IFSOCK=12,IFMT=15,IFMT_UNKNOWN=-16,READDIR_CALLED=16,LSTAT_CALLED=32,ENOTDIR=64,ENOENT=128,ENOREADLINK=256,ENOREALPATH=512,ENOCHILD=704,TYPEMASK=1023,entToType=t=>t.isFile()?8:t.isDirectory()?4:t.isSymbolicLink()?10:t.isCharacterDevice()?2:t.isBlockDevice()?6:t.isSocket()?12:t.isFIFO()?1:0,normalizeCache=new Map,normalize=t=>{const i=normalizeCache.get(t);if(i)return i;const s=t.normalize("NFKD");return normalizeCache.set(t,s),s},normalizeNocaseCache=new Map,normalizeNocase=t=>{const i=normalizeNocaseCache.get(t);if(i)return i;const s=normalize(t.toLowerCase());return normalizeNocaseCache.set(t,s),s};export class ResolveCache extends LRUCache{constructor(){super({max:256})}}export class ChildrenCache extends LRUCache{constructor(t=16384){super({maxSize:t,sizeCalculation:t=>t.length+1})}}const setAsCwd=Symbol("PathScurry setAsCwd");export class PathBase{name;root;roots;parent;nocase;isCWD=!1;#t;#i;get dev(){return this.#i}#s;get mode(){return this.#s}#e;get nlink(){return this.#e}#r;get uid(){return this.#r}#n;get gid(){return this.#n}#h;get rdev(){return this.#h}#o;get blksize(){return this.#o}#a;get ino(){return this.#a}#c;get size(){return this.#c}#l;get blocks(){return this.#l}#p;get atimeMs(){return this.#p}#d;get mtimeMs(){return this.#d}#u;get ctimeMs(){return this.#u}#f;get birthtimeMs(){return this.#f}#w;get atime(){return this.#w}#y;get mtime(){return this.#y}#m;get ctime(){return this.#m}#v;get birthtime(){return this.#v}#S;#T;#g;#P;#k;#F;#C;#R;#x;#N;get parentPath(){return(this.parent||this).fullpath()}get path(){return this.parentPath}constructor(t,i=0,s,e,r,n,h){this.name=t,this.#S=r?normalizeNocase(t):normalize(t),this.#C=1023&i,this.nocase=r,this.roots=e,this.root=s||this,this.#R=n,this.#g=h.fullpath,this.#k=h.relative,this.#F=h.relativePosix,this.parent=h.parent,this.parent?this.#t=this.parent.#t:this.#t=fsFromOption(h.fs)}depth(){return void 0!==this.#T?this.#T:this.parent?this.#T=this.parent.depth()+1:this.#T=0}childrenCache(){return this.#R}resolve(t){if(!t)return this;const i=this.getRootString(t),s=t.substring(i.length).split(this.splitSep);return i?this.getRoot(i).#D(s):this.#D(s)}#D(t){let i=this;for(const s of t)i=i.child(s);return i}children(){const t=this.#R.get(this);if(t)return t;const i=Object.assign([],{provisional:0});return this.#R.set(this,i),this.#C&=-17,i}child(t,i){if(""===t||"."===t)return this;if(".."===t)return this.parent||this;const s=this.children(),e=this.nocase?normalizeNocase(t):normalize(t);for(const t of s)if(t.#S===e)return t;const r=this.parent?this.sep:"",n=this.#g?this.#g+r+t:void 0,h=this.newChild(t,0,{...i,parent:this,fullpath:n});return this.canReaddir()||(h.#C|=128),s.push(h),h}relative(){if(this.isCWD)return"";if(void 0!==this.#k)return this.#k;const t=this.name,i=this.parent;if(!i)return this.#k=this.name;const s=i.relative();return s+(s&&i.parent?this.sep:"")+t}relativePosix(){if("/"===this.sep)return this.relative();if(this.isCWD)return"";if(void 0!==this.#F)return this.#F;const t=this.name,i=this.parent;if(!i)return this.#F=this.fullpathPosix();const s=i.relativePosix();return s+(s&&i.parent?"/":"")+t}fullpath(){if(void 0!==this.#g)return this.#g;const t=this.name,i=this.parent;if(!i)return this.#g=this.name;const s=i.fullpath()+(i.parent?this.sep:"")+t;return this.#g=s}fullpathPosix(){if(void 0!==this.#P)return this.#P;if("/"===this.sep)return this.#P=this.fullpath();if(!this.parent){const t=this.fullpath().replace(/\\/g,"/");return/^[a-z]:\//i.test(t)?this.#P=`//?/${t}`:this.#P=t}const t=this.parent,i=t.fullpathPosix(),s=i+(i&&t.parent?"/":"")+this.name;return this.#P=s}isUnknown(){return!(15&this.#C)}isType(t){return this[`is${t}`]()}getType(){return this.isUnknown()?"Unknown":this.isDirectory()?"Directory":this.isFile()?"File":this.isSymbolicLink()?"SymbolicLink":this.isFIFO()?"FIFO":this.isCharacterDevice()?"CharacterDevice":this.isBlockDevice()?"BlockDevice":this.isSocket()?"Socket":"Unknown"}isFile(){return 8==(15&this.#C)}isDirectory(){return 4==(15&this.#C)}isCharacterDevice(){return 2==(15&this.#C)}isBlockDevice(){return 6==(15&this.#C)}isFIFO(){return 1==(15&this.#C)}isSocket(){return 12==(15&this.#C)}isSymbolicLink(){return!(10&~this.#C)}lstatCached(){return 32&this.#C?this:void 0}readlinkCached(){return this.#x}realpathCached(){return this.#N}readdirCached(){const t=this.children();return t.slice(0,t.provisional)}canReadlink(){if(this.#x)return!0;if(!this.parent)return!1;const t=15&this.#C;return!(0!==t&&10!==t||256&this.#C||128&this.#C)}calledReaddir(){return!!(16&this.#C)}isENOENT(){return!!(128&this.#C)}isNamed(t){return this.nocase?this.#S===normalizeNocase(t):this.#S===normalize(t)}async readlink(){const t=this.#x;if(t)return t;if(this.canReadlink()&&this.parent)try{const t=await this.#t.promises.readlink(this.fullpath()),i=(await this.parent.realpath())?.resolve(t);if(i)return this.#x=i}catch(t){return void this.#b(t.code)}}readlinkSync(){const t=this.#x;if(t)return t;if(this.canReadlink()&&this.parent)try{const t=this.#t.readlinkSync(this.fullpath()),i=this.parent.realpathSync()?.resolve(t);if(i)return this.#x=i}catch(t){return void this.#b(t.code)}}#z(t){this.#C|=16;for(let i=t.provisional;i<t.length;i++){const s=t[i];s&&s.#B()}}#B(){128&this.#C||(this.#C=-16&this.#C|128,this.#E())}#E(){const t=this.children();t.provisional=0;for(const i of t)i.#B()}#L(){this.#C|=512,this.#O()}#O(){if(64&this.#C)return;let t=this.#C;4==(15&t)&&(t&=-16),this.#C=64|t,this.#E()}#W(t=""){"ENOTDIR"===t||"EPERM"===t?this.#O():"ENOENT"===t?this.#B():this.children().provisional=0}#I(t=""){"ENOTDIR"===t?this.parent.#O():"ENOENT"===t&&this.#B()}#b(t=""){let i=this.#C;i|=256,"ENOENT"===t&&(i|=128),"EINVAL"!==t&&"UNKNOWN"!==t||(i&=-16),this.#C=i,"ENOTDIR"===t&&this.parent&&this.parent.#O()}#M(t,i){return this.#U(t,i)||this.#A(t,i)}#A(t,i){const s=entToType(t),e=this.newChild(t.name,s,{parent:this}),r=15&e.#C;return 4!==r&&10!==r&&0!==r&&(e.#C|=64),i.unshift(e),i.provisional++,e}#U(t,i){for(let s=i.provisional;s<i.length;s++){const e=i[s];if((this.nocase?normalizeNocase(t.name):normalize(t.name))===e.#S)return this.#$(t,e,s,i)}}#$(t,i,s,e){const r=i.name;return i.#C=-16&i.#C|entToType(t),r!==t.name&&(i.name=t.name),s!==e.provisional&&(s===e.length-1?e.pop():e.splice(s,1),e.unshift(i)),e.provisional++,i}async lstat(){if(!(128&this.#C))try{return this.#K(await this.#t.promises.lstat(this.fullpath())),this}catch(t){this.#I(t.code)}}lstatSync(){if(!(128&this.#C))try{return this.#K(this.#t.lstatSync(this.fullpath())),this}catch(t){this.#I(t.code)}}#K(t){const{atime:i,atimeMs:s,birthtime:e,birthtimeMs:r,blksize:n,blocks:h,ctime:o,ctimeMs:a,dev:c,gid:l,ino:p,mode:d,mtime:u,mtimeMs:f,nlink:w,rdev:y,size:m,uid:v}=t;this.#w=i,this.#p=s,this.#v=e,this.#f=r,this.#o=n,this.#l=h,this.#m=o,this.#u=a,this.#i=c,this.#n=l,this.#a=p,this.#s=d,this.#y=u,this.#d=f,this.#e=w,this.#h=y,this.#c=m,this.#r=v;const S=entToType(t);this.#C=-16&this.#C|S|32,0!==S&&4!==S&&10!==S&&(this.#C|=64)}#j=[];#q=!1;#H(t){this.#q=!1;const i=this.#j.slice();this.#j.length=0,i.forEach(i=>i(null,t))}readdirCB(t,i=!1){if(!this.canReaddir())return void(i?t(null,[]):queueMicrotask(()=>t(null,[])));const s=this.children();if(this.calledReaddir()){const e=s.slice(0,s.provisional);return void(i?t(null,e):queueMicrotask(()=>t(null,e)))}if(this.#j.push(t),this.#q)return;this.#q=!0;const e=this.fullpath();this.#t.readdir(e,{withFileTypes:!0},(t,i)=>{if(t)this.#W(t.code),s.provisional=0;else{for(const t of i)this.#M(t,s);this.#z(s)}this.#H(s.slice(0,s.provisional))})}#G;async readdir(){if(!this.canReaddir())return[];const t=this.children();if(this.calledReaddir())return t.slice(0,t.provisional);const i=this.fullpath();if(this.#G)await this.#G;else{let s=()=>{};this.#G=new Promise(t=>s=t);try{for(const s of await this.#t.promises.readdir(i,{withFileTypes:!0}))this.#M(s,t);this.#z(t)}catch(i){this.#W(i.code),t.provisional=0}this.#G=void 0,s()}return t.slice(0,t.provisional)}readdirSync(){if(!this.canReaddir())return[];const t=this.children();if(this.calledReaddir())return t.slice(0,t.provisional);const i=this.fullpath();try{for(const s of this.#t.readdirSync(i,{withFileTypes:!0}))this.#M(s,t);this.#z(t)}catch(i){this.#W(i.code),t.provisional=0}return t.slice(0,t.provisional)}canReaddir(){if(704&this.#C)return!1;const t=15&this.#C;return 0===t||4===t||10===t}shouldWalk(t,i){return!(4&~this.#C)&&!(704&this.#C)&&!t.has(this)&&(!i||i(this))}async realpath(){if(this.#N)return this.#N;if(!(896&this.#C))try{const t=await this.#t.promises.realpath(this.fullpath());return this.#N=this.resolve(t)}catch(t){this.#L()}}realpathSync(){if(this.#N)return this.#N;if(!(896&this.#C))try{const t=this.#t.realpathSync(this.fullpath());return this.#N=this.resolve(t)}catch(t){this.#L()}}[setAsCwd](t){if(t===this)return;t.isCWD=!1,this.isCWD=!0;const i=new Set([]);let s=[],e=this;for(;e&&e.parent;)i.add(e),e.#k=s.join(this.sep),e.#F=s.join("/"),e=e.parent,s.push("..");for(e=t;e&&e.parent&&!i.has(e);)e.#k=void 0,e.#F=void 0,e=e.parent}}export class PathWin32 extends PathBase{sep="\\";splitSep=eitherSep;constructor(t,i=0,s,e,r,n,h){super(t,i,s,e,r,n,h)}newChild(t,i=0,s={}){return new PathWin32(t,i,this.root,this.roots,this.nocase,this.childrenCache(),s)}getRootString(t){return win32.parse(t).root}getRoot(t){if((t=uncToDrive(t.toUpperCase()))===this.root.name)return this.root;for(const[i,s]of Object.entries(this.roots))if(this.sameRoot(t,i))return this.roots[t]=s;return this.roots[t]=new PathScurryWin32(t,this).root}sameRoot(t,i=this.root.name){return(t=t.toUpperCase().replace(/\//g,"\\").replace(uncDriveRegexp,"$1\\"))===i}}export class PathPosix extends PathBase{splitSep="/";sep="/";constructor(t,i=0,s,e,r,n,h){super(t,i,s,e,r,n,h)}getRootString(t){return t.startsWith("/")?"/":""}getRoot(t){return this.root}newChild(t,i=0,s={}){return new PathPosix(t,i,this.root,this.roots,this.nocase,this.childrenCache(),s)}}export class PathScurryBase{root;rootPath;roots;cwd;#V;#_;#R;nocase;#t;constructor(t=process.cwd(),i,s,{nocase:e,childrenCacheSize:r=16384,fs:n=defaultFS}={}){this.#t=fsFromOption(n),(t instanceof URL||t.startsWith("file://"))&&(t=fileURLToPath(t));const h=i.resolve(t);this.roots=Object.create(null),this.rootPath=this.parseRootPath(h),this.#V=new ResolveCache,this.#_=new ResolveCache,this.#R=new ChildrenCache(r);const o=h.substring(this.rootPath.length).split(s);if(1!==o.length||o[0]||o.pop(),void 0===e)throw new TypeError("must provide nocase setting to PathScurryBase ctor");this.nocase=e,this.root=this.newRoot(this.#t),this.roots[this.rootPath]=this.root;let a=this.root,c=o.length-1;const l=i.sep;let p=this.rootPath,d=!1;for(const t of o){const i=c--;a=a.child(t,{relative:new Array(i).fill("..").join(l),relativePosix:new Array(i).fill("..").join("/"),fullpath:p+=(d?"":l)+t}),d=!0}this.cwd=a}depth(t=this.cwd){return"string"==typeof t&&(t=this.cwd.resolve(t)),t.depth()}childrenCache(){return this.#R}resolve(...t){let i="";for(let s=t.length-1;s>=0;s--){const e=t[s];if(e&&"."!==e&&(i=i?`${e}/${i}`:e,this.isAbsolute(e)))break}const s=this.#V.get(i);if(void 0!==s)return s;const e=this.cwd.resolve(i).fullpath();return this.#V.set(i,e),e}resolvePosix(...t){let i="";for(let s=t.length-1;s>=0;s--){const e=t[s];if(e&&"."!==e&&(i=i?`${e}/${i}`:e,this.isAbsolute(e)))break}const s=this.#_.get(i);if(void 0!==s)return s;const e=this.cwd.resolve(i).fullpathPosix();return this.#_.set(i,e),e}relative(t=this.cwd){return"string"==typeof t&&(t=this.cwd.resolve(t)),t.relative()}relativePosix(t=this.cwd){return"string"==typeof t&&(t=this.cwd.resolve(t)),t.relativePosix()}basename(t=this.cwd){return"string"==typeof t&&(t=this.cwd.resolve(t)),t.name}dirname(t=this.cwd){return"string"==typeof t&&(t=this.cwd.resolve(t)),(t.parent||t).fullpath()}async readdir(t=this.cwd,i={withFileTypes:!0}){"string"==typeof t?t=this.cwd.resolve(t):t instanceof PathBase||(i=t,t=this.cwd);const{withFileTypes:s}=i;if(t.canReaddir()){const i=await t.readdir();return s?i:i.map(t=>t.name)}return[]}readdirSync(t=this.cwd,i={withFileTypes:!0}){"string"==typeof t?t=this.cwd.resolve(t):t instanceof PathBase||(i=t,t=this.cwd);const{withFileTypes:s=!0}=i;return t.canReaddir()?s?t.readdirSync():t.readdirSync().map(t=>t.name):[]}async lstat(t=this.cwd){return"string"==typeof t&&(t=this.cwd.resolve(t)),t.lstat()}lstatSync(t=this.cwd){return"string"==typeof t&&(t=this.cwd.resolve(t)),t.lstatSync()}async readlink(t=this.cwd,{withFileTypes:i}={withFileTypes:!1}){"string"==typeof t?t=this.cwd.resolve(t):t instanceof PathBase||(i=t.withFileTypes,t=this.cwd);const s=await t.readlink();return i?s:s?.fullpath()}readlinkSync(t=this.cwd,{withFileTypes:i}={withFileTypes:!1}){"string"==typeof t?t=this.cwd.resolve(t):t instanceof PathBase||(i=t.withFileTypes,t=this.cwd);const s=t.readlinkSync();return i?s:s?.fullpath()}async realpath(t=this.cwd,{withFileTypes:i}={withFileTypes:!1}){"string"==typeof t?t=this.cwd.resolve(t):t instanceof PathBase||(i=t.withFileTypes,t=this.cwd);const s=await t.realpath();return i?s:s?.fullpath()}realpathSync(t=this.cwd,{withFileTypes:i}={withFileTypes:!1}){"string"==typeof t?t=this.cwd.resolve(t):t instanceof PathBase||(i=t.withFileTypes,t=this.cwd);const s=t.realpathSync();return i?s:s?.fullpath()}async walk(t=this.cwd,i={}){"string"==typeof t?t=this.cwd.resolve(t):t instanceof PathBase||(i=t,t=this.cwd);const{withFileTypes:s=!0,follow:e=!1,filter:r,walkFilter:n}=i,h=[];r&&!r(t)||h.push(s?t:t.fullpath());const o=new Set,a=(t,i)=>{o.add(t),t.readdirCB((t,c)=>{if(t)return i(t);let l=c.length;if(!l)return i();const p=()=>{0===--l&&i()};for(const t of c)r&&!r(t)||h.push(s?t:t.fullpath()),e&&t.isSymbolicLink()?t.realpath().then(t=>t?.isUnknown()?t.lstat():t).then(t=>t?.shouldWalk(o,n)?a(t,p):p()):t.shouldWalk(o,n)?a(t,p):p()},!0)},c=t;return new Promise((t,i)=>{a(c,s=>{if(s)return i(s);t(h)})})}walkSync(t=this.cwd,i={}){"string"==typeof t?t=this.cwd.resolve(t):t instanceof PathBase||(i=t,t=this.cwd);const{withFileTypes:s=!0,follow:e=!1,filter:r,walkFilter:n}=i,h=[];r&&!r(t)||h.push(s?t:t.fullpath());const o=new Set([t]);for(const t of o){const i=t.readdirSync();for(const t of i){r&&!r(t)||h.push(s?t:t.fullpath());let i=t;if(t.isSymbolicLink()){if(!e||!(i=t.realpathSync()))continue;i.isUnknown()&&i.lstatSync()}i.shouldWalk(o,n)&&o.add(i)}}return h}[Symbol.asyncIterator](){return this.iterate()}iterate(t=this.cwd,i={}){return"string"==typeof t?t=this.cwd.resolve(t):t instanceof PathBase||(i=t,t=this.cwd),this.stream(t,i)[Symbol.asyncIterator]()}[Symbol.iterator](){return this.iterateSync()}*iterateSync(t=this.cwd,i={}){"string"==typeof t?t=this.cwd.resolve(t):t instanceof PathBase||(i=t,t=this.cwd);const{withFileTypes:s=!0,follow:e=!1,filter:r,walkFilter:n}=i;r&&!r(t)||(yield s?t:t.fullpath());const h=new Set([t]);for(const t of h){const i=t.readdirSync();for(const t of i){r&&!r(t)||(yield s?t:t.fullpath());let i=t;if(t.isSymbolicLink()){if(!e||!(i=t.realpathSync()))continue;i.isUnknown()&&i.lstatSync()}i.shouldWalk(h,n)&&h.add(i)}}}stream(t=this.cwd,i={}){"string"==typeof t?t=this.cwd.resolve(t):t instanceof PathBase||(i=t,t=this.cwd);const{withFileTypes:s=!0,follow:e=!1,filter:r,walkFilter:n}=i,h=new Minipass({objectMode:!0});r&&!r(t)||h.write(s?t:t.fullpath());const o=new Set,a=[t];let c=0;const l=()=>{let t=!1;for(;!t;){const i=a.shift();if(!i)return void(0===c&&h.end());c++,o.add(i);const p=(i,u,f=!1)=>{if(i)return h.emit("error",i);if(e&&!f){const t=[];for(const i of u)i.isSymbolicLink()&&t.push(i.realpath().then(t=>t?.isUnknown()?t.lstat():t));if(t.length)return void Promise.all(t).then(()=>p(null,u,!0))}for(const i of u)!i||r&&!r(i)||h.write(s?i:i.fullpath())||(t=!0);c--;for(const t of u){const i=t.realpathCached()||t;i.shouldWalk(o,n)&&a.push(i)}t&&!h.flowing?h.once("drain",l):d||l()};let d=!0;i.readdirCB(p,!0),d=!1}};return l(),h}streamSync(t=this.cwd,i={}){"string"==typeof t?t=this.cwd.resolve(t):t instanceof PathBase||(i=t,t=this.cwd);const{withFileTypes:s=!0,follow:e=!1,filter:r,walkFilter:n}=i,h=new Minipass({objectMode:!0}),o=new Set;r&&!r(t)||h.write(s?t:t.fullpath());const a=[t];let c=0;const l=()=>{let t=!1;for(;!t;){const i=a.shift();if(!i)return void(0===c&&h.end());c++,o.add(i);const l=i.readdirSync();for(const i of l)r&&!r(i)||h.write(s?i:i.fullpath())||(t=!0);c--;for(const t of l){let i=t;if(t.isSymbolicLink()){if(!e||!(i=t.realpathSync()))continue;i.isUnknown()&&i.lstatSync()}i.shouldWalk(o,n)&&a.push(i)}}t&&!h.flowing&&h.once("drain",l)};return l(),h}chdir(t=this.cwd){const i=this.cwd;this.cwd="string"==typeof t?this.cwd.resolve(t):t,this.cwd[setAsCwd](i)}}export class PathScurryWin32 extends PathScurryBase{sep="\\";constructor(t=process.cwd(),i={}){const{nocase:s=!0}=i;super(t,win32,"\\",{...i,nocase:s}),this.nocase=s;for(let t=this.cwd;t;t=t.parent)t.nocase=this.nocase}parseRootPath(t){return win32.parse(t).root.toUpperCase()}newRoot(t){return new PathWin32(this.rootPath,4,void 0,this.roots,this.nocase,this.childrenCache(),{fs:t})}isAbsolute(t){return t.startsWith("/")||t.startsWith("\\")||/^[a-z]:(\/|\\)/i.test(t)}}export class PathScurryPosix extends PathScurryBase{sep="/";constructor(t=process.cwd(),i={}){const{nocase:s=!1}=i;super(t,posix,"/",{...i,nocase:s}),this.nocase=s}parseRootPath(t){return"/"}newRoot(t){return new PathPosix(this.rootPath,4,void 0,this.roots,this.nocase,this.childrenCache(),{fs:t})}isAbsolute(t){return t.startsWith("/")}}export class PathScurryDarwin extends PathScurryPosix{constructor(t=process.cwd(),i={}){const{nocase:s=!0}=i;super(t,{...i,nocase:s})}}export const Path="win32"===process.platform?PathWin32:PathPosix;export const PathScurry="win32"===process.platform?PathScurryWin32:"darwin"===process.platform?PathScurryDarwin:PathScurryPosix;