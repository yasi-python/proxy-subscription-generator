"use strict";const max=1e6,fastqueue=require("./")(worker,1),{promisify:promisify}=require("util"),immediate=promisify(setImmediate),qPromise=require("./").promise(immediate,1),async=require("async"),neo=require("neo-async"),asyncqueue=async.queue(worker,1),neoqueue=neo.queue(worker,1);function bench(e,n){const u=max+"*"+e.name;let c=-1;console.time(u),function i(){++c<max?e(i):(console.timeEnd(u),n&&n())}()}function benchFastQ(e){fastqueue.push(42,e)}function benchAsyncQueue(e){asyncqueue.push(42,e)}function benchNeoQueue(e){neoqueue.push(42,e)}function worker(e,n){setImmediate(n)}function benchSetImmediate(e){worker(42,e)}function benchFastQPromise(e){qPromise.push(42).then(function(){e()},e)}function runBench(e){async.eachSeries([benchSetImmediate,benchFastQ,benchNeoQueue,benchAsyncQueue,benchFastQPromise],bench,e)}runBench(runBench);