"use strict";const stringWidth=require("string-width"),stripAnsi=require("strip-ansi"),ansiStyles=require("ansi-styles"),ESCAPES=new Set(["","Â›"]),END_CODE=39,ANSI_ESCAPE_BELL="",ANSI_CSI="[",ANSI_OSC="]",ANSI_SGR_TERMINATOR="m",ANSI_ESCAPE_LINK="]8;;",wrapAnsi=t=>`${ESCAPES.values().next().value}[${t}m`,wrapAnsiHyperlink=t=>`${ESCAPES.values().next().value}]8;;${t}`,wordLengths=t=>t.split(" ").map(t=>stringWidth(t)),wrapWord=(t,i,e)=>{const r=[...i];let n=!1,s=!1,o=stringWidth(stripAnsi(t[t.length-1]));for(const[i,l]of r.entries()){const p=stringWidth(l);o+p<=e?t[t.length-1]+=l:(t.push(l),o=0),ESCAPES.has(l)&&(n=!0,s=r.slice(i+1).join("").startsWith("]8;;")),n?s?""===l&&(n=!1,s=!1):"m"===l&&(n=!1):(o+=p,o===e&&i<r.length-1&&(t.push(""),o=0))}!o&&t[t.length-1].length>0&&t.length>1&&(t[t.length-2]+=t.pop())},stringVisibleTrimSpacesRight=t=>{const i=t.split(" ");let e=i.length;for(;e>0&&!(stringWidth(i[e-1])>0);)e--;return e===i.length?t:i.slice(0,e).join(" ")+i.slice(e).join("")},exec=(t,i,e={})=>{if(!1!==e.trim&&""===t.trim())return"";let r,n,s="";const o=wordLengths(t);let l=[""];for(const[r,n]of t.split(" ").entries()){!1!==e.trim&&(l[l.length-1]=l[l.length-1].trimStart());let t=stringWidth(l[l.length-1]);if(0!==r&&(t>=i&&(!1===e.wordWrap||!1===e.trim)&&(l.push(""),t=0),(t>0||!1===e.trim)&&(l[l.length-1]+=" ",t++)),e.hard&&o[r]>i){const e=i-t,s=1+Math.floor((o[r]-e-1)/i);Math.floor((o[r]-1)/i)<s&&l.push(""),wrapWord(l,n,i);continue}if(t+o[r]>i&&t>0&&o[r]>0){if(!1===e.wordWrap&&t<i){wrapWord(l,n,i);continue}l.push("")}t+o[r]>i&&!1===e.wordWrap?wrapWord(l,n,i):l[l.length-1]+=n}!1!==e.trim&&(l=l.map(stringVisibleTrimSpacesRight));const p=[...l.join("\n")];for(const[t,i]of p.entries()){if(s+=i,ESCAPES.has(i)){const{groups:i}=new RegExp("(?:\\[(?<code>\\d+)m|\\]8;;(?<uri>.*))").exec(p.slice(t).join(""))||{groups:{}};if(void 0!==i.code){const t=Number.parseFloat(i.code);r=39===t?void 0:t}else void 0!==i.uri&&(n=0===i.uri.length?void 0:i.uri)}const e=ansiStyles.codes.get(Number(r));"\n"===p[t+1]?(n&&(s+=wrapAnsiHyperlink("")),r&&e&&(s+=wrapAnsi(e))):"\n"===i&&(r&&e&&(s+=wrapAnsi(r)),n&&(s+=wrapAnsiHyperlink(n)))}return s};module.exports=(t,i,e)=>String(t).normalize().replace(/\r\n/g,"\n").split("\n").map(t=>exec(t,i,e)).join("\n");