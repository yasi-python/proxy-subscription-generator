let{execSync:execSync}=require("child_process"),escalade=require("escalade/sync"),{existsSync:existsSync,readFileSync:readFileSync,writeFileSync:writeFileSync}=require("fs"),{join:join}=require("path"),pico=require("picocolors");const{detectEOL:detectEOL,detectIndent:detectIndent}=require("./utils");function BrowserslistUpdateError(e){this.name="BrowserslistUpdateError",this.message=e,this.browserslist=!0,Error.captureStackTrace&&Error.captureStackTrace(this,BrowserslistUpdateError)}BrowserslistUpdateError.prototype=Error.prototype;const IsHadoopExists=!!process.env.HADOOP_HOME,yarnCommand=IsHadoopExists?"yarnpkg":"yarn";function defaultPrint(e){process.stdout.write(e)}function detectLockfile(){let e=escalade(".",(e,n)=>-1!==n.indexOf("package.json")?e:"");if(!e)throw new BrowserslistUpdateError("Cannot find package.json. Is this the right directory to run `npx update-browserslist-db` in?");let n=join(e,"package-lock.json"),t=join(e,"npm-shrinkwrap.json"),i=join(e,"yarn.lock"),r=join(e,"pnpm-lock.yaml"),o=join(e,"bun.lock"),s=join(e,"bun.lockb");if(existsSync(r))return{file:r,mode:"pnpm"};if(existsSync(o)||existsSync(s))return{file:o,mode:"bun"};if(existsSync(n))return{file:n,mode:"npm"};if(existsSync(i)){let e={file:i,mode:"yarn"};return e.content=readFileSync(e.file).toString(),e.version=/# yarn lockfile v1/.test(e.content)?1:2,e}if(existsSync(t))return{file:t,mode:"npm"};throw new BrowserslistUpdateError('No lockfile found. Run "npm install", "yarn install" or "pnpm install"')}function getLatestInfo(e){return"yarn"===e.mode?1===e.version?JSON.parse(execSync(yarnCommand+" info caniuse-lite --json").toString()).data:JSON.parse(execSync(yarnCommand+" npm info caniuse-lite --json").toString()):"pnpm"===e.mode?JSON.parse(execSync("pnpm info caniuse-lite --json").toString()):"bun"===e.mode?JSON.parse(execSync(" npm info caniuse-lite --json").toString()):JSON.parse(execSync("npm show caniuse-lite --json").toString())}function getBrowsers(){return require("browserslist")().reduce((e,n)=>(e[n[0]]||(e[n[0]]=[]),e[n[0]].push(n[1]),e),{})}function diffBrowsers(e,n){return Object.keys(e).concat(Object.keys(n).filter(n=>void 0===e[n])).map(t=>{let i=e[t]||[],r=n[t]||[],o=i.filter(e=>r.includes(e)),s=r.filter(e=>!o.includes(e));return i.filter(e=>!o.includes(e)).map(e=>pico.red("- "+t+" "+e)).concat(s.map(e=>pico.green("+ "+t+" "+e)))}).reduce((e,n)=>e.concat(n),[]).join("\n")}function updateNpmLockfile(e,n){let t={latest:n,versions:[]},i=deletePackage(JSON.parse(e.content),t);return t.content=JSON.stringify(i,null,detectIndent(e.content)),t}function deletePackage(e,n){if(e.dependencies){if(e.dependencies["caniuse-lite"]){let t=e.dependencies["caniuse-lite"].version;n.versions[t]=!0,delete e.dependencies["caniuse-lite"]}for(let t in e.dependencies)e.dependencies[t]=deletePackage(e.dependencies[t],n)}if(e.packages)for(let t in e.packages)t.endsWith("/caniuse-lite")&&(n.versions[e.packages[t].version]=!0,delete e.packages[t]);return e}let yarnVersionRe=/version "(.*?)"/;function updateYarnLockfile(e,n){let t=e.content.split(/(\n{2,})/).map(e=>e.split("\n")),i={};return t.forEach(e=>{if(-1!==e[0].indexOf("caniuse-lite@")){let t=yarnVersionRe.exec(e[1]);i[t[1]]=!0,t[1]!==n.version&&(e[1]=e[1].replace(/version "[^"]+"/,'version "'+n.version+'"'),e[2]=e[2].replace(/resolved "[^"]+"/,'resolved "'+n.dist.tarball+'"'),4===e.length&&(e[3]=n.dist.integrity?e[3].replace(/integrity .+/,"integrity "+n.dist.integrity):""))}}),{content:t.map(e=>e.join("\n")).join(""),versions:i}}function updateLockfile(e,n){let t;return e.content||(e.content=readFileSync(e.file).toString()),t="yarn"===e.mode?updateYarnLockfile(e,n):updateNpmLockfile(e,n),t.content=t.content.replace(/\n/g,detectEOL(e.content)),t}function updatePackageManually(e,n,t){let i=updateLockfile(n,t),r=Object.keys(i.versions).sort();if(1===r.length&&r[0]===t.version)return void e("Installed version:  "+pico.bold(pico.green(r[0]))+"\n"+pico.bold(pico.green("caniuse-lite is up to date"))+"\n");0===r.length&&(r[0]="none"),e("Installed version"+(1===r.length?":  ":"s: ")+pico.bold(pico.red(r.join(", ")))+"\nRemoving old caniuse-lite from lock file\n"),writeFileSync(n.file,i.content);let o="yarn"===n.mode?yarnCommand+" add -W":n.mode+" install";e("Installing new caniuse-lite version\n"+pico.yellow("$ "+o+" caniuse-lite")+"\n");try{execSync(o+" caniuse-lite")}catch(n){e(pico.red("\n"+n.stack+"\n\nProblem with `"+o+" caniuse-lite` call. Run it manually.\n")),process.exit(1)}let s="yarn"===n.mode?yarnCommand+" remove -W":n.mode+" uninstall";e("Cleaning package.json dependencies from caniuse-lite\n"+pico.yellow("$ "+s+" caniuse-lite")+"\n"),execSync(s+" caniuse-lite")}function updateWith(e,n){e("Updating caniuse-lite version\n"+pico.yellow("$ "+n)+"\n");try{execSync(n)}catch(t){e(pico.red(t.stdout.toString())),e(pico.red("\n"+t.stack+"\n\nProblem with `"+n+"` call. Run it manually.\n")),process.exit(1)}}module.exports=function(e=defaultPrint){let n,t,i,r=detectLockfile(),o=getLatestInfo(r);try{t=getBrowsers()}catch(e){n=e}if(e("Latest version:     "+pico.bold(pico.green(o.version))+"\n"),"yarn"===r.mode&&1!==r.version?updateWith(e,yarnCommand+" up -R caniuse-lite"):"pnpm"===r.mode?updateWith(e,"pnpm up caniuse-lite"):"bun"===r.mode?updateWith(e,"bun update caniuse-lite"):updatePackageManually(e,r,o),e("caniuse-lite has been successfully updated\n"),!n)try{i=getBrowsers()}catch(e){n=e}if(n)n.message.includes("Cannot find module 'browserslist'")?e(pico.gray("Install `browserslist` to your direct dependencies to see target browser changes\n")):e(pico.gray("Problem with browser list retrieval.\nTarget browser changes wonâ€™t be shown.\n"));else{let n=diffBrowsers(t,i);n?(e("\nTarget browser changes:\n"),e(n+"\n")):e("\n"+pico.green("No target browser changes")+"\n")}};